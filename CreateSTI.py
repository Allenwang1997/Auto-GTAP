__author__ = "Andre Barbe"
__project__ = "Auto-GTAP"
__created__ = "2018-3-13"
__altered__ = "2018-4-30"


class CreateSTI(object):
    """Creates an STI File for controlling SLTOHT
    SLTOHT exports variables from the .sl4 file to a .csv file
    The STI file tells SLTOHT where its input and output files are"""

    # Also creates STI files for PGSing .tab files

    __slots__ = ["input_file_name", "simulation_name", "sti_type"]

    def __init__(self, input_file_name: str, simulation_name: str, sti_type: str) -> None:
        self.input_file_name = input_file_name
        self.simulation_name = simulation_name
        self.sti_type = sti_type

        # Create list of lines to write to STI file
        if self.sti_type == "sltoht":
            line_list = [
                # First, select general options
                "bat         		! Run in batch. \n",
                "log		        ! Start a log file \n",
                "b		        	! Output to both terminal and log file \n",
                "sim_{0}_sltoth_sti.log	    	! Name of log file\n".format(self.simulation_name),
                "ses                ! Output to spreadsheet with element labels \n",
                ",                  ! Character to use for data separation \n",
                "shl                ! Show level results, if available \n",
                "                   ! Done selecting general options \n",
                "sim_{0}.sl4            ! Location of sl4 file to convert to csv \n".format(self.simulation_name),
                "c                  ! Want both levels and cumulative from solution file \n",
                "y                  ! Use file to choose which variables and components to ouptut \n",
                "sim_{0}.map            ! Name of file to use choosing which variables and components to output \n".format(
                    self.simulation_name),
                "sim_{0}.csv            ! Name of file to output to".format(self.simulation_name)
            ]
            output_file_name = "sim_{0}_sltoht".format(self.simulation_name)

        if self.sti_type == "gtap-e":
            line_list = [
                "!   gtap.sti \n",
                "! == == == == \n",
                "! \n",
                "!   TABLO sti file for GTAP 6.1 \n",
                "! \n",
                "bat         ! Run in batch. \n",
                " \n",
                "gtap        ! name of TABLO input file \n",
                "gtap        ! name of information file \n",
                "c           ! Perform condensation. \n",
                "o           ! Omit one or more variables. \n",
                "atall \n",
                "tf \n",
                " \n",
                "b           ! Substitute a variable and backsolve for it. \n",
                "pgd \n",
                "GHHDPRICE \n",
                "b \n",
                "pgm \n",
                "GHHIPRICES \n",
                "b \n",
                "pgt \n",
                "GCOMPRICE \n",
                "b \n",
                "qgm \n",
                "GHHLDAGRIMP \n",
                "b \n",
                "qgt \n",
                "QGTEQ \n",
                "b \n",
                "pgov \n",
                "GPRICEINDEX \n",
                "b \n",
                "qpt \n",
                "QPTEQ \n",
                "b \n",
                "ppd \n",
                "PHHDPRICE \n",
                "b \n",
                "ppm \n",
                "PHHIPRICES \n",
                "b \n",
                "qpm \n",
                "PHHLDAGRIMP \n",
                "b \n",
                "ppt \n",
                "PCOMPRICE \n",
                "b \n",
                "qft \n",
                "QFTEQ \n",
                "b \n",
                "pfd \n",
                "DMNDDPRICE \n",
                "b \n",
                "pfm \n",
                "DMNDIPRICES \n",
                "b \n",
                "pft \n",
                "ICOMPRICE \n",
                "b \n",
                "qfm \n",
                "INDIMP \n",
                "b \n",
                "ao \n",
                "AOWORLD \n",
                "b \n",
                "af \n",
                "AFWORLD \n",
                "b \n",
                "qfe \n",
                "QFEEQ \n",
                "b \n",
                "pfob \n",
                "EXPRICES \n",
                "b \n",
                "pms \n",
                "MKTPRICES \n",
                "b \n",
                "qtmfsd \n",
                "QTRANS_MFSD \n",
                "b \n",
                "ptrans \n",
                "TRANSCOSTINDEX \n",
                "b \n",
                "atmfsd \n",
                "TRANSTECHANGE \n",
                "b \n",
                "pcif \n",
                "FOBCIF \n",
                "b \n",
                "compvalad \n",
                "COMPVALADEQ \n",
                "b \n",
                "CNTqor \n",
                "CONT_EV_qor \n",
                "b \n",
                "CNTqoir \n",
                "CONT_EV_qoir \n",
                "b \n",
                "CNTqfer \n",
                "CONT_EV_qfer \n",
                "b \n",
                "CNTqfeir \n",
                "CONT_EV_qfeir \n",
                "b \n",
                "CNTqfeijr \n",
                "CONT_EV_qfeijr \n",
                "b \n",
                "CNTqfmr \n",
                "CONT_EV_qfmr \n",
                "b \n",
                "CNTqfmir \n",
                "CONT_EV_qfmir \n",
                "b \n",
                "CNTqfmijr \n",
                "CONT_EV_qfmijr \n",
                "b \n",
                "CNTqfdr \n",
                "CONT_EV_qfdr \n",
                "b \n",
                "CNTqfdir \n",
                "CONT_EV_qfdir \n",
                "b \n",
                "CNTqfdijr \n",
                "CONT_EV_qfdijr \n",
                "b \n",
                "CNTqpmr \n",
                "CONT_EV_qpmr \n",
                "b \n",
                "CNTqpmir \n",
                "CONT_EV_qpmir \n",
                "b \n",
                "CNTqpdr \n",
                "CONT_EV_qpdr \n",
                "b \n",
                "CNTqpdir \n",
                "CONT_EV_qpdir \n",
                "b \n",
                "CNTqgmr \n",
                "CONT_EV_qgmr \n",
                "b \n",
                "CNTqgmir \n",
                "CONT_EV_qgmir \n",
                "b \n",
                "CNTqgdr \n",
                "CONT_EV_qgdr \n",
                "b \n",
                "CNTqgdir \n",
                "CONT_EV_qgdir \n",
                "b \n",
                "CNTqxsr \n",
                "CONT_EV_qxsr \n",
                "b \n",
                "CNTqxsirs \n",
                "CONT_EV_qxsirs \n",
                "b \n",
                "CNTqimr \n",
                "CONT_EV_qimr \n",
                "b \n",
                "CNTqimisr \n",
                "CONT_EV_qimisr \n",
                "b \n",
                "CNTalleffr \n",
                "CONT_EV_alleffr \n",
                "b \n",
                "CNTtotr \n",
                "CONT_EV_totr \n",
                "b \n",
                "CNTtech_aoir \n",
                "CONT_EV_tech_aoir \n",
                "b \n",
                "CNTtech_afijr \n",
                "CONT_EV_tech_afijr \n",
                "b \n",
                "CNTtech_afmfdsd \n",
                "CONT_EV_tech_afmfdsd \n",
                "b \n",
                "CNTtech_amsirs \n",
                "CONT_EV_tech_amsirs \n",
                "e           ! Exit condensation. \n",
                "a           ! Proceed to automatic code generation. \n",
                "pgs         ! Write a GEMSIM program. \n",
                " \n",
                "gtap        ! name of program file \n",
                "! \n",
                "! \n",
                "!   end of stored input \n",
                "!   ------------------- \n"
            ]
            output_file_name = self.input_file_name

        if self.sti_type == "gtap-v6":
            line_list = [
                "!___________________________start of GTAP.STI file_____________________\n",
                "!\n",
                "bat       ! This runs in batch mode\n",
                "\n",
                "gtap      ! file output .tab\n",
                "gtap      ! file output .inf\n",
                "c         ! choose condensation\n",
                "o         ! begin with ommitting the unnecessary policy variables\n",
                "tf\n",
                "tpm\n",
                "tpd\n",
                "tgm\n",
                "tgd\n",
                "tfm\n",
                "tfd\n",
                "atall     ! omit the four-dimensional shock to margins tech change\n",
                "! aoall   leave in for gtaptech version for chp11 and chp13\n",
                "avaall    ! omit the three-dimensional shock to value added tech change\n",
                "! afall   leave in for gtaptech version for chp11 and chp13\n",
                "! afeall  leave in for gtaptech version for chp11 and chp13\n",
                "\n",
                "b\n",
                "pfd\n",
                "DMNDDPRICE\n",
                "b\n",
                "compvalad\n",
                "compvaladeq\n",
                "b\n",
                "af\n",
                "AFWORLD   ! added JMH june 7 2000 to evade need for GEMPACK licence on CHP10\n",
                "b\n",
                "ao\n",
                "AOWORLD   ! added JMH june 7 2000 to evade need for GEMPACK licence on CHP10\n",
                "b\n",
                "ava\n",
                "AVAWORLD   ! added JMH june 7 2000 to evade need for GEMPACK licence on CHP10\n",
                "b\n",
                "afe\n",
                "AFEWORLD   ! added JMH june 7 2000 to evade need for GEMPACK licence on CHP10\n",
                "b\n",
                "ppm\n",
                "PHHIPRICES\n",
                "b\n",
                "pfm\n",
                "DMNDIPRICES\n",
                "b\n",
                "pms\n",
                "MKTPRICES\n",
                "b\n",
                "pfob\n",
                "EXPRICES\n",
                "b\n",
                "pcif\n",
                "FOBCIF\n",
                "b\n",
                "pf\n",
                "ICOMPRICE\n",
                "b\n",
                "ppd\n",
                "PHHDPRICE\n",
                "b\n",
                "pgm\n",
                "GHHIPRICES\n",
                "b\n",
                "pgd\n",
                "GHHDPRICE\n",
                "b\n",
                "qfm\n",
                "INDIMP\n",
                "!b     needed for geelas\n",
                "!qfd\n",
                "!INDDOM\n",
                "b\n",
                "pvaen\n",
                "VAPRICE\n",
                "!b          this has been suppressed by JMB Sept. 2001\n",
                "!qfe\n",
                "!ENDWDEMAND\n",
                "b\n",
                "qvaen\n",
                "VADEMAND\n",
                "b\n",
                "qf\n",
                "INTDEMAND\n",
                "b\n",
                "pgov\n",
                "GPRICEINDEX\n",
                "b\n",
                "qg\n",
                "GOVDMNDS\n",
                "b\n",
                "pg\n",
                "GCOMPRICE\n",
                "b\n",
                "qgm\n",
                "GHHLDAGRIMP\n",
                "!b    needed for GEELAS\n",
                "!qgd\n",
                "!GHHLDDOM\n",
                "b\n",
                "qp\n",
                "PRIVDMNDS\n",
                "!b   needed for geelas\n",
                "!qpd\n",
                "!PHHLDDOM\n",
                "b\n",
                "qpm\n",
                "PHHLDAGRIMP\n",
                "b           ! These are new backsolves associated with trade and transport\n",
                "qtmfsd\n",
                "QTRANS_MFSD\n",
                "b\n",
                "ptrans\n",
                "TRANSCOSTINDEX\n",
                "b\n",
                "atmfsd\n",
                "TRANSTECHANGE\n",
                "b           ! Backsolves and substitutions associated with welfare decomposition\n",
                "CNTqor\n",
                "CONT_EV_qor\n",
                "b\n",
                "CNTqoir\n",
                "CONT_EV_qoir\n",
                "b\n",
                "CNTqfer\n",
                "CONT_EV_qfer\n",
                "b\n",
                "CNTqfeir\n",
                "CONT_EV_qfeir\n",
                "! Summary variables not used in DECOMP have been commented out of GTAP.TAB\n",
                "!s\n",
                "!CNTqfejr\n",
                "!CONT_EV_qfejr\n",
                "b\n",
                "CNTqfeijr\n",
                "CONT_EV_qfeijr\n",
                "b\n",
                "CNTqfmr\n",
                "CONT_EV_qfmr\n",
                "b\n",
                "CNTqfmir\n",
                "CONT_EV_qfmir\n",
                "!s\n",
                "!CNTqfmjr\n",
                "!CONT_EV_qfmjr\n",
                "b\n",
                "CNTqfmijr\n",
                "CONT_EV_qfmijr\n",
                "b\n",
                "CNTqfdr\n",
                "CONT_EV_qfdr\n",
                "b\n",
                "CNTqfdir\n",
                "CONT_EV_qfdir\n",
                "!s\n",
                "!CNTqfdjr\n",
                "!CONT_EV_qfdjr\n",
                "b\n",
                "CNTqfdijr\n",
                "CONT_EV_qfdijr\n",
                "b\n",
                "CNTqpmr\n",
                "CONT_EV_qpmr\n",
                "b\n",
                "CNTqpmir\n",
                "CONT_EV_qpmir\n",
                "b\n",
                "CNTqpdr\n",
                "CONT_EV_qpdr\n",
                "b\n",
                "CNTqpdir\n",
                "CONT_EV_qpdir\n",
                "b\n",
                "CNTqgmr\n",
                "CONT_EV_qgmr\n",
                "b\n",
                "CNTqgmir\n",
                "CONT_EV_qgmir\n",
                "b\n",
                "CNTqgdr\n",
                "CONT_EV_qgdr\n",
                "b\n",
                "CNTqgdir\n",
                "CONT_EV_qgdir\n",
                "b\n",
                "CNTqxsr\n",
                "CONT_EV_qxsr\n",
                "!s\n",
                "!CNTqxsir\n",
                "!CONT_EV_qxsir\n",
                "!s\n",
                "!CNTqxsrs\n",
                "!CONT_EV_qxsrs\n",
                "b\n",
                "CNTqxsirs\n",
                "CONT_EV_qxsirs\n",
                "b\n",
                "CNTqimr\n",
                "CONT_EV_qimr\n",
                "!s\n",
                "!CNTqimir\n",
                "!CONT_EV_qimir\n",
                "!s\n",
                "!CNTqimsr\n",
                "!CONT_EV_qimsr\n",
                "b\n",
                "CNTqimisr\n",
                "CONT_EV_qimisr\n",
                "b\n",
                "CNTalleffr\n",
                "CONT_EV_alleffr\n",
                "!s\n",
                "!CNTtech_atrisr\n",
                "!CONT_EV_tech_atrisr\n",
                "b\n",
                "CNTtotr\n",
                "CONT_EV_totr\n",
                "b\n",
                "CNTtech_avajr\n",
                "CONT_EV_tech_avajr\n",
                "!s\n",
                "!CNTtech_afjr\n",
                "!CONT_EV_tech_afjr\n",
                "b\n",
                "CNTtech_aoir\n",
                "CONT_EV_tech_aoir\n",
                "!s\n",
                "!CNTtech_afejr\n",
                "!CONT_EV_tech_afejr\n",
                "b\n",
                "CNTtech_afeijr\n",
                "CONT_EV_tech_afeijr\n",
                "!s\n",
                "!CNTtech_atrir\n",
                "!CONT_EV_tech_atrir\n",
                "!s\n",
                "!CNTtech_atrsr\n",
                "!CONT_EV_tech_atrsr\n",
                "b\n",
                "CNTtech_afmfdsd\n",
                "CONT_EV_tech_afmfdsd\n",
                "b\n",
                "CNTtech_afijr\n",
                "CONT_EV_tech_afijr\n",
                "!s\n",
                "!CNTtech_afir\n",
                "!CONT_EV_tech_afir\n",
                "b\n",
                "CNTtech_amsirs\n",
                "CONT_EV_tech_amsirs\n",
                "! End of backsolves and substitutions associated with welfare decomposition\n",
                "e           ! exit condensation\n",
                "a           ! automatic code generation\n",
                "! pgs       ! prepare for GEMSIM\n",
                "pgs      	! write a GEMSIM program\n",
                "\n",
                "GTAP       ! Name of program\n",
                "!________________________________end of file_____________________"
            ]
            output_file_name = self.input_file_name

        if self.sti_type == "gtap-v7":
            line_list = [
                "!   gtapv7.sti\n",
                "!   ==========\n",
                "!\n",
                "!   TABLO sti file for GTAPv7 model\n",
                "!\n",
                "bat         ! Run in batch.\n",
                "\n",
                "gtapv7      ! name of TABLO input file\n",
                "gtapv7      ! name of information file\n",
                "c           ! Perform condensation\n",
                "o           ! Omit one or more variables\n",
                "atall\n",
                "avaall\n",
                "tfe\n",
                "tfd\n",
                "tfm\n",
                "tgd\n",
                "tgm\n",
                "tpd\n",
                "tpm\n",
                "tid\n",
                "tim\n",
                "!condoptbegin\n",
                "!b                  \n",
                "!qes                 \n",
                "!E_peb              \n",
                "!b                  \n",
                "!pga                 \n",
                "!E_pga               \n",
                "\n",
                "b                   \n",
                "pfactreal           \n",
                "E_pfactreal         \n",
                "b                   \n",
                "CNTqpm              \n",
                "E_CNTqpm            \n",
                "b                   \n",
                "CNTqfd              !mustsub\n",
                "E_CNTqfd            \n",
                "b                   \n",
                "CNTqfr              \n",
                "E_CNTqfr            \n",
                "b                   \n",
                "CNTtechr            \n",
                "E_CNTtechr          \n",
                "b                   \n",
                "CNTqfm              !mustsub\n",
                "E_CNTqfm            \n",
                "b                   \n",
                "qfe                 \n",
                "E_qfe               \n",
                "b                   \n",
                "CNTalleffr          \n",
                "E_CNTalleffr        \n",
                "b                   \n",
                "CNTqim              \n",
                "E_CNTqim            \n",
                "b                   \n",
                "pfd                 !mustsub\n",
                "E_pfd               \n",
                "b                   \n",
                "qia                 \n",
                "E_qia               \n",
                "b                   \n",
                "qtmfsd              !mustsub\n",
                "E_qtmfsd            \n",
                "b                   \n",
                "qfd                 \n",
                "E_qfd               \n",
                "b                   \n",
                "CNTqfe              \n",
                "E_CNTqfe            \n",
                "b                   \n",
                "CNTqgr              \n",
                "E_CNTqgr            \n",
                "b                   \n",
                "c2_cr               \n",
                "E_c2_cr             \n",
                "b                   \n",
                "ptrans              !mustsub\n",
                "E_ptrans            \n",
                "!b                  \n",
                "!qpa                 \n",
                "!E_qpa               \n",
                "b                   \n",
                "atmfsd              !mustsub\n",
                "E_atmfsd            \n",
                "b                   \n",
                "afa                 !mustsub\n",
                "E_afa               \n",
                "b                   \n",
                "qca                 !mustsub\n",
                "E_qca               \n",
                "b                   \n",
                "qfa                 !mustsub\n",
                "E_qfa               \n",
                "b                   \n",
                "pca                 !mustsub\n",
                "E_pca               \n",
                "b                   \n",
                "qfm                 !mustsub\n",
                "E_qfm               \n",
                "b                   \n",
                "compvalad           \n",
                "E_compvalad         \n",
                "b                   \n",
                "qgd                 \n",
                "E_qgd               \n",
                "b                   \n",
                "pfa                 !mustsub\n",
                "E_pfa               \n",
                "b                   \n",
                "pes                 \n",
                "E_pes               \n",
                "b                   \n",
                "pgd                 \n",
                "E_pgd               \n",
                "b                   \n",
                "ps                  !mustsub\n",
                "E_ps                \n",
                "b                   \n",
                "CNTtech_ava         \n",
                "E_CNTtech_ava       \n",
                "b                   \n",
                "CNTendw             \n",
                "E_CNTendw           \n",
                "b                   \n",
                "qint                \n",
                "E_qint              \n",
                "b                   \n",
                "CNTqe               \n",
                "E_CNTqe             \n",
                "b                   \n",
                "pmds                !mustsub\n",
                "E_pmds              \n",
                "b                   \n",
                "pcif                !mustsub\n",
                "E_pcif              \n",
                "!b                   \n",
                "!del_ptax            !mustsub\n",
                "!E_del_ptax          \n",
                "b                   \n",
                "qpd                 \n",
                "E_qpd               \n",
                "b                   \n",
                "CNTqpd              \n",
                "E_CNTqpd            \n",
                "b                   \n",
                "CNTqid              \n",
                "E_CNTqid            \n",
                "b                   \n",
                "c3_cr               \n",
                "E_c3_cr             \n",
                "b                   \n",
                "CNTqms              !mustsub\n",
                "E_CNTqms            \n",
                "!b                  \n",
                "!ao                  \n",
                "!E_ao                \n",
                "b                   \n",
                "qim                 \n",
                "E_qim               \n",
                "b                   \n",
                "CNTtech_ao          \n",
                "E_CNTtech_ao        \n",
                "b                   \n",
                "CNTqca              !mustsub\n",
                "E_CNTqca            \n",
                "b                   \n",
                "qxs                 !mustsub\n",
                "E_qxs               \n",
                "b                   \n",
                "c1_cr               \n",
                "E_c1_cr             \n",
                "b                   \n",
                "CNTqfeer            \n",
                "E_CNTqfeer          \n",
                "b                   \n",
                "qmw                 \n",
                "E_qmw               \n",
                "b                   \n",
                "ppm                 \n",
                "E_ppm               \n",
                "!b                  \n",
                "!qga                 \n",
                "!E_qga               \n",
                "b                   \n",
                "qpm                 \n",
                "E_qpm               \n",
                "b                   \n",
                "CNTtech_ams         !mustsub\n",
                "E_CNTtech_ams       \n",
                "b                   \n",
                "CNTqgd              \n",
                "E_CNTqgd            \n",
                "b                   \n",
                "pfm                 !mustsub\n",
                "E_pfm               \n",
                "b                   \n",
                "qva                 \n",
                "E_qva               \n",
                "b                   \n",
                "pfob                !mustsub\n",
                "E_pfob              \n",
                "b                   \n",
                "pint                \n",
                "E_pint              \n",
                "b                   \n",
                "pfe                 \n",
                "E_pfe               \n",
                "b                   \n",
                "CNTalleffcr         \n",
                "E_CNTalleffcr       \n",
                "b                   \n",
                "CNTtech_af          !mustsub\n",
                "E_CNTtech_af        \n",
                "b                   \n",
                "CNTtech_aint        \n",
                "E_CNTtech_aint      \n",
                "b                   \n",
                "CNTtech_afe         \n",
                "E_CNTtech_afe       \n",
                "!b                  \n",
                "!vmwcif              \n",
                "!E_vmwcif            \n",
                "b                   \n",
                "afe                 \n",
                "E_afe               \n",
                "b                   \n",
                "qid                 \n",
                "E_qid               \n",
                "b                   \n",
                "pva                 \n",
                "E_pva               \n",
                "!b                  \n",
                "!qms                 \n",
                "!E_qms               \n",
                "b                   \n",
                "qgm                 \n",
                "E_qgm               \n",
                "!b                  \n",
                "!atpd                \n",
                "!E_atpd              \n",
                "b                   \n",
                "CNTqo               \n",
                "E_CNTqo             \n",
                "b                   \n",
                "CNTtech_atmfsd      !mustsub\n",
                "E_CNTtech_atmfsd    \n",
                "b                   \n",
                "CNTqgm              \n",
                "E_CNTqgm            \n",
                "b                   \n",
                "ppd                 \n",
                "E_ppd               \n",
                "b                   \n",
                "pgm                 \n",
                "E_pgm               \n",
                "b                   \n",
                "CNTqxs              !mustsub\n",
                "E_CNTqxs            \n",
                "b                   \n",
                "qpev                \n",
                "E_qpev              \n",
                "b                   \n",
                "aint                \n",
                "E_aint              \n",
                "!condoptend\n",
                "e           ! Exit condensation.\n",
                "a           ! Proceed to automatic code generation.\n",
                "pgs         ! Write a GEMSIM program.\n",
                "\n",
                "gtapv7      ! name of GEMSIM program file\n",
                "!\n",
                "!\n",
                "!   end of stored input\n",
                "!   -------------------"
            ]
            output_file_name = self.input_file_name

        # Create final file
        with open("{0}.sti".format(output_file_name), "w+") as writer:  # Create the empty file
            writer.writelines(line_list)  # write the line list to the file
