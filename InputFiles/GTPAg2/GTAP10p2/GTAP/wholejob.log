  
 <aggcheck.for 10-FEB-2016 (a TABLO-generated program)>
   This program accesses some of the routines in the GEMPACK software release
 <GEMPACK Release 11.3.001   May 2014>
  
  
  %%WARNING. Your GEMPACK licence expires on 30-APR-2018.
  You will not be able to run GEMPACK programs
    after that date unless you renew the licence.
  
     -------------------------------------------------------
    !            GEMPACK Software System Licence            !
    !  Source Code Licence for the GEMPACK Software System  !
    !                 Licence No.  GFM-0137                 !
    !          Licence for Release 11.4 of GEMPACK          !
    !          U.S. International Trade Commission          !
    !                     Washington DC                     !
    !                          USA                          !
    !    (Your GEMPACK licence expires on 30-APR-2018.)     !
     -------------------------------------------------------
  
  
     << COPYRIGHT 1987-2010: CoPS/Impact and KPSOFT >>
  
  Current directory is: C:\GTPAg2\GTAP10P2\GTAP
  
  
  Full path name of running EXE is: C:\GTPAg2\GTAP10P2\GTAP\aggcheck.exe
  Fortran compiler = GF32  4.8.1 (rev3, built by mingw-builds project):
  Operating system is Windows 8
  
  
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  
  
                    TABLO-GENERATED PROGRAM OPTIONS
               ( --> indicates those in effect )
  
       BAT Run in batch              STI Take inputs from a Stored-input file
       BPR Brief prompts             SIF Store inputs on a file
       LOG Output to log file        ASI Add to incomplete Stored-input file
                                     CMF Take inputs from a Command file
       EAA Echo all activity           SVX Select variables on XAC file (later)
       CPU Report CPU times            RQF Required figures agreement (extrap)
       NRP Don't reuse pivots        NIR Don't do solution iterative refinement
                                 --> IZ1 Ignore zero coefficients in step 1
                                     KZ2 Keep zero coefficients in steps 2,3 etc
       NEQ Do no equations           NWE Don't warn how well equations solved
       NDS Do no displays            SSI Several subintervals; extrap after each
       NWR Do no writes              M28 Use MA28 routines (rather than MA48)
       NAS Do no assertions          SUI Save updated formula(initial) data
       NUD Do no final updates              Extra Options Screen
       NSM Don't do simulation              --------------------
       NWT Use Newton's method      DTO Display, Terminal/Text write Options
       CR  Check-on-read options
  
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return
  
 (Opened, as text, existing file 'aggcheck.cmf'.)
  (Taking inputs from a command file.)
 (Opened, as text, existing file 'aggcheck.cmf'.)
  
  !  (There is no CREATION information on this file.)
  
  
  --> Reading the Command file.
  
 auxiliary files = aggcheck;
 check-on-read elements = warn; ! Optional: very often needed
 WHS = no ;   ! Do not use sparse format
 cpu=yes ; ! Optional: Reports CPU times for various stages
 log file = yes;  ! Optional
 ! Input files:
 File DSETS = input\SETS.har; ! Set specification for disaggregate data
 File ASETS = maphar.dat; ! Set specification for aggregate data
 ! Output files:
 File checkmap = checkmap.har; ! Diagnostic file
 File SUPP = aggsupp.har; ! Instructions for AggHAR
  
  
  (Finished reading the command file.)
  
  Auxiliary Statement File
  ------------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\aggcheck.axs'.)
  
  Auxiliary Table File
  --------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\aggcheck.axt'.)
  
  !  This file was created at 16:55:32 on 10-FEB-2016 by the program
  !    <TABLO  Version 6.4   April 2012>
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
 [Auxiliary Table File was created by TABLO at 16:55:32 on 10-FEB-2016.]
 [TABLO file used here is "aggcheck.tab".]
 [No TABLO STI file used when TABLO was run.]
  
  (Writing output to log file, and also to the terminal.)
 (Opened new text file 'aggcheck.log'.)
  
  (Reporting CPU times.)
  
  (Not Writing Header arrays Sparsely.)
 [This TG-program was created by TABLO at 16:55:32 on 10-FEB-2016.]
  
  [Starting to check "extra" statements on the Command file.]
  
  
  [Finished checking "extra" statements on the Command file.]
  
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
  This program was written by the GEMPACK program TABLO
  as described in the Information file
  'aggcheck.inf'
  
  This run of the TABLO-generated program
      o can carry out 15 WRITEs
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
 (Range test of initial values will produce warnings.)
  
  (Data file with logical name 'DSETS')
 (Opened, as header, existing file 'input\SETS.har'.)
  
  !  This file was created at 10:47:38 on 28-SEP-2017 by the program
  !    <pretty.for 28-SEP-2017> [pretty.tab,pretty.sti]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'ASETS')
 (Opened, as header, existing file 'maphar.dat'.)
  
  !  This file was created at 4/23/2018 1:45:51 PM by the program
  !    GtapAgg2
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 4/Mar/2016
  !  [The program which created this file was compiled with DELPHI.]
  
  
  (Data file with logical name 'CHECKMAP')
 (Opened new header file 'checkmap.har'.)
  
  (Data file with logical name 'SUPP')
 (Opened new header file 'aggsupp.har'.)
  
  --->  Beginning the preliminary pass (aimed at sets and subsets).
 Set 'REG'
 (Opened, as header, existing file 'input\SETS.har'.)
   (141 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 141.]
 Set 'TRAD_COMM'
   (57 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 57.]
 Set 'ENDW_COMM'
   (8 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 8.]
 Set 'AREG'
 (Opened, as header, existing file 'maphar.dat'.)
   (3 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 3.]
 Set 'ATRAD_COMM'
   (10 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 10.]
 Set 'AENDW_COMM'
   (5 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 5.]
  
  Reading the values of set mapping 'MCOM'
   (57 character strings, each of length 12 read. Header 'DCOM')
  
  Reading the values of set mapping 'MREG'
   (141 character strings, each of length 12 read. Header 'DREG')
  
  Reading the values of set mapping 'MEND'
   (8 character strings, each of length 12 read. Header 'DEND')
 Set 'PROD_COMM'
   [Set has size 58.]
 'TRAD_COMM' as a subset of 'PROD_COMM'
 Set 'APROD_COMM'
   [Set has size 11.]
 'ATRAD_COMM' as a subset of 'APROD_COMM'
  Formula for 'MPRD'
 Set 'S@CGDS'
   [Set has size 1.]
 'S@CGDS' as a subset of 'PROD_COMM'
 'S@CGDS' as a subset of 'APROD_COMM'
  Formula for 'MPRD'
 [CPU for reads, formulas etc is 0.0000000 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
  
  Total memory currently used for all arrays is approximately 0.01 megabytes.
  [Add about 5-10 megabytes for the memory used by the code.]
  
  --->  Beginning the reads, formulas (etc).
 (Opened, for writing, header file 'checkmap.har'.)
 Writing elements of set 'REG'
   (141 character strings, each of length 12 written. Header 'REG ')
 Writing elements of set 'TRAD_COMM'
   (57 character strings, each of length 12 written. Header 'TRAD')
 Writing elements of set 'ENDW_COMM'
   (8 character strings, each of length 12 written. Header 'ENDW')
  
  Reading the values of set mapping 'MCOM'
 (Opened, as header, existing file 'maphar.dat'.)
   (57 character strings, each of length 12 read. Header 'DCOM')
  
  Reading the values of set mapping 'MREG'
   (141 character strings, each of length 12 read. Header 'DREG')
  
  Reading the values of set mapping 'MEND'
   (8 character strings, each of length 12 read. Header 'DEND')
  Formula for 'MPRD'
  Formula for 'MPRD'
 (Opened, for writing, header file 'aggsupp.har'.)
 Writing elements of set 'AREG'
   (3 character strings, each of length 12 written. Header 'H1  ')
 Writing elements of set 'ATRAD_COMM'
   (10 character strings, each of length 12 written. Header 'H2  ')
 Writing elements of set 'AENDW_COMM'
   (5 character strings, each of length 12 written. Header 'H6  ')
 Writing elements of set 'APROD_COMM'
   (11 character strings, each of length 12 written. Header 'HX  ')
 Writing elements of set 'REG'
   (141 character strings, each of length 12 written. Header 'DH1 ')
 Writing elements of set 'TRAD_COMM'
   (57 character strings, each of length 12 written. Header 'DH2 ')
 Writing elements of set 'ENDW_COMM'
   (8 character strings, each of length 12 written. Header 'DH6 ')
 Writing elements of set 'PROD_COMM'
   (58 character strings, each of length 12 written. Header 'DHX ')
 Writing 'MREG'
   (141 character strings, each of length 12 written. Header 'MREG')
 Writing 'MCOM'
   (57 character strings, each of length 12 written. Header 'MCOM')
 Writing 'MPRD'
   (58 character strings, each of length 12 written. Header 'MPRD')
 Writing 'MEND'
   (8 character strings, each of length 12 written. Header 'MEND')
 [CPU for reads, formulas etc is 3.12500000E-02 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
 [CPU for all of this 0-step calculation is 3.12500000E-02 seconds.]
 Elapsed time for all this 0-step calculation is: less than one second.
  [Total CPU is 0.15625000 seconds.]
  
  (Inputs have been taken from the Command file
  'C:\GTPAg2\GTAP10P2\GTAP\aggcheck.cmf')
  
  (The program has completed without error.)
  (There were         1 warnings.)
  (If you have a LOG file, search for '%%W' to see them.)
  (The last was:
   'Your GEMPACK licence will expire on 30-APR-2018')
  Total elapsed time is: less than one second.
  
 (Output has also been written to log file 'aggcheck.log'.)
Running program AggHAR [built 29/Jan/2016] at 4/23/2018 1:45:52 PM
Program AggHAR:
  Using OLD input file:                 input\basedata.har
    and SUP supplementary mapping file: aggsupp.har
to make NEW aggregated file:            aggmain.har

Options:
   Headers unaffected by aggregation will be copied [no U option].
   Original set names will be used on aggregated headers [P option].
   Sparse storage will not be used.
   Memory-conserving method will be used [M option].
Read SUP file: aggsupp.har     flavour: New Fujitsu
Opened OLD file: input\basedata.har     flavour: New Fujitsu

Scanning RE matrices on OLD file for sets.....
The following sets were found in RE matrices on the OLD file (size in brackets):
   TRAD_COMM(57) at header VIMS
   REG(141) at header VIMS
   PROD_COMM(58) at header VIFM
   DIR(2) at header ISEP
   ENDW_COMM(8) at header VFM 
   MARG_COMM(3) at header VST 
   TARTYPE(2) at header VTSS

The following additional sets were found in the SUP file (size in brackets):
   AREG(3) at header H1  
   ATRAD_COMM(10) at header H2  
   AENDW_COMM(5) at header H6  
   APROD_COMM(11) at header HX  

The following subset relations were detected:
   TRAD_COMM(57) subset of PROD_COMM(58)
   MARG_COMM(3) subset of TRAD_COMM(57)
   MARG_COMM(3) subset of PROD_COMM(58)
   ATRAD_COMM(10) subset of APROD_COMM(11)

The following mappings were recognized in the SUP file:
   Mapping MREG from REG(141) to AREG(3)
   Mapping MCOM from TRAD_COMM(57) to ATRAD_COMM(10)
   Mapping MPRD from PROD_COMM(58) to APROD_COMM(11)
   Mapping MEND from ENDW_COMM(8) to AENDW_COMM(5)

Set REG(141) will be mapped by Mapping MREG from REG(141) to AREG(3)

Set TRAD_COMM(57) will be mapped by Mapping MCOM from TRAD_COMM(57) to ATRAD_COMM(10)

Set PROD_COMM(58) will be mapped by Mapping MPRD from PROD_COMM(58) to APROD_COMM(11)

Set ENDW_COMM(8) will be mapped by Mapping MEND from ENDW_COMM(8) to AENDW_COMM(5)

No explicit mapping from set DIR(2)
   Above set will not be remapped.

No explicit mapping from set MARG_COMM(3)
   However MARG_COMM(3) is subset of TRAD_COMM(57)
       which IS mapped by MCOM to set ATRAD_COMM
   Created new set AGGMARG_COMM(1) subset of ATRAD_COMM(10)
   Created new Mapping MAPMARG_COMM from MARG_COMM(3) to AGGMARG_COMM(1)

No explicit mapping from set TARTYPE(2)
   Above set will not be remapped.


Could not locate "WAGG" header on SUP file,
so no weighted aggregation will be performed.

Beginning aggregation .....
Ignored reserved header XXCD
Ignored reserved header XXCR
Ignored reserved header XXCP
Copying data at DREL type 1C
Copied RE data DVER
Aggregated RE data VIMS in dimensions REG REG TRAD_COMM
Aggregated RE data VIWS in dimensions REG REG TRAD_COMM
Aggregated RE data VXWD in dimensions REG REG TRAD_COMM
Aggregated RE data VXMD in dimensions REG REG TRAD_COMM
Aggregated RE data ADRV in dimensions REG REG TRAD_COMM
Aggregated RE data TFRV in dimensions REG REG TRAD_COMM
Aggregated RE data PURV in dimensions REG REG TRAD_COMM
Aggregated RE data MFRV in dimensions REG REG TRAD_COMM
Aggregated RE data VRRV in dimensions REG REG TRAD_COMM
Aggregated RE data XTRV in dimensions REG REG TRAD_COMM
Aggregated RE data VIFM in dimensions REG PROD_COMM TRAD_COMM
Aggregated RE data VDFM in dimensions REG PROD_COMM TRAD_COMM
Aggregated RE data VIFA in dimensions REG PROD_COMM TRAD_COMM
Aggregated RE data VDFA in dimensions REG PROD_COMM TRAD_COMM
Aggregated RE data ISEP in dimensions REG PROD_COMM TRAD_COMM
Aggregated RE data VFM  in dimensions REG PROD_COMM ENDW_COMM
Aggregated RE data VIPM in dimensions REG TRAD_COMM
Aggregated RE data VDPM in dimensions REG TRAD_COMM
Aggregated RE data VIGM in dimensions REG TRAD_COMM
Aggregated RE data VDGM in dimensions REG TRAD_COMM
Aggregated RE data VST  in dimensions REG MARG_COMM
Aggregated RE data EVOA in dimensions REG ENDW_COMM
Aggregated RE data EVFA in dimensions REG PROD_COMM ENDW_COMM
Aggregated RE data VIPA in dimensions REG TRAD_COMM
Aggregated RE data VDPA in dimensions REG TRAD_COMM
Aggregated RE data VIGA in dimensions REG TRAD_COMM
Aggregated RE data VDGA in dimensions REG TRAD_COMM
Aggregated RE data SAVE in dimension  REG
Aggregated RE data VKB  in dimension  REG
Aggregated RE data VDEP in dimension  REG
Aggregated RE data OSEP in dimensions REG TRAD_COMM
Aggregated RE data FBEP in dimensions REG PROD_COMM ENDW_COMM
Aggregated RE data VTWR in dimensions REG REG TRAD_COMM MARG_COMM
Aggregated RE data DPSM in dimension  REG
Aggregated RE data FTRV in dimensions REG PROD_COMM ENDW_COMM
Aggregated RE data POP  in dimension  REG
Aggregated RE data TVOM in dimensions REG TRAD_COMM
Aggregated RE data VTSS in dimensions REG REG TRAD_COMM
Finished OK; created aggregated file: aggmain.har     flavour: New Fujitsu
0.7 seconds
  
 <aggdat.for 10-FEB-2016 (a TABLO-generated program)>
   This program accesses some of the routines in the GEMPACK software release
 <GEMPACK Release 11.3.001   May 2014>
  
  
  %%WARNING. Your GEMPACK licence expires on 30-APR-2018.
  You will not be able to run GEMPACK programs
    after that date unless you renew the licence.
  
     -------------------------------------------------------
    !            GEMPACK Software System Licence            !
    !  Source Code Licence for the GEMPACK Software System  !
    !                 Licence No.  GFM-0137                 !
    !          Licence for Release 11.4 of GEMPACK          !
    !          U.S. International Trade Commission          !
    !                     Washington DC                     !
    !                          USA                          !
    !    (Your GEMPACK licence expires on 30-APR-2018.)     !
     -------------------------------------------------------
  
  
     << COPYRIGHT 1987-2010: CoPS/Impact and KPSOFT >>
  
  Current directory is: C:\GTPAg2\GTAP10P2\GTAP
  
  
  Full path name of running EXE is: C:\GTPAg2\GTAP10P2\GTAP\aggdat.exe
  Fortran compiler = GF32  4.8.1 (rev3, built by mingw-builds project):
  Operating system is Windows 8
  
  
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  
  
                    TABLO-GENERATED PROGRAM OPTIONS
               ( --> indicates those in effect )
  
       BAT Run in batch              STI Take inputs from a Stored-input file
       BPR Brief prompts             SIF Store inputs on a file
       LOG Output to log file        ASI Add to incomplete Stored-input file
                                     CMF Take inputs from a Command file
       EAA Echo all activity           SVX Select variables on XAC file (later)
       CPU Report CPU times            RQF Required figures agreement (extrap)
       NRP Don't reuse pivots        NIR Don't do solution iterative refinement
                                 --> IZ1 Ignore zero coefficients in step 1
                                     KZ2 Keep zero coefficients in steps 2,3 etc
       NEQ Do no equations           NWE Don't warn how well equations solved
       NDS Do no displays            SSI Several subintervals; extrap after each
       NWR Do no writes              M28 Use MA28 routines (rather than MA48)
       NAS Do no assertions          SUI Save updated formula(initial) data
       NUD Do no final updates              Extra Options Screen
       NSM Don't do simulation              --------------------
       NWT Use Newton's method      DTO Display, Terminal/Text write Options
       CR  Check-on-read options
  
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return
  
 (Opened, as text, existing file 'aggdat.cmf'.)
  (Taking inputs from a command file.)
 (Opened, as text, existing file 'aggdat.cmf'.)
  
  !  (There is no CREATION information on this file.)
  
  
  --> Reading the Command file.
  
 auxiliary files = aggdat;
 check-on-read elements = warn; ! Optional: very often needed
 cpu=yes ; ! Optional: Reports CPU times for various stages
 log file = yes;  ! Optional
 WHS = no ;   ! Do not use sparse format
 ! Input files:
 File DDATA = input\basedata.har; ! Disaggregate data in GTAP notation
 File DSETS = input\sets.har; ! Set specification for disaggregate data
 File ASETS = maphar.dat; ! Set specification for aggregate data
 File AGGHAR = aggmain.har; !# data aggregated by AggHAR #;
  
 ! Output files:
 File ADATA = output\basedata.har; ! Aggregated data in GTAP notation
 File GSETS = output\sets.har; !
  
  
  (Finished reading the command file.)
  
  Auxiliary Statement File
  ------------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\aggdat.axs'.)
  
  Auxiliary Table File
  --------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\aggdat.axt'.)
  
  !  This file was created at 16:55:44 on 10-FEB-2016 by the program
  !    <TABLO  Version 6.4   April 2012>
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
 [Auxiliary Table File was created by TABLO at 16:55:44 on 10-FEB-2016.]
 [TABLO file used here is "aggdat.tab".]
 [No TABLO STI file used when TABLO was run.]
  
  (Writing output to log file, and also to the terminal.)
 (Opened new text file 'aggdat.log'.)
  
  (Reporting CPU times.)
  
  (Not Writing Header arrays Sparsely.)
 [This TG-program was created by TABLO at 16:55:44 on 10-FEB-2016.]
  
  [Starting to check "extra" statements on the Command file.]
  
  
  [Finished checking "extra" statements on the Command file.]
  
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
  This program was written by the GEMPACK program TABLO
  as described in the Information file
  'aggdat.inf'
  
  This run of the TABLO-generated program
      o can carry out 15 WRITEs
      o can carry out 16 TRANSFERs
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
 (Range test of initial values will produce warnings.)
  
  (Data file with logical name 'DSETS')
 (Opened, as header, existing file 'input\sets.har'.)
  
  !  This file was created at 10:47:38 on 28-SEP-2017 by the program
  !    <pretty.for 28-SEP-2017> [pretty.tab,pretty.sti]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'ASETS')
 (Opened, as header, existing file 'maphar.dat'.)
  
  !  This file was created at 4/23/2018 1:45:51 PM by the program
  !    GtapAgg2
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 4/Mar/2016
  !  [The program which created this file was compiled with DELPHI.]
  
  
  (Data file with logical name 'DDATA')
 (Opened, as header, existing file 'input\basedata.har'.)
  
  !  This file was created at 9/28/2017 by the program
  !    Sprs2Full
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 8/May/2012
  !  [The program which created this file was compiled with DELPHI.]
  
  
  (Data file with logical name 'GSETS')
 (Opened new header file 'output\sets.har'.)
  
  (Data file with logical name 'ADATA')
 (Opened new header file 'output\basedata.har'.)
  
  (Data file with logical name 'AGGHAR')
 (Opened, as header, existing file 'aggmain.har'.)
  
  !  This file was created at 4/23/2018 1:45:53 PM by the program
  !    AggHAR
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 29/Jan/2016
  !  [The program which created this file was compiled with DELPHI.]
  
  
  --->  Beginning the preliminary pass (aimed at sets and subsets).
 Set 'DREG'
 (Opened, as header, existing file 'input\sets.har'.)
   (141 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 141.]
 Set 'DTRAD_COMM'
   (57 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 57.]
 Set 'DMARG_COMM'
   (3 character strings, each of length 12 read. Header 'MARG')
   [Set has size 3.]
 Set 'DENDW_COMM'
   (8 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 8.]
 Set 'CGDS_COMM'
   (1 character strings, each of length 12 read. Header 'H9  ')
   [Set has size 1.]
 Set 'TARSET'
   (2 character strings, each of length 12 read. Header 'TARS')
   [Set has size 2.]
 Set 'DPROD_COMM'
   [Set has size 58.]
 'DTRAD_COMM' as a subset of 'DPROD_COMM'
 'CGDS_COMM' as a subset of 'DPROD_COMM'
 'DMARG_COMM' as a subset of 'DTRAD_COMM'
 Set 'REG'
 (Opened, as header, existing file 'maphar.dat'.)
   (3 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 3.]
 Set 'TRAD_COMM'
   (10 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 10.]
 Set 'ENDW_COMM'
   (5 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 5.]
 Set 'PROD_COMM'
   [Set has size 11.]
 'TRAD_COMM' as a subset of 'PROD_COMM'
 'CGDS_COMM' as a subset of 'PROD_COMM'
  
  Reading the values of set mapping 'COM'
   (57 character strings, each of length 12 read. Header 'DCOM')
  
  Reading the values of set mapping 'REGD'
   (141 character strings, each of length 12 read. Header 'DREG')
  
  Reading the values of set mapping 'ENDD'
   (8 character strings, each of length 12 read. Header 'DEND')
  Formula for 'UNITVEC'
  Formula for 'ISAMAR'
  Formula for set 'MARG_COMM'
 Set 'MARG_COMM'
   [Set has size 1.]
 'MARG_COMM' as a subset of 'TRAD_COMM'
  Formula for 'D2AMARG'
 [CPU for reads, formulas etc is 1.56250000E-02 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
  
  Total memory currently used for all arrays is approximately 0.02 megabytes.
  [Add about 5-10 megabytes for the memory used by the code.]
  
  --->  Beginning the reads, formulas (etc).
 Transferring "DVER" from file 'DSETS' to file 'GSETS'
 (Opened, as header, existing file 'input\sets.har'.)
 (Opened, for writing, header file 'output\sets.har'.)
 (Written real array, size 1, header "DVER".)
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "DREL" from file 'DSETS' to file 'GSETS'
   (1 character strings, each of length 59 written. Header 'DREL')
 (Opened, for writing, header file 'output\sets.har'.)
 Writing elements of set 'REG'
   (3 character strings, each of length 12 written. Header 'H1  ')
 Writing elements of set 'TRAD_COMM'
   (10 character strings, each of length 12 written. Header 'H2  ')
 Writing elements of set 'ENDW_COMM'
   (5 character strings, each of length 12 written. Header 'H6  ')
 Writing elements of set 'CGDS_COMM'
   (1 character strings, each of length 12 written. Header 'H9  ')
  
  Reading the values of set mapping 'COM'
 (Opened, as header, existing file 'maphar.dat'.)
   (57 character strings, each of length 12 read. Header 'DCOM')
  
  Reading the values of set mapping 'REGD'
   (141 character strings, each of length 12 read. Header 'DREG')
  
  Reading the values of set mapping 'ENDD'
   (8 character strings, each of length 12 read. Header 'DEND')
  Formula for 'D2AMARG'
 Writing elements of set 'MARG_COMM'
   (1 character strings, each of length 12 written. Header 'MARG')
 Writing elements of set 'DREG'
   (141 character strings, each of length 12 written. Header 'DH1 ')
 Writing elements of set 'DTRAD_COMM'
   (57 character strings, each of length 12 written. Header 'DH2 ')
 Writing elements of set 'DENDW_COMM'
   (8 character strings, each of length 12 written. Header 'DH6 ')
 Writing elements of set 'DMARG_COMM'
   (3 character strings, each of length 12 written. Header 'DMAR')
 Writing elements of set 'TARSET'
   (2 character strings, each of length 12 written. Header 'TARS')
 Writing 'COM'
   (57 character strings, each of length 12 written. Header 'MCOM')
 Writing 'REGD'
   (141 character strings, each of length 12 written. Header 'MREG')
 Writing 'ENDD'
   (8 character strings, each of length 12 written. Header 'MEND')
 Writing 'D2AMARG'
   (3 character strings, each of length 12 written. Header 'MMAR')
 Transferring "IOCY" from file 'DSETS' to file 'GSETS'
 (Opened, as header, existing file 'input\sets.har'.)
 [Header "IOCY" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "INFO" from file 'DSETS' to file 'GSETS'
 [Header "INFO" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "DCPL" from file 'DSETS' to file 'GSETS'
 [Header "DCPL" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "PAYS" from file 'DSETS' to file 'GSETS'
 [Header "PAYS" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "AGRI" from file 'DSETS' to file 'GSETS'
 [Header "AGRI" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "DREG" from file 'DSETS' to file 'GSETS'
 [Header "DREG" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "VAR" from file 'DSETS' to file 'GSETS'
 [Header "VAR" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "WEB" from file 'DSETS' to file 'GSETS'
 [Header "WEB" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "LICN" from file 'ASETS' to file 'GSETS'
 (Opened, as header, existing file 'maphar.dat'.)
   (1 character strings, each of length 65 written. Header 'LICN')
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "H1L" from file 'ASETS' to file 'GSETS'
   (3 character strings, each of length 50 written. Header 'H1L ')
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "H2L" from file 'ASETS' to file 'GSETS'
   (10 character strings, each of length 50 written. Header 'H2L ')
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "H6L" from file 'ASETS' to file 'GSETS'
 [Header "H6L" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\sets.har'.)
 Transferring "LICN" from file 'ASETS' to file 'ADATA'
 (Opened, for writing, header file 'output\basedata.har'.)
   (1 character strings, each of length 65 written. Header 'LICN')
 (Opened, for writing, header file 'output\basedata.har'.)
 (Opened, as header, existing file 'input\basedata.har'.)
 Reading 'DPSM'
 (Read real array, size 141, header "DPSM".)
 (%%WARNING. Set info mismatch reading from header 'DPSM')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
  Formula for 'CDPSM'
 Writing 'CDPSM'
 (Written real array, size 3, header "DPSM".)
 Transferring unwritten from file 'AGGHAR' to file 'ADATA'
 (Opened, as header, existing file 'aggmain.har'.)
   (1 character strings, each of length 59 written. Header '
 DREL                                    ')
 (Written real array, size 1, header "DVER".)
 (Written real array, size 10x3x3, header "VIMS".)
 (Written real array, size 10x3x3, header "VIWS".)
 (Written real array, size 10x3x3, header "VXWD".)
 (Written real array, size 10x3x3, header "VXMD".)
 (Written real array, size 10x3x3, header "ADRV".)
 (Written real array, size 10x3x3, header "TFRV".)
 (Written real array, size 10x3x3, header "PURV".)
 (Written real array, size 10x3x3, header "MFRV".)
 (Written real array, size 10x3x3, header "VRRV".)
 (Written real array, size 10x3x3, header "XTRV".)
 (Written real array, size 10x11x3, header "VIFM".)
 (Written real array, size 10x11x3, header "VDFM".)
 (Written real array, size 10x11x3, header "VIFA".)
 (Written real array, size 10x11x3, header "VDFA".)
 (Written real array, size 10x11x3x2, header "ISEP".)
 (Written real array, size 5x11x3, header "VFM".)
 (Written real array, size 10x3, header "VIPM".)
 (Written real array, size 10x3, header "VDPM".)
 (Written real array, size 10x3, header "VIGM".)
 (Written real array, size 10x3, header "VDGM".)
 (Written real array, size 1x3, header "VST".)
 (Written real array, size 5x3, header "EVOA".)
 (Written real array, size 5x11x3, header "EVFA".)
 (Written real array, size 10x3, header "VIPA".)
 (Written real array, size 10x3, header "VDPA".)
 (Written real array, size 10x3, header "VIGA".)
 (Written real array, size 10x3, header "VDGA".)
 (Written real array, size 3, header "SAVE".)
 (Written real array, size 3, header "VKB".)
 (Written real array, size 3, header "VDEP".)
 (Written real array, size 10x3, header "OSEP".)
 (Written real array, size 5x11x3, header "FBEP".)
 (Written real array, size 1x10x3x3, header "VTWR".)
 (Written real array, size 5x11x3, header "FTRV".)
 (Written real array, size 3, header "POP".)
 (Written real array, size 10x3, header "TVOM".)
 (Written real array, size 2x10x3x3, header "VTSS".)
 (Opened, for writing, header file 'output\basedata.har'.)
 [CPU for reads, formulas etc is 0.12500000 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
 [CPU for all of this 0-step calculation is 0.14062500 seconds.]
 Elapsed time for all this 0-step calculation is: less than one second.
  [Total CPU is 0.39062500 seconds.]
  
  (Inputs have been taken from the Command file
  'C:\GTPAg2\GTAP10P2\GTAP\aggdat.cmf')
  
  (The program has completed without error.)
  (There were         2 warnings.)
  (If you have a LOG file, search for '%%W' to see them.)
  (The last was:
   'Check-on-read warning')
  Total elapsed time is: less than one second.
  
 (Output has also been written to log file 'aggdat.log'.)
  
 <aggpar.for 10-FEB-2016 (a TABLO-generated program)>
   This program accesses some of the routines in the GEMPACK software release
 <GEMPACK Release 11.3.001   May 2014>
  
  
  %%WARNING. Your GEMPACK licence expires on 30-APR-2018.
  You will not be able to run GEMPACK programs
    after that date unless you renew the licence.
  
     -------------------------------------------------------
    !            GEMPACK Software System Licence            !
    !  Source Code Licence for the GEMPACK Software System  !
    !                 Licence No.  GFM-0137                 !
    !          Licence for Release 11.4 of GEMPACK          !
    !          U.S. International Trade Commission          !
    !                     Washington DC                     !
    !                          USA                          !
    !    (Your GEMPACK licence expires on 30-APR-2018.)     !
     -------------------------------------------------------
  
  
     << COPYRIGHT 1987-2010: CoPS/Impact and KPSOFT >>
  
  Current directory is: C:\GTPAg2\GTAP10P2\GTAP
  
  
  Full path name of running EXE is: C:\GTPAg2\GTAP10P2\GTAP\aggpar.exe
  Fortran compiler = GF32  4.8.1 (rev3, built by mingw-builds project):
  Operating system is Windows 8
  
  
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  
  
                    TABLO-GENERATED PROGRAM OPTIONS
               ( --> indicates those in effect )
  
       BAT Run in batch              STI Take inputs from a Stored-input file
       BPR Brief prompts             SIF Store inputs on a file
       LOG Output to log file        ASI Add to incomplete Stored-input file
                                     CMF Take inputs from a Command file
       EAA Echo all activity           SVX Select variables on XAC file (later)
       CPU Report CPU times            RQF Required figures agreement (extrap)
       NRP Don't reuse pivots        NIR Don't do solution iterative refinement
                                 --> IZ1 Ignore zero coefficients in step 1
                                     KZ2 Keep zero coefficients in steps 2,3 etc
       NEQ Do no equations           NWE Don't warn how well equations solved
       NDS Do no displays            SSI Several subintervals; extrap after each
       NWR Do no writes              M28 Use MA28 routines (rather than MA48)
       NAS Do no assertions          SUI Save updated formula(initial) data
       NUD Do no final updates              Extra Options Screen
       NSM Don't do simulation              --------------------
       NWT Use Newton's method      DTO Display, Terminal/Text write Options
       CR  Check-on-read options
  
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return
  
 (Opened, as text, existing file 'aggpar.cmf'.)
  (Taking inputs from a command file.)
 (Opened, as text, existing file 'aggpar.cmf'.)
  
  !  (There is no CREATION information on this file.)
  
  
  --> Reading the Command file.
  
 auxiliary files = aggpar;
 check-on-read elements = warn; ! Optional: very often needed
 cpu=yes ; ! Optional: Reports CPU times for various stages
 log file = yes;  ! Optional
 WHS = no ;   ! Do not use sparse format
 ! Input files:
 File DDATA = input\basedata.har; ! disaggregate data in GTAP notation
 File DPARAM = input\default.prm; ! disaggregate parameters
 File EPARAM = maphar.dat; ! user-supplied parameters
 File DSETS = input\SETS.har; ! set specification for disaggregate data
 File ASETS = maphar.dat; ! set specification for aggregate data
 ! Output files:
 File PARAM = output\default.prm; ! aggregated CDE, CES and CET elasticities
  
  
  (Finished reading the command file.)
  
  Auxiliary Statement File
  ------------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\aggpar.axs'.)
  
  Auxiliary Table File
  --------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\aggpar.axt'.)
  
  !  This file was created at 16:55:56 on 10-FEB-2016 by the program
  !    <TABLO  Version 6.4   April 2012>
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
 [Auxiliary Table File was created by TABLO at 16:55:56 on 10-FEB-2016.]
 [TABLO file used here is "aggpar.tab".]
 [No TABLO STI file used when TABLO was run.]
  
  (Writing output to log file, and also to the terminal.)
 (Opened new text file 'aggpar.log'.)
  
  (Reporting CPU times.)
  
  (Not Writing Header arrays Sparsely.)
 [This TG-program was created by TABLO at 16:55:56 on 10-FEB-2016.]
  
  [Starting to check "extra" statements on the Command file.]
  
  
  [Finished checking "extra" statements on the Command file.]
  
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
  This program was written by the GEMPACK program TABLO
  as described in the Information file
  'aggpar.inf'
  
  This run of the TABLO-generated program
      o can carry out 14 WRITEs
      o can carry out 4 TRANSFERs
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
 (Range test of initial values will produce warnings.)
  
  (Data file with logical name 'DDATA')
 (Opened, as header, existing file 'input\basedata.har'.)
  
  !  This file was created at 9/28/2017 by the program
  !    Sprs2Full
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 8/May/2012
  !  [The program which created this file was compiled with DELPHI.]
  
  
  (Data file with logical name 'DPARAM')
 (Opened, as header, existing file 'input\default.prm'.)
  
  !  This file was created at 10:47:38 on 28-SEP-2017 by the program
  !    <pretty.for 28-SEP-2017> [pretty.tab,pretty.sti]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'EPARAM')
 (Opened, as header, existing file 'maphar.dat'.)
  
  !  This file was created at 4/23/2018 1:45:51 PM by the program
  !    GtapAgg2
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 4/Mar/2016
  !  [The program which created this file was compiled with DELPHI.]
  
  
  (Data file with logical name 'DSETS')
 (Opened, as header, existing file 'input\SETS.har'.)
  
  !  This file was created at 10:47:38 on 28-SEP-2017 by the program
  !    <pretty.for 28-SEP-2017> [pretty.tab,pretty.sti]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'ASETS')
 (Opened, as header, existing file 'maphar.dat'.)
  
  !  This file was created at 4/23/2018 1:45:51 PM by the program
  !    GtapAgg2
  !  which accesses some of the routines in the GEMPACK software release
  !    HARFILE.PAS 4/Mar/2016
  !  [The program which created this file was compiled with DELPHI.]
  
  
  (Data file with logical name 'PARAM')
 (Opened new header file 'output\default.prm'.)
  
  --->  Beginning the preliminary pass (aimed at sets and subsets).
 Set 'DREG'
 (Opened, as header, existing file 'input\SETS.har'.)
   (141 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 141.]
 Set 'DTRAD_COMM'
   (57 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 57.]
 Set 'DENDW_COMM'
   (8 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 8.]
 Set 'CGDS_COMM'
   (1 character strings, each of length 12 read. Header 'H9  ')
   [Set has size 1.]
 Set 'DPROD_COMM'
   [Set has size 58.]
 'DTRAD_COMM' as a subset of 'DPROD_COMM'
 'CGDS_COMM' as a subset of 'DPROD_COMM'
 Set 'REG'
 (Opened, as header, existing file 'maphar.dat'.)
   (3 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 3.]
 Set 'TRAD_COMM'
   (10 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 10.]
 Set 'ENDW_COMM'
   (5 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 5.]
 Set 'PROD_COMM'
   [Set has size 11.]
 'TRAD_COMM' as a subset of 'PROD_COMM'
 'CGDS_COMM' as a subset of 'PROD_COMM'
  
  Reading the values of set mapping 'COM'
   (57 character strings, each of length 12 read. Header 'DCOM')
  
  Reading the values of set mapping 'REGD'
   (141 character strings, each of length 12 read. Header 'DREG')
 [CPU for reads, formulas etc is 1.56250000E-02 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
  
  Total memory currently used for all arrays is approximately 4.17 megabytes.
  [Add about 5-10 megabytes for the memory used by the code.]
  
  --->  Beginning the reads, formulas (etc).
 Transferring "DVER" from file 'DDATA' to file 'PARAM'
 (Opened, as header, existing file 'input\basedata.har'.)
 (Opened, for writing, header file 'output\default.prm'.)
 (Written real array, size 1, header "DVER".)
 (Opened, for writing, header file 'output\default.prm'.)
 Transferring "DREL" from file 'DDATA' to file 'PARAM'
   (1 character strings, each of length 59 written. Header 'DREL')
 (Opened, for writing, header file 'output\default.prm'.)
  
  Reading the values of set mapping 'COM'
 (Opened, as header, existing file 'maphar.dat'.)
   (57 character strings, each of length 12 read. Header 'DCOM')
  
  Reading the values of set mapping 'REGD'
   (141 character strings, each of length 12 read. Header 'DREG')
 (Opened, as header, existing file 'input\basedata.har'.)
 Reading 'EVFA'
 (Read real array, size 8x58x141, header "EVFA".)
 (%%WARNING. Set info mismatch reading from header 'EVFA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'VIFA'
 (Read real array, size 57x58x141, header "VIFA".)
 (%%WARNING. Set info mismatch reading from header 'VIFA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'VDFA'
 (Read real array, size 57x58x141, header "VDFA".)
 (%%WARNING. Set info mismatch reading from header 'VDFA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'VIPA'
 (Read real array, size 57x141, header "VIPA".)
 (%%WARNING. Set info mismatch reading from header 'VIPA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'VDPA'
 (Read real array, size 57x141, header "VDPA".)
 (%%WARNING. Set info mismatch reading from header 'VDPA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'VIGA'
 (Read real array, size 57x141, header "VIGA".)
 (%%WARNING. Set info mismatch reading from header 'VIGA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'VDGA'
 (Read real array, size 57x141, header "VDGA".)
 (%%WARNING. Set info mismatch reading from header 'VDGA')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 (Opened, as header, existing file 'input\default.prm'.)
 Reading 'DSUBPAR'
 (Read real array, size 57x141, header "SUBP".)
 (%%WARNING. Set info mismatch reading from header 'SUBP')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'DINCPAR'
 (Read real array, size 57x141, header "INCP".)
 (%%WARNING. Set info mismatch reading from header 'INCP')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'DSIGD'
 (Read real array, size 57, header "ESBD".)
 (%%WARNING. Set info mismatch reading from header 'ESBD')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'DSIGM'
 (Read real array, size 57, header "ESBM".)
 (%%WARNING. Set info mismatch reading from header 'ESBM')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'DSIGVA'
 (Read real array, size 58, header "ESBV".)
 (%%WARNING. Set info mismatch reading from header 'ESBV')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 Reading 'DRORFLEX'
 (Read real array, size 141, header "RFLX".)
 (%%WARNING. Set info mismatch reading from header 'RFLX')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
 (Opened, as header, existing file 'maphar.dat'.)
 Reading 'SLUG'
   (Integer matrix with 5 rows and 1 columns read. Header 'SLUG')
 Reading 'ETRAE'
 (Read real array, size 5, header "ETRE".)
 (Opened, as header, existing file 'input\default.prm'.)
 Reading 'RORDELTA'
   (Integer matrix with 1 rows and 1 columns read. Header 'RDLT')
 Reading 'DSIGT'
 (Read real array, size 58, header "ESBT".)
 (%%WARNING. Set info mismatch reading from header 'ESBT')
   [See Section 22.4 of the GEMPACK Manual, "Checking set and element
    information when reading data".][TopicID:gpd3.4.4]
  Formula for 'VPA'
  Formula for 'VI'
  Formula for 'VIR'
  Formula for 'SUBPAR'
  Formula for 'INCPAR'
  Formula for 'VA'
  Formula for 'VAR'
  Formula for 'ESUBVAR'
  Formula for 'ESUBVAR'
  Formula for 'ESUBVA'
  Formula for 'ESUBVA'
  Formula for 'VDI'
  Formula for 'VDIR'
  Formula for 'ESUBD'
  Formula for 'ESUBDR'
  Formula for 'ESUBM'
  Formula for 'ESUBMR'
  Formula for 'RORFLEX'
  Formula for 'VIU'
  Formula for 'ESUBT'
  Formula for 'ESUBT'
  Formula for 'VIUR'
  Formula for 'ESUBTR'
  Formula for 'ESUBTR'
 Writing 'SUBPAR'
 (Written real array, size 10x3, header "SUBP".)
 Writing 'INCPAR'
 (Written real array, size 10x3, header "INCP".)
 Writing 'ESUBT'
 (Written real array, size 11, header "ESBT".)
 Writing 'SLUG'
   (Integer matrix with 5 rows and 1 columns written. Header 'SLUG')
 Writing 'ETRAE'
 (Written real array, size 5, header "ETRE".)
 Writing 'ESUBVA'
 (Written real array, size 11, header "ESBV".)
 Writing 'ESUBD'
 (Written real array, size 10, header "ESBD".)
 Writing 'ESUBM'
 (Written real array, size 10, header "ESBM".)
 Writing 'ESUBTR'
 (Written real array, size 11x3, header "SBTR".)
 Writing 'ESUBVAR'
 (Written real array, size 11x3, header "SBVR".)
 Writing 'ESUBDR'
 (Written real array, size 10x3, header "SBDR".)
 Writing 'ESUBMR'
 (Written real array, size 10x3, header "SBMR".)
 Writing 'RORDELTA'
   (Integer matrix with 1 rows and 1 columns written. Header 'RDLT')
 Writing 'RORFLEX'
 (Written real array, size 3, header "RFLX".)
 Transferring "IO" from file 'DPARAM' to file 'PARAM'
 [Header "IO" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\default.prm'.)
 Transferring "PYRT" from file 'DPARAM' to file 'PARAM'
 [Header "PYRT" does not exist. Nothing to transfer.]
 (Opened, for writing, header file 'output\default.prm'.)
 [CPU for reads, formulas etc is 0.26562500 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
 [CPU for all of this 0-step calculation is 0.28125000 seconds.]
 Elapsed time for all this 0-step calculation is: less than one second.
  [Total CPU is 0.59375000 seconds.]
  
  (Inputs have been taken from the Command file
  'C:\GTPAg2\GTAP10P2\GTAP\aggpar.cmf')
  
  (The program has completed without error.)
  (There were        15 warnings.)
  (If you have a LOG file, search for '%%W' to see them.)
  (The last was:
   'Check-on-read warning')
  Total elapsed time is:  1 seconds.
  
 (Output has also been written to log file 'aggpar.log'.)
  
 <gtapview.for 10-FEB-2016 (a TABLO-generated program)>
   This program accesses some of the routines in the GEMPACK software release
 <GEMPACK Release 11.3.001   May 2014>
  
  
  %%WARNING. Your GEMPACK licence expires on 30-APR-2018.
  You will not be able to run GEMPACK programs
    after that date unless you renew the licence.
  
     -------------------------------------------------------
    !            GEMPACK Software System Licence            !
    !  Source Code Licence for the GEMPACK Software System  !
    !                 Licence No.  GFM-0137                 !
    !          Licence for Release 11.4 of GEMPACK          !
    !          U.S. International Trade Commission          !
    !                     Washington DC                     !
    !                          USA                          !
    !    (Your GEMPACK licence expires on 30-APR-2018.)     !
     -------------------------------------------------------
  
  
     << COPYRIGHT 1987-2010: CoPS/Impact and KPSOFT >>
  
  Current directory is: C:\GTPAg2\GTAP10P2\GTAP
  
  
  Full path name of running EXE is: C:\GTPAg2\GTAP10P2\GTAP\gtapview.exe
  Fortran compiler = GF32  4.8.1 (rev3, built by mingw-builds project):
  Operating system is Windows 8
  
  
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  
  
                    TABLO-GENERATED PROGRAM OPTIONS
               ( --> indicates those in effect )
  
       BAT Run in batch              STI Take inputs from a Stored-input file
       BPR Brief prompts             SIF Store inputs on a file
       LOG Output to log file        ASI Add to incomplete Stored-input file
                                     CMF Take inputs from a Command file
       EAA Echo all activity           SVX Select variables on XAC file (later)
       CPU Report CPU times            RQF Required figures agreement (extrap)
       NRP Don't reuse pivots        NIR Don't do solution iterative refinement
                                 --> IZ1 Ignore zero coefficients in step 1
                                     KZ2 Keep zero coefficients in steps 2,3 etc
       NEQ Do no equations           NWE Don't warn how well equations solved
       NDS Do no displays            SSI Several subintervals; extrap after each
       NWR Do no writes              M28 Use MA28 routines (rather than MA48)
       NAS Do no assertions          SUI Save updated formula(initial) data
       NUD Do no final updates              Extra Options Screen
       NSM Don't do simulation              --------------------
       NWT Use Newton's method      DTO Display, Terminal/Text write Options
       CR  Check-on-read options
  
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return
  
 (Opened, as text, existing file 'gtapview.cmf'.)
  (Taking inputs from a command file.)
 (Opened, as text, existing file 'gtapview.cmf'.)
  
  !  (There is no CREATION information on this file.)
  
  
  --> Reading the Command file.
  
 auxiliary files = gtapview;
 check-on-read elements = warn; ! Optional: very often needed
 cpu=yes ; ! Optional: Reports CPU times for various stages
 WHS = no ;   ! Do not use sparse format
 log file = yes;  ! Optional
 ! Input files:
 File GTAPDATA = output\basedata.har; ! File containing all base data
 File GTAPSETS = output\sets.har;     ! File with set specification
 File GTAPPARM = output\default.prm;  ! File containing behavioral prameters
 ! Output files:
 File GTAPVIEW = output\baseview.har; ! File with headers for viewing
 File TAXRATES = output\baserate.har; ! File with headers for viewing initial
 tax rates
  
  
  (Finished reading the command file.)
  
  Auxiliary Statement File
  ------------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\gtapview.axs'.)
  
  Auxiliary Table File
  --------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\gtapview.axt'.)
  
  !  This file was created at 16:56:09 on 10-FEB-2016 by the program
  !    <TABLO  Version 6.4   April 2012>
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
 [Auxiliary Table File was created by TABLO at 16:56:09 on 10-FEB-2016.]
 [TABLO file used here is "gtapview.tab".]
 [No TABLO STI file used when TABLO was run.]
  
  (Writing output to log file, and also to the terminal.)
 (Opened new text file 'gtapview.log'.)
  
  (Reporting CPU times.)
  
  (Not Writing Header arrays Sparsely.)
 [This TG-program was created by TABLO at 16:56:09 on 10-FEB-2016.]
  
  [Starting to check "extra" statements on the Command file.]
  
  
  [Finished checking "extra" statements on the Command file.]
  
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
  This program was written by the GEMPACK program TABLO
  as described in the Information file
  'gtapview.inf'
  
  This run of the TABLO-generated program
      o can carry out 63 WRITEs
      o can carry out 3 TRANSFERs
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
 (Range test of initial values will produce warnings.)
  
  (Data file with logical name 'GTAPDATA')
 (Opened, as header, existing file 'output\basedata.har'.)
  
  !  This file was created at 13:45:54 on 23-APR-2018 by the program
  !    <aggdat.for 10-FEB-2016> [aggdat.tab]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'GTAPSETS')
 (Opened, as header, existing file 'output\sets.har'.)
  
  !  This file was created at 13:45:54 on 23-APR-2018 by the program
  !    <aggdat.for 10-FEB-2016> [aggdat.tab]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'GTAPPARM')
 (Opened, as header, existing file 'output\default.prm'.)
  
  !  This file was created at 13:45:56 on 23-APR-2018 by the program
  !    <aggpar.for 10-FEB-2016> [aggpar.tab]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'GTAPVIEW')
 (Opened new header file 'output\baseview.har'.)
  
  (Data file with logical name 'TAXRATES')
 (Opened new header file 'output\baserate.har'.)
  
  --->  Beginning the preliminary pass (aimed at sets and subsets).
 Set 'REG'
 (Opened, as header, existing file 'output\sets.har'.)
   (3 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 3.]
 Set 'TRAD_COMM'
   (10 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 10.]
 Set 'MARG_COMM'
   (1 character strings, each of length 12 read. Header 'MARG')
   [Set has size 1.]
 'MARG_COMM' as a subset of 'TRAD_COMM'
 Set 'NMRG_COMM'
   [Set has size 9.]
 'NMRG_COMM' as a subset of 'TRAD_COMM'
 Set 'CGDS_COMM'
   (1 character strings, each of length 12 read. Header 'H9  ')
   [Set has size 1.]
 Set 'ENDW_COMM'
   (5 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 5.]
 Set 'TARSET'
   (2 character strings, each of length 12 read. Header 'TARS')
   [Set has size 2.]
 Set 'ENDWC_COMM'
   [Set has size 1.]
 Set 'PROD_COMM'
   [Set has size 11.]
 'TRAD_COMM' as a subset of 'PROD_COMM'
 'CGDS_COMM' as a subset of 'PROD_COMM'
 Set 'DEMD_COMM'
   [Set has size 15.]
 'ENDW_COMM' as a subset of 'DEMD_COMM'
 'TRAD_COMM' as a subset of 'DEMD_COMM'
 Set 'NSAV_COMM'
   [Set has size 16.]
 'DEMD_COMM' as a subset of 'NSAV_COMM'
 'CGDS_COMM' as a subset of 'NSAV_COMM'
 'PROD_COMM' as a subset of 'NSAV_COMM'
 'ENDWC_COMM' as a subset of 'NSAV_COMM'
 Set 'GDPEXPEND'
   [Set has size 5.]
 Set 'GDPSOURCE'
   [Set has size 3.]
 Set 'CAPACCT'
   [Set has size 2.]
 Set 'CURACCT'
   [Set has size 2.]
 Set 'MKTVALUE'
   [Set has size 2.]
 Set 'OUT'
   [Set has size 3.]
 Set 'SALES'
   [Set has size 3.]
 Set 'PURCHVALUE'
   [Set has size 2.]
 Set 'DIR'
   [Set has size 2.]
 Set 'OUTVALUE'
   [Set has size 2.]
 Set 'EXPVALUE'
   [Set has size 2.]
 Set 'IMPVALUE'
   [Set has size 2.]
 Set 'PRODTAX'
   [Set has size 1.]
 Set 'MORECOLS'
   [Set has size 7.]
 Set 'SUMCOLS'
   [Set has size 18.]
 'PROD_COMM' as a subset of 'SUMCOLS'
 'MORECOLS' as a subset of 'SUMCOLS'
 Set 'XXX'
   [Set has size 15.]
 'TRAD_COMM' as a subset of 'XXX'
 'ENDW_COMM' as a subset of 'XXX'
 Set 'SUMROWS'
   [Set has size 16.]
 'XXX' as a subset of 'SUMROWS'
 'PRODTAX' as a subset of 'SUMROWS'
 'DEMD_COMM' as a subset of 'XXX'
 Set 'S@gov'
   [Set has size 1.]
 'S@gov' as a subset of 'SUMCOLS'
 Set 'S@hou'
   [Set has size 1.]
 'S@hou' as a subset of 'SUMCOLS'
 Set 'S@exp'
   [Set has size 1.]
 'S@exp' as a subset of 'SUMCOLS'
 Set 'S@lessDomTax'
   [Set has size 1.]
 'S@lessDomTax' as a subset of 'SUMCOLS'
 Set 'S@lessImpTax'
   [Set has size 1.]
 'S@lessImpTax' as a subset of 'SUMCOLS'
 Set 'S@lessTariff'
   [Set has size 1.]
 'S@lessTariff' as a subset of 'SUMCOLS'
 Set 'S@lessImpCIF'
   [Set has size 1.]
 'S@lessImpCIF' as a subset of 'SUMCOLS'
 Set 'SUMREP'
   [Set has size 5.]
 [CPU for reads, formulas etc is 0.0000000 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
  
  Total memory currently used for all arrays is approximately 0.07 megabytes.
  [Add about 5-10 megabytes for the memory used by the code.]
  
  --->  Beginning the reads, formulas (etc).
 (Opened, as header, existing file 'output\basedata.har'.)
 Reading 'EVOA'
 (Read real array, size 5x3, header "EVOA".)
 Reading 'EVFA'
 (Read real array, size 5x11x3, header "EVFA".)
 Reading 'save'
 (Read real array, size 3, header "SAVE".)
 Reading 'VIFA'
 (Read real array, size 10x11x3, header "VIFA".)
 Reading 'VDFA'
 (Read real array, size 10x11x3, header "VDFA".)
 Reading 'VIPA'
 (Read real array, size 10x3, header "VIPA".)
 Reading 'VDPA'
 (Read real array, size 10x3, header "VDPA".)
 Reading 'VIGA'
 (Read real array, size 10x3, header "VIGA".)
 Reading 'VDGA'
 (Read real array, size 10x3, header "VDGA".)
 Reading 'VKB'
 (Read real array, size 3, header "VKB".)
 Reading 'VDEP'
 (Read real array, size 3, header "VDEP".)
 Reading 'VXMD'
 (Read real array, size 10x3x3, header "VXMD".)
 Reading 'VST'
 (Read real array, size 1x3, header "VST".)
 Reading 'VFM'
 (Read real array, size 5x11x3, header "VFM".)
 Reading 'VIFM'
 (Read real array, size 10x11x3, header "VIFM".)
 Reading 'VDFM'
 (Read real array, size 10x11x3, header "VDFM".)
 Reading 'VIPM'
 (Read real array, size 10x3, header "VIPM".)
 Reading 'VDPM'
 (Read real array, size 10x3, header "VDPM".)
 Reading 'VIGM'
 (Read real array, size 10x3, header "VIGM".)
 Reading 'VDGM'
 (Read real array, size 10x3, header "VDGM".)
 Reading 'VIMS'
 (Read real array, size 10x3x3, header "VIMS".)
 Reading 'VXWD'
 (Read real array, size 10x3x3, header "VXWD".)
 Reading 'VIWS'
 (Read real array, size 10x3x3, header "VIWS".)
 Reading 'VTWR'
 (Read real array, size 1x10x3x3, header "VTWR".)
  Formula for 'VPA'
  Formula for 'PRIVEXP'
  Formula for 'VFA'
  Formula for 'VFA'
  Formula for 'VOA'
  Formula for 'VOA'
  Formula for 'REGINV'
  Formula for 'VGA'
  Formula for 'GOVEXP'
  Formula for 'VEXPORTS'
  Formula for 'VIMPORTS'
  Formula for 'GDPEXP'
  Formula for 'GDPEXP'
  Formula for 'GDPEXP'
  Formula for 'GDPEXP'
  Formula for 'GDPEXP'
  Formula for 'NETFACTINC'
  Formula for 'VDM'
  Formula for 'VOM'
  Formula for 'VOM'
  Formula for 'VOM'
  Formula for 'VOM'
  Formula for 'NETAXES'
  Formula for 'GDPSRC'
  Formula for 'GDPSRC'
  Formula for 'GDPSRC'
  Formula for 'NETINV'
  Formula for 'CAPITALACCT'
  Formula for 'CAPITALACCT'
  Formula for 'CURRENTACCT'
  Formula for 'CURRENTACCT'
  Formula for 'CURRENTACCT'
  Formula for 'VALEXPORTS'
  Formula for 'VALEXPORTS'
  Formula for 'VALIMPORTS'
  Formula for 'VALIMPORTS'
  Formula for 'CIFDECOMP'
  Formula for 'CIFDECOMP'
  Formula for 'OUTDISP'
  Formula for 'OUTDISP'
  Formula for 'OUTDISP'
  Formula for 'OUTDISP'
  Formula for 'DOMSALESDISP'
  Formula for 'DOMSALESDISP'
  Formula for 'DOMSALESDISP'
  Formula for 'IMPSALESDISP'
  Formula for 'IMPSALESDISP'
  Formula for 'IMPSALESDISP'
  Formula for 'VALOUTPUT'
  Formula for 'VALOUTPUT'
  Formula for 'SUFFICIENCY'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVFA'
  Formula for 'NVPA'
  Formula for 'NVPA'
  Formula for 'NVPA'
  Formula for 'NVPA'
  Formula for 'NVGA'
  Formula for 'NVGA'
  Formula for 'NVGA'
  Formula for 'NVGA'
 (Opened, for writing, header file 'output\baseview.har'.)
 Writing 'GDPEXP'
 (Written real array, size 3x5, header "AG01".)
 Writing 'GDPSRC'
 (Written real array, size 3x3, header "AG02".)
 Writing 'EVFA'
 (Written real array, size 5x11x3, header "AG03".)
 Writing 'CAPITALACCT'
 (Written real array, size 3x2, header "AG04".)
 Writing 'CURRENTACCT'
 (Written real array, size 3x2x10, header "AG05".)
 Writing 'VKB'
 (Written real array, size 3, header "AG06".)
 Writing 'VALEXPORTS'
 (Written real array, size 10x3x3x2, header "BI01".)
 Writing 'VALIMPORTS'
 (Written real array, size 10x3x3x2, header "BI02".)
 Writing 'CIFDECOMP'
 (Written real array, size 10x3x3x2, header "BI03".)
 Writing 'OUTDISP'
 (Written real array, size 10x3x3, header "CM01".)
 Writing 'DOMSALESDISP'
 (Written real array, size 10x3x3, header "CM02".)
 Writing 'IMPSALESDISP'
 (Written real array, size 10x3x3, header "CM03".)
 Writing 'VALOUTPUT'
 (Written real array, size 10x3x2, header "CM04".)
 Writing 'SUFFICIENCY'
 (Written real array, size 10x3, header "CM05".)
 Writing 'NVFA'
 (Written real array, size 15x11x3x2x2, header "SF01".)
 Writing 'NVPA'
 (Written real array, size 10x3x2x2, header "SF02".)
 Writing 'NVGA'
 (Written real array, size 10x3x2x2, header "SF03".)
  Formula for 'VITQS'
 Reading 'VITQS'
   [Header "VTQS" does not exist so nothing read.]
  Formula for 'rTO'
  Formula for 'rTF'
  (Number of ZERO DIVIDED BY ZERO operations was 66.)
    ( Default value used was 1.0000000. )
  Formula for 'rTPD'
  Formula for 'rTPI'
  Formula for 'rTGD'
  Formula for 'rTGI'
  Formula for 'rTFD'
  Formula for 'rTFI'
  Formula for 'rTXS'
  Formula for 'rTMS'
  Formula for 'rTQSMS'
  Formula for 'rTQSMS'
 (Opened, for writing, header file 'output\baserate.har'.)
 Writing 'rTO'
 (Written real array, size 16x3, header "rTO".)
 Writing 'rTF'
 (Written real array, size 5x11x3, header "rTF".)
 Writing 'rTPD'
 (Written real array, size 10x3, header "rTPD".)
 Writing 'rTPI'
 (Written real array, size 10x3, header "rTPI".)
 Writing 'rTGD'
 (Written real array, size 10x3, header "rTGD".)
 Writing 'rTGI'
 (Written real array, size 10x3, header "rTGI".)
 Writing 'rTFD'
 (Written real array, size 10x11x3, header "rTFD".)
 Writing 'rTFI'
 (Written real array, size 10x11x3, header "rTFI".)
 Writing 'rTXS'
 (Written real array, size 10x3x3, header "rTXS".)
 Writing 'rTMS'
 (Written real array, size 10x3x3, header "rTMS".)
 Writing 'rTQSMS'
 (Written real array, size 2x10x3x3, header "rTQS".)
  Formula for 'CHKMKTCLIMP'
  Formula for 'SURPLUS'
  Formula for 'VTWR_M'
  Formula for 'CHKTRANS_D'
  Formula for 'VSTT'
  Formula for 'VSTT'
  Formula for 'CHKTRANS_S'
  Formula for 'SUMTRANS_S'
  Formula for 'SUMTRANS_D'
  Formula for 'SUMSURPLUS'
  Formula for 'SUMMKTCLIMP'
  Formula for 'SUMIMBALS'
 (Opened, for writing, header file 'output\baseview.har'.)
 Writing 'SUMIMBALS'
 (Written real array, size 1, header "0IMB".)
 Writing 'SUMTRANS_S'
 (Written real array, size 1, header "1TNS".)
 Writing 'SUMTRANS_D'
 (Written real array, size 1, header "1TND".)
 Writing 'SUMSURPLUS'
 (Written real array, size 1, header "1SRP".)
 Writing 'SUMMKTCLIMP'
 (Written real array, size 1, header "1IMP".)
 Writing 'CHKTRANS_S'
 (Written real array, size 1, header "2TNS".)
 Writing 'CHKTRANS_D'
 (Written real array, size 10x3x3, header "2TND".)
 Writing 'SURPLUS'
 (Written real array, size 3, header "2SRP".)
 Writing 'CHKMKTCLIMP'
 (Written real array, size 10x3, header "2IMP".)
  Formula for 'SIGNER'
 Writing 'SIGNER'
 (Written real array, size 5x3, header "SVOA".)
  Formula for 'SIGNEPR'
 Writing 'SIGNEPR'
 (Written real array, size 5x11x3, header "SVFA".)
  Formula for 'SIGNTPR'
 Writing 'SIGNTPR'
 (Written real array, size 10x11x3, header "SIFA".)
  Formula for 'SIGNTPR'
 Writing 'SIGNTPR'
 (Written real array, size 10x11x3, header "SDFA".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SIPA".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SDPA".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SIGA".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SDGA".)
  Formula for 'SIGNR'
 Writing 'SIGNR'
 (Written real array, size 3, header "SKB".)
  Formula for 'SIGNR'
 Writing 'SIGNR'
 (Written real array, size 3, header "SDEP".)
  Formula for 'SIGNTRR'
 Writing 'SIGNTRR'
 (Written real array, size 10x3x3, header "SXMD".)
  Formula for 'SIGNMR'
 Writing 'SIGNMR'
 (Written real array, size 1x3, header "SST".)
  Formula for 'SIGNMTRR'
 Writing 'SIGNMTRR'
 (Written real array, size 1x10x3x3, header "STWR".)
  Formula for 'SIGNEPR'
 Writing 'SIGNEPR'
 (Written real array, size 5x11x3, header "SFM".)
  Formula for 'SIGNTPR'
 Writing 'SIGNTPR'
 (Written real array, size 10x11x3, header "SIFM".)
  Formula for 'SIGNTPR'
 Writing 'SIGNTPR'
 (Written real array, size 10x11x3, header "SDFM".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SIPM".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SDPM".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SIGM".)
  Formula for 'SIGNTR'
 Writing 'SIGNTR'
 (Written real array, size 10x3, header "SDGM".)
  Formula for 'SIGNTRR'
 Writing 'SIGNTRR'
 (Written real array, size 10x3x3, header "SIMS".)
  Formula for 'SIGNTRR'
 Writing 'SIGNTRR'
 (Written real array, size 10x3x3, header "SXWD".)
  Formula for 'SIGNTRR'
 Writing 'SIGNTRR'
 (Written real array, size 10x3x3, header "SIWS".)
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
  Formula for 'SUMMARY'
 Writing 'SUMMARY'
 (Written real array, size 16x18x3, header "SMRY".)
  Formula for 'SUMBAL'
 Writing 'SUMBAL'
 (Written real array, size 10x3, header "SBAL".)
  Formula for 'MACSUM'
  Formula for 'MACSUM'
  Formula for 'MACSUM'
  Formula for 'MACSUM'
  Formula for 'MACSUM'
  Formula for 'MACSUM'
 Writing 'MACSUM'
 (Written real array, size 3x5, header "MSUM".)
 Transferring "LICN" from file 'GTAPSETS' to file 'GTAPVIEW'
 (Opened, as header, existing file 'output\sets.har'.)
   (1 character strings, each of length 65 written. Header 'LICN')
 (Opened, for writing, header file 'output\baseview.har'.)
 Transferring "H1L" from file 'GTAPSETS' to file 'GTAPVIEW'
   (3 character strings, each of length 50 written. Header 'H1L ')
 (Opened, for writing, header file 'output\baseview.har'.)
 Transferring "H2L" from file 'GTAPSETS' to file 'GTAPVIEW'
   (10 character strings, each of length 50 written. Header 'H2L ')
 (Opened, for writing, header file 'output\baseview.har'.)
  (Checking that values of 'VST' are in the required range.)
 [CPU for reads, formulas etc is 6.25000000E-02 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
 [CPU for all of this 0-step calculation is 6.25000000E-02 seconds.]
 Elapsed time for all this 0-step calculation is: less than one second.
  [Total CPU is 0.18750000 seconds.]
  
  (Inputs have been taken from the Command file
  'C:\GTPAg2\GTAP10P2\GTAP\gtapview.cmf')
  
  (The program has completed without error.)
  (There were         1 warnings.)
  (If you have a LOG file, search for '%%W' to see them.)
  (The last was:
   'Your GEMPACK licence will expire on 30-APR-2018')
  Total elapsed time is:  1 seconds.
  
 (Output has also been written to log file 'gtapview.log'.)
  
 <samview.for 10-FEB-2016 (a TABLO-generated program)>
   This program accesses some of the routines in the GEMPACK software release
 <GEMPACK Release 11.3.001   May 2014>
  
  
  %%WARNING. Your GEMPACK licence expires on 30-APR-2018.
  You will not be able to run GEMPACK programs
    after that date unless you renew the licence.
  
     -------------------------------------------------------
    !            GEMPACK Software System Licence            !
    !  Source Code Licence for the GEMPACK Software System  !
    !                 Licence No.  GFM-0137                 !
    !          Licence for Release 11.4 of GEMPACK          !
    !          U.S. International Trade Commission          !
    !                     Washington DC                     !
    !                          USA                          !
    !    (Your GEMPACK licence expires on 30-APR-2018.)     !
     -------------------------------------------------------
  
  
     << COPYRIGHT 1987-2010: CoPS/Impact and KPSOFT >>
  
  Current directory is: C:\GTPAg2\GTAP10P2\GTAP
  
  
  Full path name of running EXE is: C:\GTPAg2\GTAP10P2\GTAP\samview.exe
  Fortran compiler = GF32  4.8.1 (rev3, built by mingw-builds project):
  Operating system is Windows 8
  
  
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  
  
                    TABLO-GENERATED PROGRAM OPTIONS
               ( --> indicates those in effect )
  
       BAT Run in batch              STI Take inputs from a Stored-input file
       BPR Brief prompts             SIF Store inputs on a file
       LOG Output to log file        ASI Add to incomplete Stored-input file
                                     CMF Take inputs from a Command file
       EAA Echo all activity           SVX Select variables on XAC file (later)
       CPU Report CPU times            RQF Required figures agreement (extrap)
       NRP Don't reuse pivots        NIR Don't do solution iterative refinement
                                 --> IZ1 Ignore zero coefficients in step 1
                                     KZ2 Keep zero coefficients in steps 2,3 etc
       NEQ Do no equations           NWE Don't warn how well equations solved
       NDS Do no displays            SSI Several subintervals; extrap after each
       NWR Do no writes              M28 Use MA28 routines (rather than MA48)
       NAS Do no assertions          SUI Save updated formula(initial) data
       NUD Do no final updates              Extra Options Screen
       NSM Don't do simulation              --------------------
       NWT Use Newton's method      DTO Display, Terminal/Text write Options
       CR  Check-on-read options
  
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return
  
 (Opened, as text, existing file 'samview.cmf'.)
  (Taking inputs from a command file.)
 (Opened, as text, existing file 'samview.cmf'.)
  
  !  (There is no CREATION information on this file.)
  
  
  --> Reading the Command file.
  
 auxiliary files = samview;
 check-on-read elements = warn; ! Optional: very often needed
 cpu=yes ; ! Optional: Reports CPU times for various stages
  
 log file = yes;  ! Optional
 ! Input files:
 File GTAPDATA = output\basedata.har; ! File containing all base data
 File GTAPSETS = output\sets.har;     ! File with set specification
 File GTAPPARM = output\default.prm;  ! File containing behavioral prameters
 ! Output files:
 File GTAPSAM = output\gtapsam.har; ! File with headers for viewing
  
  
  (Finished reading the command file.)
  
  Auxiliary Statement File
  ------------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\samview.axs'.)
  
  Auxiliary Table File
  --------------------
 (Opened, as binary, existing file 'C:\GTPAg2\GTAP10P2\GTAP\samview.axt'.)
  
  !  This file was created at 16:56:29 on 10-FEB-2016 by the program
  !    <TABLO  Version 6.4   April 2012>
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
 [Auxiliary Table File was created by TABLO at 16:56:30 on 10-FEB-2016.]
 [TABLO file used here is "samview.tab".]
 [No TABLO STI file used when TABLO was run.]
  
  (Writing output to log file, and also to the terminal.)
 (Opened new text file 'samview.log'.)
  
  (Reporting CPU times.)
 [This TG-program was created by TABLO at 16:56:30 on 10-FEB-2016.]
  
  [Starting to check "extra" statements on the Command file.]
  
  
  [Finished checking "extra" statements on the Command file.]
  
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
  This program was written by the GEMPACK program TABLO
  as described in the Information file
  'samview.inf'
  
  This run of the TABLO-generated program
      o can carry out 19 WRITEs
      o can carry out 1 TRANSFERs
  
 ++++++++++++++++++++++++++++++++++++++++++++++++++
 (Range test of initial values will produce warnings.)
  
  (Data file with logical name 'GTAPDATA')
 (Opened, as header, existing file 'output\basedata.har'.)
  
  !  This file was created at 13:45:54 on 23-APR-2018 by the program
  !    <aggdat.for 10-FEB-2016> [aggdat.tab]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'GTAPSETS')
 (Opened, as header, existing file 'output\sets.har'.)
  
  !  This file was created at 13:45:54 on 23-APR-2018 by the program
  !    <aggdat.for 10-FEB-2016> [aggdat.tab]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'GTAPPARM')
 (Opened, as header, existing file 'output\default.prm'.)
  
  !  This file was created at 13:45:56 on 23-APR-2018 by the program
  !    <aggpar.for 10-FEB-2016> [aggpar.tab]
  !  which accesses some of the routines in the GEMPACK software release
  !    <GEMPACK Release 11.3.001   May 2014>
  !  [The program which created this file was compiled with GF32.]
  
  
  (Data file with logical name 'GTAPSAM')
 (Opened new header file 'output\gtapsam.har'.)
  
  --->  Beginning the preliminary pass (aimed at sets and subsets).
 Set 'REG'
 (Opened, as header, existing file 'output\sets.har'.)
   (3 character strings, each of length 12 read. Header 'H1  ')
   [Set has size 3.]
 Set 'TRAD_COMM'
   (10 character strings, each of length 12 read. Header 'H2  ')
   [Set has size 10.]
 Set 'MARG_COMM'
   (1 character strings, each of length 12 read. Header 'MARG')
   [Set has size 1.]
 'MARG_COMM' as a subset of 'TRAD_COMM'
 Set 'ENDW_COMM'
   (5 character strings, each of length 12 read. Header 'H6  ')
   [Set has size 5.]
 Set 'CGDS_COMM'
   (1 character strings, each of length 12 read. Header 'H9  ')
   [Set has size 1.]
 Set 'PROD_COMM'
   [Set has size 11.]
 'TRAD_COMM' as a subset of 'PROD_COMM'
 'CGDS_COMM' as a subset of 'PROD_COMM'
 Set 'FACTDEP'
   [Set has size 1.]
 'FACTDEP' as a subset of 'ENDW_COMM'
 Set 'REGHOUS'
   [Set has size 1.]
 Set 'PRIV'
   [Set has size 1.]
 Set 'PRODTAX'
   [Set has size 1.]
 Set 'DIRTAX'
   [Set has size 1.]
 Set 'GOVT'
   [Set has size 1.]
 Set 'ROW'
   [Set has size 1.]
 Set 'MLABL'
   [Set has size 1.]
 Set 'DLABL'
   [Set has size 1.]
 Set 'ALABL'
   [Set has size 1.]
 Set 'LTMM'
   [Set has size 1.]
 Set 'LTEE'
   [Set has size 1.]
 Set 'LTSSM'
   [Set has size 1.]
 Set 'LTSSD'
   [Set has size 1.]
 Set 'LTFF'
   [Set has size 1.]
 Set 'LTRXM'
   [Set has size 1.]
 Set 'LWW'
   [Set has size 1.]
 Set 'LABELS'
   [Set has size 17.]
 'MLABL' as a subset of 'LABELS'
 'DLABL' as a subset of 'LABELS'
 'ALABL' as a subset of 'LABELS'
 'LTMM' as a subset of 'LABELS'
 'LTEE' as a subset of 'LABELS'
 'LTSSM' as a subset of 'LABELS'
 'LTSSD' as a subset of 'LABELS'
 'LTFF' as a subset of 'LABELS'
 'LTRXM' as a subset of 'LABELS'
 'LWW' as a subset of 'LABELS'
 'FACTDEP' as a subset of 'LABELS'
 'REGHOUS' as a subset of 'LABELS'
 'PRIV' as a subset of 'LABELS'
 'PRODTAX' as a subset of 'LABELS'
 'DIRTAX' as a subset of 'LABELS'
 'GOVT' as a subset of 'LABELS'
 'ROW' as a subset of 'LABELS'
 Set 'LONGLABEL'
   [Set has size 17.]
 Set 'MCOM'
   [Set has size 10.]
 Set 'DCOM'
   [Set has size 10.]
  Formula for 'ISMAR'
  Formula for 'ISMAR'
 Projection mapping from "DCOM" to "TRAD_COMM"
  Formula for set 'MARG_DCOM'
 Set 'MARG_DCOM'
   [Set has size 1.]
 'MARG_DCOM' as a subset of 'DCOM'
  Formula for 'MARGCOM'
 Set 'ACT'
   [Set has size 10.]
 Set 'TMM'
   [Set has size 3.]
 Set 'TEE'
   [Set has size 3.]
 Set 'TSSM'
   [Set has size 10.]
 Set 'TSSD'
   [Set has size 10.]
 Set 'TFF'
   [Set has size 5.]
 Set 'TRMM'
   [Set has size 3.]
 Set 'TRXM'
   [Set has size 1.]
 Set 'WW'
   [Set has size 3.]
 Set 'SAMAC'
   [Set has size 79.]
 'MCOM' as a subset of 'SAMAC'
 'DCOM' as a subset of 'SAMAC'
 'ACT' as a subset of 'SAMAC'
 'ENDW_COMM' as a subset of 'SAMAC'
 'TMM' as a subset of 'SAMAC'
 'TEE' as a subset of 'SAMAC'
 'TSSM' as a subset of 'SAMAC'
 'TSSD' as a subset of 'SAMAC'
 'TFF' as a subset of 'SAMAC'
 'TRMM' as a subset of 'SAMAC'
 'TRXM' as a subset of 'SAMAC'
 'WW' as a subset of 'SAMAC'
 'REGHOUS' as a subset of 'SAMAC'
 'PRIV' as a subset of 'SAMAC'
 'PRODTAX' as a subset of 'SAMAC'
 'DIRTAX' as a subset of 'SAMAC'
 'GOVT' as a subset of 'SAMAC'
 'CGDS_COMM' as a subset of 'SAMAC'
 Set 'ATMM'
   [Set has size 1.]
 Set 'ATEE'
   [Set has size 1.]
 Set 'AWW'
   [Set has size 1.]
 Set 'AMARG'
   [Set has size 1.]
 Set 'ASAMAC'
   [Set has size 71.]
 'MCOM' as a subset of 'ASAMAC'
 'DCOM' as a subset of 'ASAMAC'
 'ACT' as a subset of 'ASAMAC'
 'ENDW_COMM' as a subset of 'ASAMAC'
 'ATMM' as a subset of 'ASAMAC'
 'ATEE' as a subset of 'ASAMAC'
 'TSSM' as a subset of 'ASAMAC'
 'TSSD' as a subset of 'ASAMAC'
 'TFF' as a subset of 'ASAMAC'
 'AMARG' as a subset of 'ASAMAC'
 'TRXM' as a subset of 'ASAMAC'
 'AWW' as a subset of 'ASAMAC'
 'REGHOUS' as a subset of 'ASAMAC'
 'PRIV' as a subset of 'ASAMAC'
 'PRODTAX' as a subset of 'ASAMAC'
 'DIRTAX' as a subset of 'ASAMAC'
 'GOVT' as a subset of 'ASAMAC'
 'CGDS_COMM' as a subset of 'ASAMAC'
 Projection mapping from "TMM" to "REG"
 Projection mapping from "TEE" to "REG"
 Projection mapping from "WW" to "REG"
 Projection mapping from "ACT" to "TRAD_COMM"
 Projection mapping from "MCOM" to "TRAD_COMM"
 Projection mapping from "TRXM" to "MARG_COMM"
 Projection mapping from "TSSM" to "TRAD_COMM"
 Projection mapping from "TSSD" to "TRAD_COMM"
 Projection mapping from "TFF" to "ENDW_COMM"
 Projection mapping from "TRMM" to "MARG_COMM"
 Projection mapping from "TRMM" to "REG"
 Projection mapping from "AMARG" to "MARG_COMM"
 [CPU for reads, formulas etc is 1.56250000E-02 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
  
  Total memory currently used for all arrays is approximately 0.19 megabytes.
  [Add about 5-10 megabytes for the memory used by the code.]
  
  --->  Beginning the reads, formulas (etc).
 Projection mapping from "DCOM" to "TRAD_COMM"
  Formula for 'MARGCOM'
 Projection mapping from "TMM" to "REG"
 Projection mapping from "TEE" to "REG"
 Projection mapping from "WW" to "REG"
 Projection mapping from "ACT" to "TRAD_COMM"
 Projection mapping from "MCOM" to "TRAD_COMM"
 Projection mapping from "TRXM" to "MARG_COMM"
 Projection mapping from "TSSM" to "TRAD_COMM"
 Projection mapping from "TSSD" to "TRAD_COMM"
 Projection mapping from "TFF" to "ENDW_COMM"
 Projection mapping from "TRMM" to "MARG_COMM"
 Projection mapping from "TRMM" to "REG"
 Projection mapping from "AMARG" to "MARG_COMM"
 (Opened, as header, existing file 'output\basedata.har'.)
 Reading 'VIFM_GT'
 (Read real array, size 10x11x3, header "VIFM".)
 Reading 'VIPM_GT'
 (Read real array, size 10x3, header "VIPM".)
 Reading 'VIGM_GT'
 (Read real array, size 10x3, header "VIGM".)
 Reading 'VIFA_GT'
 (Read real array, size 10x11x3, header "VIFA".)
 Reading 'VIPA_GT'
 (Read real array, size 10x3, header "VIPA".)
 Reading 'VIGA_GT'
 (Read real array, size 10x3, header "VIGA".)
 Reading 'VDFM_GT'
 (Read real array, size 10x11x3, header "VDFM".)
 Reading 'VDPM_GT'
 (Read real array, size 10x3, header "VDPM".)
 Reading 'VDGM_GT'
 (Read real array, size 10x3, header "VDGM".)
 Reading 'VST_GT'
 (Read real array, size 1x3, header "VST".)
 Reading 'VXWD_GT'
 (Read real array, size 10x3x3, header "VXWD".)
 Reading 'VXMD_GT'
 (Read real array, size 10x3x3, header "VXMD".)
 Reading 'VDFA_GT'
 (Read real array, size 10x11x3, header "VDFA".)
 Reading 'VDPA_GT'
 (Read real array, size 10x3, header "VDPA".)
 Reading 'VDGA_GT'
 (Read real array, size 10x3, header "VDGA".)
 Reading 'VFM_GT'
 (Read real array, size 5x11x3, header "VFM".)
 Reading 'EVFA_GT'
 (Read real array, size 5x11x3, header "EVFA".)
 Reading 'EVOA_GT'
 (Read real array, size 5x3, header "EVOA".)
 Reading 'VDEP_GT'
 (Read real array, size 3, header "VDEP".)
 Reading 'VIMS_GT'
 (Read real array, size 10x3x3, header "VIMS".)
 Reading 'VIWS_GT'
 (Read real array, size 10x3x3, header "VIWS".)
 Reading 'VTWR_GT'
 (Read real array, size 1x10x3x3, header "VTWR".)
 Reading 'SAVE_GT'
 (Read real array, size 3, header "SAVE".)
  Formula for 'VIAM'
  Formula for 'VIPM'
  Formula for 'VIGM'
  Formula for 'VIIM'
  Formula for 'VDAM'
  Formula for 'VDPM'
  Formula for 'VDGM'
  Formula for 'VDIM'
  Formula for 'VST_GT1'
  Formula for 'VST'
  Formula for 'VST'
  Formula for 'VXWD'
  Formula for 'AVXWD'
  Formula for 'VOM_GT'
  Formula for 'VOM_GT'
  Formula for 'VOM_GT1'
  Formula for 'VOM'
  Formula for 'VFM'
  Formula for 'IMD'
  Formula for 'AIMD'
  Formula for 'EXTAX'
  Formula for 'AEXTAX'
  Formula for 'TSSMA'
  Formula for 'TSSMK'
  Formula for 'TSSMH'
  Formula for 'TSSMG'
  Formula for 'TSSDA'
  Formula for 'TSSDK'
  Formula for 'TSSDH'
  Formula for 'TSSDG'
  Formula for 'TFFA'
  Formula for 'VTWR_GT1'
  Formula for 'VTWR'
  Formula for 'AVTWR'
  Formula for 'VTWR_X'
  Formula for 'VTWR_EX'
  Formula for 'VTWR_EX'
  Formula for 'AVTWR_EX'
  Formula for 'WWM'
  Formula for 'AWWM'
  Formula for 'YH'
  Formula for 'YG'
  Formula for 'VDEP'
  Formula for 'VDEP'
  Formula for 'SAVE'
  Formula for 'CAPTR'
  Formula for 'CAPWW'
  Formula for 'ACAPWW'
  Formula for 'PTAXACT'
  Formula for 'PTAXINV'
  Formula for 'RHF'
  Formula for 'RHF'
  Formula for 'DTAX'
  Formula for 'RHTMM'
  Formula for 'RHTEE'
  Formula for 'ARHTMM'
  Formula for 'ARHTEE'
  Formula for 'RHTSSM'
  Formula for 'RHTSSD'
  Formula for 'RHTFF'
  Formula for 'RHTPT'
  Formula for 'RHTDT'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'ASAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
  Formula for 'SAM'
 (Opened, for writing, header file 'output\gtapsam.har'.)
 Writing 'ASAM'
 (Written real array, size 71x71x3, header "ASAM".)
 Writing 'SAM'
 (Written real array, size 79x79x3, header "SAM".)
 Writing elements of set 'SAMAC'
   (79 character strings, each of length 12 written. Header 'SSET')
 Writing elements of set 'ASAMAC'
   (71 character strings, each of length 12 written. Header 'ASET')
 Writing elements of set 'LABELS'
   (17 character strings, each of length 12 written. Header 'LAB ')
 Writing elements of set 'LONGLABEL'
   (17 character strings, each of length 12 written. Header 'LABL')
 Writing elements of set 'ACT'
   (10 character strings, each of length 12 written. Header 'ACT ')
 Writing elements of set 'AMARG'
   (1 character strings, each of length 12 written. Header 'AMRG')
 Writing elements of set 'ATEE'
   (1 character strings, each of length 12 written. Header 'ATEE')
 Writing elements of set 'ATMM'
   (1 character strings, each of length 12 written. Header 'ATMM')
 Writing elements of set 'AWW'
   (1 character strings, each of length 12 written. Header 'AWW ')
 Writing elements of set 'TEE'
   (3 character strings, each of length 12 written. Header 'TEE ')
 Writing elements of set 'TFF'
   (5 character strings, each of length 12 written. Header 'TFF ')
 Writing elements of set 'TMM'
   (3 character strings, each of length 12 written. Header 'TMM ')
 Writing elements of set 'TRMM'
   (3 character strings, each of length 12 written. Header 'TRMM')
 Writing elements of set 'TRXM'
   (1 character strings, each of length 12 written. Header 'TRXM')
 Writing elements of set 'TSSD'
   (10 character strings, each of length 12 written. Header 'TSSD')
 Writing elements of set 'TSSM'
   (10 character strings, each of length 12 written. Header 'TSSM')
 Writing elements of set 'WW'
   (3 character strings, each of length 12 written. Header 'WW  ')
 Transferring unwritten from file 'GTAPSETS' to file 'GTAPSAM'
 (Opened, as header, existing file 'output\sets.har'.)
 (Written real array, size 1, header "DVER".)
   (1 character strings, each of length 59 written. Header '
 DREL                                    ')
   (3 character strings, each of length 12 written. Header '
 H1                                      ')
   (10 character strings, each of length 12 written. Header '
 H2                                      ')
   (5 character strings, each of length 12 written. Header '
 H6                                      ')
   (1 character strings, each of length 12 written. Header '
 H9                                      ')
   (1 character strings, each of length 12 written. Header '
 MARG                                    ')
   (141 character strings, each of length 12 written. Header '
 DH1                                     ')
   (57 character strings, each of length 12 written. Header '
 DH2                                     ')
   (8 character strings, each of length 12 written. Header '
 DH6                                     ')
   (3 character strings, each of length 12 written. Header '
 DMAR                                    ')
   (2 character strings, each of length 12 written. Header '
 TARS                                    ')
   (57 character strings, each of length 12 written. Header '
 MCOM                                    ')
   (141 character strings, each of length 12 written. Header '
 MREG                                    ')
   (8 character strings, each of length 12 written. Header '
 MEND                                    ')
   (3 character strings, each of length 12 written. Header '
 MMAR                                    ')
   (1 character strings, each of length 65 written. Header '
 LICN                                    ')
   (3 character strings, each of length 50 written. Header '
 H1L                                     ')
   (10 character strings, each of length 50 written. Header '
 H2L                                     ')
 (Opened, for writing, header file 'output\gtapsam.har'.)
 [CPU for reads, formulas etc is 1.56250000E-02 seconds.]
 Elapsed time for reads, formulas etc is: less than one second.
 [CPU for all of this 0-step calculation is 3.12500000E-02 seconds.]
 Elapsed time for all this 0-step calculation is: less than one second.
  [Total CPU is 0.10937500 seconds.]
  
  (Inputs have been taken from the Command file
  'C:\GTPAg2\GTAP10P2\GTAP\samview.cmf')
  
  (The program has completed without error.)
  (There were         1 warnings.)
  (If you have a LOG file, search for '%%W' to see them.)
  (The last was:
   'Your GEMPACK licence will expire on 30-APR-2018')
  Total elapsed time is: less than one second.
  
 (Output has also been written to log file 'samview.log'.)
Running program AggHAR [built 29/Jan/2016] at 4/23/2018 1:45:57 PM
Program AggHAR:
  Using OLD input file:                 input\gsdvole.har
    and SUP supplementary mapping file: aggsupp.har
to make NEW aggregated file:            output\gsdvole.har

Options:
   Headers unaffected by aggregation will be copied [no U option].
   Original set names will be used on aggregated headers [P option].
   Sparse storage will not be used.
   Memory-conserving method will be used [M option].
Read SUP file: aggsupp.har     flavour: New Fujitsu
Opened OLD file: input\gsdvole.har     flavour: New Fujitsu

Scanning RE matrices on OLD file for sets.....
The following sets were found in RE matrices on the OLD file (size in brackets):
   ERG_COMM(6) at header EDF 
   PROD_COMM(58) at header EDF 
   REG(141) at header EDF 

The following additional sets were found in the SUP file (size in brackets):
   AREG(3) at header H1  
   ATRAD_COMM(10) at header H2  
   AENDW_COMM(5) at header H6  
   APROD_COMM(11) at header HX  
   TRAD_COMM(57) at header DH2 
   ENDW_COMM(8) at header DH6 

The following subset relations were detected:
   ERG_COMM(6) subset of PROD_COMM(58)
   ERG_COMM(6) subset of TRAD_COMM(57)
   ATRAD_COMM(10) subset of APROD_COMM(11)
   TRAD_COMM(57) subset of PROD_COMM(58)

The following mappings were recognized in the SUP file:
   Mapping MREG from REG(141) to AREG(3)
   Mapping MCOM from TRAD_COMM(57) to ATRAD_COMM(10)
   Mapping MPRD from PROD_COMM(58) to APROD_COMM(11)
   Mapping MEND from ENDW_COMM(8) to AENDW_COMM(5)

Set REG(141) will be mapped by Mapping MREG from REG(141) to AREG(3)

Set TRAD_COMM(57) will be mapped by Mapping MCOM from TRAD_COMM(57) to ATRAD_COMM(10)

Set PROD_COMM(58) will be mapped by Mapping MPRD from PROD_COMM(58) to APROD_COMM(11)

Set ENDW_COMM(8) will be mapped by Mapping MEND from ENDW_COMM(8) to AENDW_COMM(5)

No explicit mapping from set ERG_COMM(6)
   However ERG_COMM(6) is subset of PROD_COMM(58)
       which IS mapped by MPRD to set APROD_COMM
   Created new set AGGERG_COMM(3) subset of APROD_COMM(11)
   Created new Mapping MAPERG_COMM from ERG_COMM(6) to AGGERG_COMM(3)


Could not locate "WAGG" header on SUP file,
so no weighted aggregation will be performed.

Beginning aggregation .....
Ignored reserved header XXCR
Ignored reserved header XXCD
Ignored reserved header XXCP
Copying data at DREL type 1C
Copied RE data DVER
Replaced 1C set element data at EC  
Aggregated RE data EDF  in dimensions REG PROD_COMM ERG_COMM
Aggregated RE data EDG  in dimensions REG ERG_COMM
Aggregated RE data EDP  in dimensions REG ERG_COMM
Aggregated RE data EIF  in dimensions REG PROD_COMM ERG_COMM
Aggregated RE data EIG  in dimensions REG ERG_COMM
Aggregated RE data EIP  in dimensions REG ERG_COMM
Aggregated RE data EXI  in dimensions REG REG ERG_COMM
Finished OK; created aggregated file: output\gsdvole.har     flavour: New Fujitsu
0.1 seconds
Running program AggHAR [built 29/Jan/2016] at 4/23/2018 1:45:58 PM
Program AggHAR:
  Using OLD input file:                 input\co2.har
    and SUP supplementary mapping file: aggsupp.har
to make NEW aggregated file:            output\co2.har

Options:
   Headers unaffected by aggregation will be copied [no U option].
   Original set names will be used on aggregated headers [P option].
   Sparse storage will not be used.
   Memory-conserving method will be used [M option].
Read SUP file: aggsupp.har     flavour: New Fujitsu
Opened OLD file: input\co2.har     flavour: New Fujitsu

Scanning RE matrices on OLD file for sets.....
The following sets were found in RE matrices on the OLD file (size in brackets):
   FUEL_COMM(5) at header MDF 
   PROD_COMM(58) at header MDF 
   REG(141) at header MDF 

The following additional sets were found in the SUP file (size in brackets):
   AREG(3) at header H1  
   ATRAD_COMM(10) at header H2  
   AENDW_COMM(5) at header H6  
   APROD_COMM(11) at header HX  
   TRAD_COMM(57) at header DH2 
   ENDW_COMM(8) at header DH6 

The following subset relations were detected:
   FUEL_COMM(5) subset of PROD_COMM(58)
   FUEL_COMM(5) subset of TRAD_COMM(57)
   ATRAD_COMM(10) subset of APROD_COMM(11)
   TRAD_COMM(57) subset of PROD_COMM(58)

The following mappings were recognized in the SUP file:
   Mapping MREG from REG(141) to AREG(3)
   Mapping MCOM from TRAD_COMM(57) to ATRAD_COMM(10)
   Mapping MPRD from PROD_COMM(58) to APROD_COMM(11)
   Mapping MEND from ENDW_COMM(8) to AENDW_COMM(5)

Set REG(141) will be mapped by Mapping MREG from REG(141) to AREG(3)

Set TRAD_COMM(57) will be mapped by Mapping MCOM from TRAD_COMM(57) to ATRAD_COMM(10)

Set PROD_COMM(58) will be mapped by Mapping MPRD from PROD_COMM(58) to APROD_COMM(11)

Set ENDW_COMM(8) will be mapped by Mapping MEND from ENDW_COMM(8) to AENDW_COMM(5)

No explicit mapping from set FUEL_COMM(5)
   However FUEL_COMM(5) is subset of PROD_COMM(58)
       which IS mapped by MPRD to set APROD_COMM
   Created new set AGGFUEL_COMM(3) subset of APROD_COMM(11)
   Created new Mapping MAPFUEL_COMM from FUEL_COMM(5) to AGGFUEL_COMM(3)


Could not locate "WAGG" header on SUP file,
so no weighted aggregation will be performed.

Beginning aggregation .....
Ignored reserved header XXCR
Ignored reserved header XXCD
Ignored reserved header XXCP
Copying data at DREL type 1C
Copied RE data DVER
Replaced 1C set element data at FC  
Aggregated RE data MDF  in dimensions REG PROD_COMM FUEL_COMM
Aggregated RE data MDG  in dimensions REG FUEL_COMM
Aggregated RE data MDP  in dimensions REG FUEL_COMM
Aggregated RE data MIF  in dimensions REG PROD_COMM FUEL_COMM
Aggregated RE data MIG  in dimensions REG FUEL_COMM
Aggregated RE data MIP  in dimensions REG FUEL_COMM
Finished OK; created aggregated file: output\co2.har     flavour: New Fujitsu
0.0 seconds
