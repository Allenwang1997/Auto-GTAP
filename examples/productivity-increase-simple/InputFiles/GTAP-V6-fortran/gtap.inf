
    TTTTTTTTTT  AAAAAAAAAA   BBBBBBB      LLLL        OOOOOOOOOO
    TTTTTTTTTT  AAA    AAA   BBBBBBBBB    LLLL        OOOOOOOOOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBBBBBB      LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBBBBBBBB    LLLLLLLLL   OOOOOOOOOO
       TTT      AAA    AAA   BBBBBBB      LLLLLLLLL   OOOOOOOOOO

 <TABLO  Version 6.5   January 2016>                                   





                     GEMPACK SOFTWARE
     << COPYRIGHT 1987-2016:  The Impact Project and KPSOFT >>
   
   

    +++  INFORMATION ABOUT THIS PRINT FILE  +++
   
 
 ! This file was created at 14:29:06 on 11-JUL-2018 by the program
 !  <TABLO  Version 6.5   January 2016>
 ! which accesses some of the routines in the GEMPACK software release
 !  <GEMPACK Release 11.4.003   January 2016>
 
 !     -------------------------------------------------------                
 !    !            GEMPACK Software System Licence            !               
 !    !  Source Code Licence for the GEMPACK Software System  !               
 !    !                 Licence No.  GFM-0137                 !               
 !    !          Licence for Release 11.4 of GEMPACK          !               
 !    !          U.S. International Trade Commission          !               
 !    !                     Washington DC                     !               
 !    !                          USA                          !               
 !    !    (Your GEMPACK licence expires on 30-APR-2019.)     !               
 !     -------------------------------------------------------                
    

    +++  END OF INFORMATION ABOUT THIS PRINT FILE  +++

 ======================================================
           TABLO PORTABLE   
 ++> TABLO OPTIONS   ( --> indicates those in effect )
 ======================================================



      -----------                   ----------
  --> F1 CHECK                      L1 CHECK
      F2 CONDENSATION               L2 CONDENSATION
      F3 CODE GENERATION        --> L3 CODE GENERATION
      Mode
      ----
      INTERACTIVE
      BATCH
  --> UNSPECIFIED
 

 ==================================================
 ++> TABLO Input file is 'gtap.tab'
 ++> This Information file is 'gtap'
 ==================================================



 ******************************************************************************
 -1-
 -->                     Starting CHECK stage

 ******************************************************************************


      1   !<
      2       ==================================
      3       Global Trade Analysis Project
      4       The GTAP Modeling Framework
      5       GTAP Version 6.2
      6       September 2003
      7       ==================================
      8    
      9       For documentation see:
     10       (a) Hertel, T.W. and M.E. Tsigas, "Structure of the Standard GTAP Model",
     11       Chapter 2 in T.W. Hertel (editor) "Global Trade Analysis: Modeling and
     12       Applications", Cambridge University Press, 1997.
     13    
     14       (b) R.A. McDougall, "A New Regional Household Demand System for GTAP",
     15       GTAP Technical Paper #20, Center for Global Trade Analysis, Purdue
     16       University
     17    
     18       (c) Hertel T.W., K. Itakura and R.A. McDougall, "GTAP.TAB: The Standard
     19       GTAP Model" (yet to be drafted), GTAP Technical Paper, Center for Global
     20       Trade Analysis, Purdue University,
     21       http://www.agecon.purdue.edu/gtap/techpapr/.  This technical paper
     22       documents all of the changes since the GTAP book TAB file.
     23    
     24    
     25       --------------------
     26       HISTORY of this file
     27       --------------------
     28    
     29       Version 6.2 fixes bugs and provides minor enhancements:
     30           - EV_ALT, CNTdpar fix
     31           - SX_IR fix
     32           - new treatment of export and import tariffs
     33           - original levels defined for power-of-tax variables
     34           - CNTalleffir range extended from TRAD_COMM to DEMD_COMM
     35           - INCOME formula, quantity index equations more AnalyzeGE-friendly
     36    
     37       Version 6.1 fixes bugs in 6.0:
     38           - Computation of tax receipts ratio is now separately done for total
     39             tax and indirect tax (equation DTAXRATIO and DINDTAXRATIO).
     40           - Computation of DTBALR, the ratio of the trade balance to regional
     41             income, has been corrected (equation DTBALRATIO).
     42           - Computation of EV_ALT, the summary variable for EV, has been
     43             corrected (equation EV_DECOMPOSITION).
     44       Also the notation has been changed for the tax-income ratio variables:
     45           TGCR -> del_taxrgc,    TPCR -> del_taxrpc,    TIUR -> del_taxriu,
     46           TFUR -> del_taxrfu,    TOUTR -> del_taxrout,  TEXPR -> del_taxrexp,
     47           TIMPR -> del_taxrimp,  TINCR -> del_taxrinc,  DTAXR -> del_ttaxr.
     48    
     49       Version 6.0 replaces version 5.0 used in the August 2000 short course, but
     50       never formally released.  The subsequent changes have been quite
     51       significant (primarily focused on final demand and welfare decomposition),
     52       so we decided to give it a new version number.  This also prevents
     53       confusion with the soon to be released version 5.0 GTAP data set.
     54    
     55       The differences with the previous publicly released version of GTAP.TAB,
     56       Version 4.1, dated November 1998, are numerous.  One goal of this version
     57       is to reorganize the TAB file which had not be redesigned since its
     58       inception.  In addition, there is a long list of substantive changes that
     59       have been made between Version 4.1 and 6.0.  These include:
     60    
     61           - provision for multiple margins sectors (to accommodate post version
     62             5 GTAP data)
     63           - introduction of the new theory of final demand following McDougall's
     64             GTAP Technical Paper #20
     65           - modification of the welfare decomposition following McDougall's
     66             Technical Paper #20
     67           - correction to the treatment of technical change, ao, in the presence
     68             of ESUBT > 0 (affects equations VADEMAND and INTDEMAND)
     69           - addition of import-augmenting "technical change" in the Armington
     70             nest: ams which can be used to lower the effective price of imported
     71             products
     72           - specification of Baldwin-type capital accmulation effects following
     73             Francois' Technical Paper #7
     74           - introduction of uniform consumption tax instrument, tp(r)
     75    
     76    
     77       ----------------------------------
     78       Overview of the GTAP.TAB Structure
     79       ----------------------------------
     80       Preliminaries:
     81           FILES
     82           SETS
     83           READ statements of Base Data
     84           Common VARIABLES
     85           Common COEFFICIENTS
     86    
     87       Modules:
     88           1.  Government Consumption
     89           2.  Private Consumption
     90           3.  Firms
     91           4.  Investment, Global Bank, and Savings
     92           5.  International Trade
     93           6.  International Transport Services
     94           7.  Regional Household
     95           8.  Equilibrium Conditions
     96    
     97       Appendices:
     98           A.  Summary Indices
     99           B.  Equivalent Variation
    100           C.  Welfare Decomposition
    101           D.  Terms of Trade Decomposition
    102   >!
    103    
    104    
    105   !<
    106       -----
    107       FILES
    108       -----
    109   >!
    110    
    111   File
    112       GTAPSETS # file with set specification #;
    113   File
    114       GTAPDATA # file containing all base data #;
    115   File
    116       GTAPPARM # file containing behavioral parameters #;
    117    
    118    
    119   !<
    120       ----
    121       SETS
    122       ----
    123    
    124       Sets define relevant groupings of entities over which we will be
    125       performing operations in the model.  SUBSETS are defined in order to
    126       facilitate summation over only a portion of a given group, e.g., tradeable
    127       commodities.  Users with access to GEMPACK can increase the maximum set
    128       sizes to permit larger aggregations, provided you have sufficient RAM for
    129       implementing them The standard model (10x10 aggregation with decomposition
    130       code) is designed to run with 16 Mb of RAM.
    131    
    132    
    133       Aide-Memoire for Sets
    134       ---------------------
    135    
    136       |--------------------------------------|
    137       |         DEMD_COMM                    |
    138       |----------------------------------------------------|
    139       | ENDW_COMM |       TRAD_COMM          |  CGDS_COMM  |
    140       |----------------------------------------------------|
    141       |        NSAV_COMM                                   |
    142       |----------------------------------------------------|
    143                   |                     PROD_COMM          |
    144                   |----------------------------------------|
    145    
    146       For Endowments,
    147       |-------------------------|
    148       | ENDW_COMM               |
    149       |-------------------------|
    150       | ENDWM_COMM | ENDWS_COMM |
    151       |-------------------------|
    152   >!
    153    
    154   Coefficient
    155       VERNUM # version of GTAP data #;
    156   Read
    157       VERNUM from file GTAPDATA header "DVER";
    158   Update (change)
    159       VERNUM = 0.0; ! force it to be copied to update file !
    160    
    161   Set
    162       REG # regions in the model #
    163       maximum size 10 read elements from file GTAPSETS header "H1";
    164   Set
    165       TRAD_COMM # traded commodities #
    166       maximum size 10 read elements from file GTAPSETS header "H2";
    167   Set
    168       MARG_COMM # margin commodities #
    169       maximum size 10 read elements from file GTAPSETS header "MARG";
    170   Subset
    171       MARG_COMM is subset of TRAD_COMM;
    172   Set
    173       NMRG_COMM # non-margin commodities # = TRAD_COMM - MARG_COMM;
    174   Set
    175       CGDS_COMM # capital goods commodities #
    176       maximum size 1 read elements from file GTAPSETS header "H9";
    177   Set
    178       ENDW_COMM # endowment commodities #
    179       maximum size 5 read elements from file GTAPSETS header "H6";
    180   Set
    181       PROD_COMM # produced commodities # = TRAD_COMM union CGDS_COMM;
    182   Set
    183       DEMD_COMM # demanded commodities # = ENDW_COMM union TRAD_COMM;
    184   Set
    185       NSAV_COMM # non-savings commodities # = DEMD_COMM union CGDS_COMM;
    186   Subset
    187       PROD_COMM is subset of NSAV_COMM;
    188    
    189   !<
    190       Check for non-overlapping sets (users can't use the same name for elements
    191       of ENDW_COMM, TRAD_COMM or CGDS_COMM).
    192   >!
    193    
    194   Coefficient
    195       SIZE_TRAD # size of TRAD_COMM set #;
    196   Formula
    197       SIZE_TRAD = sum(i,TRAD_COMM, 1);
    198   Coefficient
    199       SIZE_ENDW # size of ENDW_COMM set #;
    200   Formula
    201       SIZE_ENDW = sum(i,ENDW_COMM, 1);
    202   Coefficient
    203       SIZE_DEMD # size of DEMD_COMM set #;
    204   Formula
    205       SIZE_DEMD = sum(i,DEMD_COMM, 1);
    206   Assertion (initial)
    207       SIZE_DEMD = SIZE_TRAD + SIZE_ENDW;
    208    
    209   Coefficient
    210       SIZE_CGDS # size of CGDS_COMM set #;
    211   Formula
    212       SIZE_CGDS = sum(i,CGDS_COMM, 1);
    213   Coefficient
    214       SIZE_PROD # size of PROD_COMM set #;
    215   Formula
    216       SIZE_PROD = sum(i,PROD_COMM, 1);
    217   Assertion (initial)
    218       SIZE_PROD = SIZE_TRAD + SIZE_CGDS;
    219    
    220   !<
    221       The sluggish endowments are now defined dynamically, based on the variable
    222       SLUG.  SLUG is a binary variable that is zero for mobile endowments and
    223       one for sluggish endowments.  We must define and read in this variable
    224       before proceeding further.
    225   >!
    226   Coefficient (integer,parameter) (all,i,ENDW_COMM)
    227       SLUG(i) # sluggish primary factor endowments #;
    228   Read
    229       SLUG from file GTAPPARM header "SLUG";
    230    
    231   Set
    232       ENDWS_COMM
    233       # sluggish endowment commodities # = (all,i,ENDW_COMM: SLUG(i)>0);
    234   Set
    235       ENDWM_COMM
    236       # mobile endowment commodities # = ENDW_COMM - ENDWS_COMM;
    237   Set
    238       ENDWC_COMM # capital endowment commodity # (capital);
    239   !<
    240       This single element set is defined for the sake of convenience.
    241   >!
    242   Subset
    243       ENDWC_COMM is subset of ENDW_COMM;
    244    
    245    
    246   !<
    247       ----------------------------
    248       READ Statements of Base Data
    249       ----------------------------
    250    
    251       We read in here almost all the base data, and define variables and
    252       coefficients associated with them.  A few data arrays used each in a
    253       single module are read in those modules: VKB, VTMFSD, and DPARSUM.
    254    
    255       The READ statements are divided into six sections:
    256    
    257       Saving
    258       Government Consumption
    259       Private Consumption
    260       Firms
    261       Global Bank
    262       International Trade and Transport
    263    
    264       Since these are invariant for each solution of the model, they are termed
    265       coefficients.  Coefficients are assigned upper case to distinguish them
    266       from variables.  (This is purely cosmetic, as GEMPACK is not
    267       case-sensitive.) Variables in GEMPACK are assigned lower case labels to
    268       denote the fact that they are percentage changes.  In some cases, original
    269       levels values for selected variables are defined to permit the user to
    270       compare post-simulation levels values across several simulations.
    271    
    272       The updating command indicates how the new level of the coefficient will
    273       be computed based on the previous solution of the linearized equations.
    274       Note that the notation used in the update commands is a shorthand for
    275       total differentials of these coefficient values.  Thus, w * v indicates
    276       that we want to take the total differential of W * V, plug in the
    277       calculated values of w and v, and add this to the base level in order to
    278       obtain a revised value for this product.
    279   >!
    280    
    281    
    282   !<
    283       Saving
    284       ------
    285   >!
    286    
    287   Variable (all,r,REG)
    288       psave(r) # price of savings in region r #;
    289   Variable (all,r,REG)
    290       qsave(r) # regional demand for NET savings #;
    291   Coefficient (all,r,REG)
    292       SAVE(r) # expenditure on NET savings in region r valued at agent's prices #;
    293   Update (all,r,REG)
    294       SAVE(r) = psave(r) * qsave(r);
    295   Read
    296       SAVE from file GTAPDATA header "SAVE";
    297    
    298    
    299   !<
    300       Government Consumption
    301       ----------------------
    302   >!
    303    
    304   Variable (all,i,TRAD_COMM)(all,s,REG)
    305       pgd(i,s) # price of domestic i in government consumption in s #;
    306   Variable (orig_level=VDGM)(all,i,TRAD_COMM)(all,s,REG)
    307       qgd(i,s) # government hhld demand for domestic i in region s #;
    308   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    309       VDGA(i,r) # government consumption expenditure on domestic i in r #;
    310   Update (all,i,TRAD_COMM)(all,r,REG)
    311       VDGA(i,r) = pgd(i,r) * qgd(i,r);
    312   Read
    313       VDGA from file GTAPDATA header "VDGA";
    314    
    315   Variable (orig_level=1.0)(all,i,NSAV_COMM)(all,r,REG)
    316       pm(i,r) # market price of commodity i in region r #;
    317   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    318       VDGM(i,r) # government consumption expenditure on domestic i in r #;
    319   Update (all,i,TRAD_COMM)(all,r,REG)
    320       VDGM(i,r) = pm(i,r) * qgd(i,r);
    321   Read
    322       VDGM from file GTAPDATA header "VDGM";
    323    
    324   Variable (all,i,TRAD_COMM)(all,s,REG)
    325       pgm(i,s) # price of imports of i in government consumption in s #;
    326   Variable (orig_level=VIGM)(all,i,TRAD_COMM)(all,s,REG)
    327       qgm(i,s) # government hhld demand for imports of i in region s #;
    328   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    329       VIGA(i,r) # government consumption expenditure on imported i #;
    330   Update (all,i,TRAD_COMM)(all,r,REG)
    331       VIGA(i,r) = pgm(i,r) * qgm(i,r);
    332   Read
    333       VIGA from file GTAPDATA header "VIGA";
    334    
    335   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
    336       pim(i,r) # market price of composite import i in region r #;
    337   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    338       VIGM(i,r) # gov't consumption expenditure on i in r #;
    339   Update (all,i,TRAD_COMM)(all,r,REG)
    340       VIGM(i,r) = pim(i,r) * qgm(i,r);
    341   Read
    342       VIGM from file GTAPDATA header "VIGM";
    343    
    344    
    345   !<
    346       Private Consumption
    347       -------------------
    348   >!
    349    
    350   Variable (all,i,TRAD_COMM)(all,s,REG)
    351       ppd(i,s) # price of domestic i to private households in s #;
    352   Variable (orig_level=VDPM)(all,i,TRAD_COMM)(all,s,REG)
    353       qpd(i,s) # private hhld demand for domestic i in region s #;
    354   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    355       VDPA(i,r) # private consumption expenditure on domestic i in r #;
    356   Update (all,i,TRAD_COMM)(all,r,REG)
    357       VDPA(i,r) = ppd(i,r) * qpd(i,r);
    358   Read
    359       VDPA from file GTAPDATA header "VDPA";
    360    
    361   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    362       VDPM(i,r) # private consumption expenditure on domestic i in r #;
    363   Update (all,i,TRAD_COMM)(all,r,REG)
    364       VDPM(i,r) = pm(i,r) * qpd(i,r);
    365   Read
    366       VDPM from file GTAPDATA header "VDPM";
    367    
    368   Variable (all,i,TRAD_COMM)(all,s,REG)
    369       ppm(i,s) # price of imports of i by private households in s #;
    370   Variable (orig_level=VIPM)(all,i,TRAD_COMM)(all,s,REG)
    371       qpm(i,s) # private hhld demand for imports of i in region s #;
    372   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    373       VIPA(i,r) # private consumption expenditure on imported i in r #;
    374   Update (all,i,TRAD_COMM)(all,r,REG)
    375       VIPA(i,r) = ppm(i,r) * qpm(i,r);
    376   Read
    377       VIPA from file GTAPDATA header "VIPA";
    378    
    379   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    380       VIPM(i,r) # private consumption expenditure on i in r #;
    381   Update (all,i,TRAD_COMM)(all,r,REG)
    382       VIPM(i,r)= pim(i,r) * qpm(i,r);
    383   Read
    384       VIPM from file GTAPDATA header "VIPM";
    385    
    386    
    387   !<
    388       Firms
    389       -----
    390   >!
    391    
    392   Variable (all,i,NSAV_COMM)(all,r,REG)
    393       ps(i,r) # supply price of commodity i in region r #;
    394   Variable (orig_level=VOM)(all,i,NSAV_COMM)(all,r,REG)
    395       qo(i,r) # industry output of commodity i in region r #;
    396   Coefficient (ge 0)(all,i,ENDW_COMM)(all,r,REG)
    397       EVOA(i,r) # value of commodity i output in region r #;
    398   Update (all,i,ENDW_COMM)(all,r,REG)
    399       EVOA(i,r) = ps(i,r) * qo(i,r);
    400   Read
    401       EVOA from file GTAPDATA header "EVOA";
    402    
    403   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    404       pfe(i,j,r) # firms' price for endowment commodity i in ind. j, region r #;
    405   Variable (orig_level=VFM)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    406       qfe(i,j,r)  # demand for endowment i for use in ind. j in region r #;
    407   Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    408       EVFA(i,j,r) # producer expenditure on i by j in r at agent's prices #;
    409   Update (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    410       EVFA(i,j,r) = pfe(i,j,r) * qfe(i,j,r);
    411   Read
    412       EVFA from file GTAPDATA header "EVFA";
    413    
    414   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    415       pfd(i,j,s) # price index for domestic purchases of i by j in region s #;
    416   Variable (orig_level=VDFM)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    417       qfd(i,j,s)  # domestic good i demanded by industry j in region s #;
    418   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    419       VDFA(i,j,r) # purchases of domestic i for use by j in region r #;
    420   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    421       VDFA(i,j,r) = pfd(i,j,r) * qfd(i,j,r);
    422   Read
    423       VDFA from file GTAPDATA header "VDFA";
    424    
    425   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    426       pfm(i,j,s) # price index for imports of i by j in region s #;
    427   Variable (orig_level=VIFM)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    428       qfm(i,j,s) # demand for i by industry j in region s #;
    429   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    430       VIFA(i,j,r) # purchases of imported i for use by j in region r #;
    431   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    432       VIFA(i,j,r) = pfm(i,j,r) * qfm(i,j,r);
    433   Read
    434       VIFA from file GTAPDATA header "VIFA";
    435    
    436   Variable (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    437       pmes(i,j,r) # market price of sluggish endowment i used by j in r #;
    438   Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    439       VFM(i,j,r) # producer expenditure on i by j in r valued at mkt prices #;
    440   Update (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
    441       VFM(i,j,r) = pm(i,r) * qfe(i,j,r);
    442   Update (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    443       VFM(i,j,r) = pmes(i,j,r) * qfe(i,j,r);
    444   Read
    445       VFM from file GTAPDATA header "VFM";
    446    
    447   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    448       VIFM(i,j,r) # purchases of imports i for use by j in region r #;
    449   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    450       VIFM(i,j,r) = pim(i,r) * qfm(i,j,r);
    451   Read
    452       VIFM from file GTAPDATA header "VIFM";
    453    
    454   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    455       VDFM(i,j,r) # purchases of domestic i for use by j in region r #;
    456   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    457       VDFM(i,j,r) = pm(i,r) * qfd(i,j,r);
    458   Read
    459       VDFM from file GTAPDATA header "VDFM";
    460    
    461    
    462   !<
    463       Global Bank
    464       -----------
    465   >!
    466    
    467   Variable (all,r,REG)
    468       kb(r) # beginning-of-period capital stock in r #;
    469   Variable (all,r,REG)
    470       pcgds(r) # price of investment goods = ps("cgds",r) #;
    471   Coefficient (ge 0)(all,r,REG)
    472       VDEP(r) # value of capital depeciation in r (exogenous) #;
    473   Update (all,r,REG)
    474       VDEP(r) = kb(r) * pcgds(r);
    475   Read
    476       VDEP from file GTAPDATA header "VDEP";
    477   !<
    478       Value of capital depreciation is used to compute the (exogenous)
    479       depreciation rate and therefore does not appear in update.
    480   >!
    481    
    482    
    483   !<
    484       International Trade and Transport
    485       ---------------------------------
    486   >!
    487    
    488   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    489       pms(i,r,s) # domestic price for good i supplied from r to region s #;
    490   Variable (orig_level=VXMD)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    491       qxs(i,r,s) # export sales of commodity i from r to region s #;
    492   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    493       VIMS(i,r,s) # imports of i from r to s valued at domestic mkt prices #;
    494   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    495       VIMS(i,r,s) = pms(i,r,s) * qxs(i,r,s);
    496   Read
    497       VIMS from file GTAPDATA header "VIMS";
    498    
    499   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    500       pcif(i,r,s) # CIF world price of commodity i supplied from r to s #;
    501   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    502       VIWS(i,r,s) # imports of i from r to s valued CIF (tradeables only) #;
    503   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    504       VIWS(i,r,s) = pcif(i,r,s) * qxs(i,r,s);
    505   Read
    506       VIWS from file GTAPDATA header "VIWS";
    507    
    508   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    509       pfob(i,r,s) # FOB world price of commodity i supplied from r to s #;
    510   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    511       VXWD(i,r,s) # exports of i from r to s valued FOB (tradeables only) #;
    512   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    513       VXWD(i,r,s) = pfob(i,r,s) * qxs(i,r,s);
    514   Read
    515       VXWD from file GTAPDATA header "VXWD";
    516    
    517   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    518       VXMD(i,r,s)
    519       # exports of i from r to s valued at mkt prices (tradeables only) #;
    520   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    521       VXMD(i,r,s) = pm(i,r) * qxs(i,r,s);
    522   Read
    523       VXMD from file GTAPDATA header "VXMD";
    524    
    525   Variable (orig_level=VST)(all,m,MARG_COMM)(all,r,REG)
    526       qst(m,r) # sales of m from r to international transport #;
    527   Coefficient (ge 0)(all,m,MARG_COMM)(all,r,REG)
    528       VST(m,r)
    529       # exprts of m from r for int'l trnsport valued at mkt p (tradeables only) #;
    530   Update (all,m,MARG_COMM)(all,r,REG)
    531       VST(m,r) = pm(m,r) * qst(m,r);
    532   Read
    533       VST from file GTAPDATA header "VST";
    534    
    535    
    536   !<
    537       ----------------
    538       Common VARIABLES
    539       ----------------
    540    
    541       Common variables are defined as variables which are used in more than one
    542       module.  For example, the variable y(r) is used in the Goverment
    543       Consumption, Private Consumption, Firms, Regional Household and
    544       Investment, Global Bank and Savings modules.  Appendices, e.g., Summary
    545       Indices, are not included in this definition.
    546   >!
    547    
    548   Variable (all,r,REG)
    549       y(r) # regional household income in region r #;
    550   Variable (all,r,REG)
    551       pop(r) # regional population #;
    552   Variable (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    553       qoes(i,j,r) # supply of sluggish endowment i used by j in r #;
    554   Variable (all,i,ENDW_COMM)(all,r,REG)
    555       endwslack(i,r) # slack variable in endowment market clearing condition #;
    556   !<
    557       This is exogenous, unless the user wishes to employ a partial equilibrium
    558       closure in which the price of one or more of the primary factors is fixed.
    559   >!
    560    
    561   Variable (all,r,REG)
    562       pgov(r) # price index for gov't hhld expenditure in region r #;
    563   Variable (all,r,REG)
    564       yg(r)
    565       # regional government consumption expenditure in region r #;
    566   Variable (all,r,REG)
    567       ug(r) # per capita utility from gov't expend. in region r #;
    568   Variable (all,r,REG)
    569       ppriv(r)
    570       # price index for private consumption expenditure in region r #;
    571   Variable (all,r,REG)
    572       uepriv(r)
    573       # elasticity of cost wrt utility from private consumption #;
    574   Variable (all,r,REG)
    575       yp(r) # regional private consumption expenditure in region r #;
    576   Variable (all,r,REG)
    577       up(r) # per capita utility from private expend. in region r #;
    578   Variable (all,i,NSAV_COMM)(all,r,REG)
    579       to(i,r) # output (or income) tax in region r #;
    580   !<
    581       Note:  It is important that the user NOT shock the tax on capital goods
    582       output, as this will cause an inconsistency in the update relationship for
    583       VOM(cgds).
    584   >!
    585   Variable (orig_level=VIM)(all,i,TRAD_COMM)(all,s,REG)
    586       qim(i,s) # aggregate imports of i in region s, market price weights #;
    587   Variable
    588       globalcgds # global supply of capital goods for NET investment #;
    589   Variable
    590       pcgdswld # world average price of capital goods (net investment weights) #;
    591    
    592   !<
    593       The following variables could be dropped when converting to levels
    594       equation for income.  They are only needed for the linearized equation.
    595       The idea here is to look at the ratio of taxes to income in order to
    596       preserve homogeneity in prices.  (We could also look at changes in tax
    597       revenue, but then a uniform price increase would change this variable.)
    598       Obviously a simple percentage change variable doesn't work, since many
    599       taxes are initially zero.  The basic logic of this approach is as follows:
    600    
    601       Let R be the ratio of taxes to income: R = T/Y, then:
    602           dR = d(T/Y) = R(t - y)/100
    603       multiply through by Y to get:
    604           YdR = dT - Ty/100
    605       This ratio change is computed for each tax type and for total taxes.  Then
    606       the change in tax revenue itself may be computed as:
    607           dT = YdR + Ty/100
    608       in order to determine regional income.
    609   >!
    610    
    611   Variable (change) (all,r,REG)
    612       del_taxrgc(r) # change in ratio of government consumption tax to INCOME #;
    613   Variable (change) (all,r,REG)
    614       del_taxrpc(r) # change in ratio of private consumption tax to INCOME #;
    615   Variable (change) (all,r,REG)
    616       del_taxriu(r) # change in ratio of tax on intermediate usage to INCOME #;
    617   Variable (change) (all,r,REG)
    618       del_taxrfu(r) # change in ratio of tax on primary factor usage to INCOME #;
    619   Variable (change) (all,r,REG)
    620       del_taxrout(r) # change in ratio of output tax to INCOME #;
    621   Variable (change) (all,r,REG)
    622       del_taxrexp(r) # change in ratio of export tax to INCOME #;
    623   Variable (change) (all,r,REG)
    624       del_taxrimp(r) # change in ratio of import tax to INCOME #;
    625   Variable (change) (all,r,REG)
    626       del_taxrinc(r) # change in ratio of income tax to INCOME #;
    627    
    628    
    629   !<
    630       -------------------
    631       Common COEFFICIENTS
    632       -------------------
    633    
    634       Key Derivatives of the Base Data
    635       Regional Expenditure and Income
    636       Indirect Tax Receipts
    637       Miscellaneous Coefficients
    638    
    639       Common Coefficients are defined as coefficients which are used in more
    640       than one module.  For example, ESUBD(i) is used in the Goverment
    641       Household, Private Household, and Firms modules.
    642   >!
    643    
    644    
    645   !<
    646       Key Derivatives of the Base Data
    647       --------------------------------
    648   >!
    649    
    650   Coefficient (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
    651       VFA(i,j,r) # producer expenditure on i by j in r valued at agent's prices #;
    652   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    653       VFA(i,j,r) = EVFA(i,j,r);
    654   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    655       VFA(i,j,s) = VDFA(i,j,s) + VIFA(i,j,s);
    656    
    657   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    658       VOA(i,r) # value of commodity i output in region r at agent's prices #;
    659   Formula (all,i,ENDW_COMM)(all,r,REG)
    660       VOA(i,r) = EVOA(i,r);
    661   Formula (all,i,PROD_COMM)(all,r,REG)
    662       VOA(i,r) = sum(j,DEMD_COMM, VFA(j,i,r));
    663    
    664   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    665       VDM(i,r) # domestic sales of i in r at mkt prices (tradeables only) #;
    666   Formula (all,i,TRAD_COMM)(all,r,REG)
    667       VDM(i,r) = VDPM(i,r) + VDGM(i,r) + sum(j,PROD_COMM, VDFM(i,j,r));
    668    
    669   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    670       VOM(i,r) # value of commodity i output in region r at market prices #;
    671   Formula (all,i,ENDW_COMM)(all,r,REG)
    672       VOM(i,r) = sum(j,PROD_COMM, VFM(i,j,r));
    673   Formula (all,m,MARG_COMM)(all,r,REG)
    674       VOM(m,r) = VDM(m,r) + sum(s,REG, VXMD(m,r,s)) + VST(m,r);
    675   Formula (all,i,NMRG_COMM)(all,r,REG)
    676       VOM(i,r) = VDM(i,r) + sum(s,REG, VXMD(i,r,s));
    677   Formula (all,h,CGDS_COMM)(all,r,REG)
    678       VOM(h,r) = VOA(h,r);
    679    
    680    
    681   !<
    682       Regional Expenditure and Income
    683       -------------------------------
    684    
    685       Regional income is allocated between private consumption expenditure,
    686       government consumption expenditure, and saving.
    687    
    688    
    689       Expenditure of Regional Household
    690       .................................
    691    
    692                  Regional household(h.h.)
    693                   Expenditure = Income
    694                            _/|\_
    695                          _/  |  \_
    696                        _/    |    \_
    697                      _/      |      \_
    698                    _/        |        \_
    699          Private h.h.        |        Government h.h.
    700          ( PRIVEXP )         |          ( GOVEXP )
    701             _/\_             |              _/\_
    702           _/    \_           |            _/    \_
    703          /        \          |           /        \
    704       Domestic  Imported   Savings    Domestic    Imported
    705        Goods     Goods     ( SAVE )    Goods       Goods
    706       ( VDPA )  ( VIPA )              ( VDGA )    ( VIGA )
    707    
    708       Note: The coefficients at the ends of branches are
    709             Base Data, e.g., VDPA, SAVE.
    710   >!
    711    
    712   ! government consumption expenditure, GOVEXP !
    713   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    714       VGA(i,r) # government consn expenditure on i in r at agent's prices #;
    715   Formula (all,i,TRAD_COMM)(all,s,REG)
    716       VGA(i,s) = VDGA(i,s) + VIGA(i,s);
    717   Coefficient (all,r,REG)
    718       GOVEXP(r) # government expenditure in region r #;
    719   Formula (all,r,REG)
    720       GOVEXP(r) = sum(i,TRAD_COMM, VGA(i,r));
    721    
    722   ! private consumption expenditure, PRIVEXP !
    723   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    724       VPA(i,r) # private hhld expenditure on i in r valued at agent's prices #;
    725   Formula (all,i,TRAD_COMM)(all,s,REG)
    726       VPA(i,s) = VDPA(i,s) + VIPA(i,s);
    727   Coefficient (all,r,REG)
    728       PRIVEXP(r) # private consumption expenditure in region r #;
    729   Formula (all,r,REG)
    730       PRIVEXP(r) = sum(i,TRAD_COMM, VPA(i,r));
    731    
    732   ! aggregate expenditure + saving = aggregate income !
    733   Coefficient (all,r,REG)
    734       INCOME(r) # level of expenditure, which equals NET income in region r #;
    735   Formula (all,r,REG)
    736       INCOME(r) = PRIVEXP(r) + GOVEXP(r) + SAVE(r);
    737    
    738    
    739   !<
    740       Indirect Tax Receipts
    741       ---------------------
    742   >!
    743    
    744   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    745       DGTAX(i,r) # tax on government consumption of domestic good i in region r #;
    746   Formula (all,i,TRAD_COMM)(all,r,REG)
    747       DGTAX(i,r) = VDGA(i,r) - VDGM(i,r);
    748   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    749       IGTAX(i,r) # tax on government consumption of imported good i in region r #;
    750   Formula (all,i,TRAD_COMM)(all,r,REG)
    751       IGTAX(i,r) = VIGA(i,r) - VIGM(i,r);
    752   Coefficient (all,r,REG)
    753       TGC(r) # government consumption tax payments in r #;
    754   Formula (all,r,REG)
    755       TGC(r) = sum(i,TRAD_COMM, DGTAX(i,r) + IGTAX(i,r));
    756    
    757   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    758       DPTAX(i,r) # tax on private consumption of domestic good i in region r #;
    759   Formula (all,i,TRAD_COMM)(all,r,REG)
    760       DPTAX(i,r) = VDPA(i,r) - VDPM(i,r);
    761   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    762       IPTAX(i,r) # tax on private consumption of imported good i in region r #;
    763   Formula (all,i,TRAD_COMM)(all,r,REG)
    764       IPTAX(i,r) = VIPA(i,r) - VIPM(i,r);
    765   Coefficient (all,r,REG)
    766       TPC(r) # private consumption tax payments in r #;
    767   Formula (all,r,REG)
    768       TPC(r) = sum(i,TRAD_COMM, DPTAX(i,r) + IPTAX(i,r));
    769    
    770   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    771       DFTAX(i,j,r) # tax on use of domestic intermediate good i by j in r #;
    772   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    773       DFTAX(i,j,r) = VDFA(i,j,r) - VDFM(i,j,r);
    774   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    775       IFTAX(i,j,r) # tax on use of imported intermediate good i by j in r #;
    776   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    777       IFTAX(i,j,r) = VIFA(i,j,r) - VIFM(i,j,r);
    778   Coefficient (all,r,REG)
    779       TIU(r) # firms' tax payments on intermediate goods usage in r #;
    780   Formula (all,r,REG)
    781       TIU(r) = sum(i,TRAD_COMM, sum(j,PROD_COMM, DFTAX(i,j,r) + IFTAX(i,j,r)));
    782    
    783   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    784       ETAX(i,j,r) # tax on use of endowment good i by industry j in region r #;
    785   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    786       ETAX(i,j,r) = VFA(i,j,r) - VFM(i,j,r);
    787   Coefficient (all,r,REG)
    788       TFU(r) # firms' tax payments on primary factor usage in r #;
    789   Formula (all,r,REG)
    790       TFU(r) = sum(i,ENDW_COMM, sum(j,PROD_COMM, ETAX(i,j,r)));
    791    
    792   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    793       PTAX(i,r) # output tax on good i in region r #;
    794   Formula (all,i,NSAV_COMM)(all,r,REG)
    795       PTAX(i,r) = VOM(i,r) - VOA(i,r);
    796   Coefficient (all,r,REG)
    797       TOUT(r) # production tax payments in r #;
    798   Formula (all,r,REG)
    799       TOUT(r) = sum(i,PROD_COMM, PTAX(i,r));
    800    
    801   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    802       XTAXD(i,r,s) # tax on exports of good i from source r to destination s #;
    803   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    804       XTAXD(i,r,s) = VXWD(i,r,s) - VXMD(i,r,s);
    805   Coefficient (all,r,REG)
    806       TEX(r) # export tax payments in r #;
    807   Formula (all,r,REG)
    808       TEX(r) = sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s)));
    809    
    810   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    811       MTAX(i,r,s) # tax on imports of good i from source r in destination s #;
    812   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    813       MTAX(i,r,s) = VIMS(i,r,s) - VIWS(i,r,s);
    814   Coefficient (all,r,REG)
    815       TIM(r) # import tax payments in r #;
    816   Formula (all,r,REG)
    817       TIM(r) = sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r)));
    818    
    819    
    820   !<
    821       Miscellaneous Coefficients
    822       --------------------------
    823   >!
    824    
    825   ! domestic/imported substitution elasticity !
    826   Coefficient (parameter)(all,i,TRAD_COMM)
    827       ESUBD(i)
    828       # region-generic el. of sub. domestic/imported for all agents #;
    829   Read
    830       ESUBD from file GTAPPARM header "ESBD";
    831    
    832   ! net global investment expenditure !
    833   Coefficient (all,r,REG)
    834       REGINV(r) # regional GROSS investment in r (value of "cgds" output) #;
    835   Formula (all,r,REG)
    836       REGINV(r) = sum(k,CGDS_COMM, VOA(k,r));
    837   Coefficient (all,r,REG)
    838       NETINV(r) # regional NET investment in region r #;
    839   Formula (all,r,REG)
    840       NETINV(r) = sum(k,CGDS_COMM, VOA(k,r)) - VDEP(r);
    841   Coefficient
    842       GLOBINV # global expenditures on net investment #;
    843   Formula
    844       GLOBINV = sum(r,REG, NETINV(r));
    845    
    846   ! elasticity of cost wrt utility from private consumption !
    847   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    848       CONSHR(i,r) # share of private hhld consumption devoted to good i in r #;
    849   Formula (all,i,TRAD_COMM)(all,r,REG)
    850       CONSHR(i,r) = VPA(i,r) / sum(k,TRAD_COMM, VPA(k,r));
    851   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
    852       INCPAR(i,r)
    853       # expansion parameter in the CDE minimum expenditure function #;
    854   Read
    855       INCPAR from file GTAPPARM header "INCP";
    856   Coefficient (all,r,REG)
    857       UELASPRIV(r)
    858       # elasticity of cost wrt utility from private consumption #;
    859   Formula (all,r,REG)
    860       UELASPRIV(r) = sum(i,TRAD_COMM, CONSHR(i,r) * INCPAR(i,r));
    861    
    862    
    863   !<
    864       =======
    865       Modules
    866       =======
    867    
    868       1. Government Consumption
    869       2. Private Consumption
    870       3. Firms
    871       4. Investment, Global Bank, and Savings
    872       5. International Trade
    873       6. International Transport Services
    874       7. Regional Household
    875       8. Equilibrium Conditions
    876   >!
    877    
    878    
    879   !<
    880       -------------------------
    881       1. Government Consumption
    882       -------------------------
    883    
    884       1-0. Module-Specific Variables
    885       1-1. Demands for Composite Goods
    886       1-2. Composite Tradeables
    887   >!
    888    
    889    
    890   !<
    891       1-0. Module-Specific Variables
    892       ------------------------------
    893    
    894       only used in this Government Consumption module
    895   >!
    896    
    897   Variable (all,i,TRAD_COMM)(all,r,REG)
    898       pg(i,r) # government consumption price for commodity i in region r #;
    899   Variable (all,i,TRAD_COMM)(all,r,REG)
    900       qg(i,r) # government hhld demand for commodity i in region r #;
    901    
    902    
    903   !<
    904       1-1. Demands for Composite Goods
    905       --------------------------------
    906   >!
    907    
    908   Equation GPRICEINDEX
    909   # definition of price index for aggregate gov't purchases (HT 40) #
    910   (all,r,REG)
    911       pgov(r) = sum(i,TRAD_COMM, [VGA(i,r) / GOVEXP(r)] * pg(i,r));
    912    
    913   Equation GOVDMNDS
    914   # government consumption demands for composite commodities (HT 41) #
    915   (all,i,TRAD_COMM)(all,r,REG)
    916       qg(i,r) - pop(r) = ug(r) - [pg(i,r) - pgov(r)];
    917    
    918   Equation GOVU
    919   # utility from government consumption in r #
    920   (all,r,REG)
    921       yg(r) - pop(r) = pgov(r) + ug(r);
    922    
    923    
    924   !<
    925       1-2. Composite Tradeables
    926       -------------------------
    927   >!
    928    
    929   Variable (all,i,TRAD_COMM)(all,r,REG)
    930       tgd(i,r) # tax on domestic i purchased by government hhld in r #;
    931    
    932   Variable (all,i,TRAD_COMM)(all,r,REG)
    933       tgm(i,r) # tax on imported i purchased by gov't hhld in r #;
    934    
    935   Equation GHHDPRICE
    936   # eq'n links domestic market and government consumption prices (HT 19) #
    937   (all,i,TRAD_COMM)(all,r,REG)
    938       pgd(i,r) = tgd(i,r) + pm(i,r);
    939    
    940   Equation GHHIPRICES
    941   # eq'n links domestic market and government consumption prices (HT 22) #
    942   (all,i,TRAD_COMM)(all,r,REG)
    943       pgm(i,r) = tgm(i,r) + pim(i,r);
    944    
    945   Coefficient (all,i,TRAD_COMM)(all,s,REG)
    946       GMSHR(i,s) # share of imports for gov't hhld at agent's prices #;
    947   Formula (all,i,TRAD_COMM)(all,s,REG)
    948       GMSHR(i,s) = VIGA(i,s) / VGA(i,s);
    949    
    950   Equation GCOMPRICE
    951   # government consumption price for composite commodities (HT 42) #
    952   (all,i,TRAD_COMM)(all,s,REG)
    953       pg(i,s) =  GMSHR(i,s) * pgm(i,s) + [1 - GMSHR(i,s)] * pgd(i,s);
    954    
    955   Equation GHHLDAGRIMP
    956   # government consumption demand for aggregate imports (HT 43) #
    957   (all,i,TRAD_COMM)(all,s,REG)
    958       qgm(i,s) = qg(i,s) + ESUBD(i) * [pg(i,s) - pgm(i,s)];
    959    
    960   Equation GHHLDDOM
    961   # government consumption demand for domestic goods (HT 44) #
    962   (all,i,TRAD_COMM)(all,s,REG)
    963       qgd(i,s) = qg(i,s) + ESUBD(i) * [pg(i,s) - pgd(i,s)];
    964    
    965   Equation TGCRATIO
    966   # change in ratio of government consumption tax payments to regional income #
    967   (all,r,REG)
    968       100.0 * INCOME(r) * del_taxrgc(r) + TGC(r) * y(r)
    969           = sum(i,TRAD_COMM,
    970               VDGA(i,r) * tgd(i,r) + DGTAX(i,r) * [pm(i,r) + qgd(i,r)])
    971           + sum(i,TRAD_COMM,
    972               VIGA(i,r) * tgm(i,r) + IGTAX(i,r) * [pim(i,r) + qgm(i,r)]);
    973    
    974    
    975   !<
    976       -----------------------------
    977       2. Private Consumption Module
    978       -----------------------------
    979    
    980       2-0. Module-Specific Variables
    981       2-1. Utility from Private Consumption
    982       2-2. Allen Partials, Price and Income Elasticities, Composite Demand
    983       2-3. Composite Tradeables
    984   >!
    985    
    986    
    987   !<
    988       2-0. Module-Specific Variables
    989       ------------------------------
    990    
    991       only used in this Private Consumption module
    992   >!
    993    
    994   Variable (all,i,TRAD_COMM)(all,r,REG)
    995       pp(i,r) # private consumption price for commodity i in region r #;
    996   Variable (all,i,TRAD_COMM)(all,r,REG)
    997       qp(i,r) # private hhld demand for commodity i in region r #;
    998    
    999    
   1000   !<
   1001       2-1. Utility from Private Consumption
   1002       -------------------------------------
   1003   >!
   1004    
   1005   Equation PHHLDINDEX
   1006   # price index for private consumption expenditure #
   1007   (all,r,REG)
   1008       ppriv(r) = sum(i,TRAD_COMM, CONSHR(i,r) * pp(i,r));
   1009    
   1010   Equation PRIVATEU
   1011   # computation of utility from private consumption in r (HT 45) #
   1012   (all,r,REG)
   1013       yp(r) - pop(r) = ppriv(r) + UELASPRIV(r) * up(r);
   1014   !<
   1015       This equation determines private consumption utility for a representative
   1016       household in region r, based on the per capita private expenditure
   1017       function.  (HT 45)
   1018   >!
   1019    
   1020   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1021       XWCONSHR(i,r)
   1022       # expansion-parameter-weighted consumption share #;
   1023   Formula (all,i,TRAD_COMM)(all,r,REG)
   1024       XWCONSHR(i,r) = CONSHR(i,r) * INCPAR(i,r) / UELASPRIV(r);
   1025    
   1026   Equation UTILELASPRIV
   1027   # elasticity of expenditure wrt utility from private consumption #
   1028   (all,r,REG)
   1029       uepriv(r)
   1030           = sum(i,TRAD_COMM, XWCONSHR(i,r) * [pp(i,r) + qp(i,r) - yp(r)]);
   1031    
   1032    
   1033   !<
   1034       2-2. Allen Partials, Price and Income Elasticities, Composite Demand
   1035       --------------------------------------------------------------------
   1036   >!
   1037    
   1038   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
   1039       SUBPAR(i,r)
   1040       # substitution parameter in CDE minimum expenditure function #;
   1041   Read
   1042       SUBPAR from file GTAPPARM header "SUBP";
   1043    
   1044   !<
   1045       (HT F1 - F3)
   1046   >!
   1047   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1048       ALPHA(i,r) # 1 - sub. parameter in the CDE minimum expenditure function #;
   1049   Formula (all,i,TRAD_COMM)(all,r,REG)
   1050       ALPHA(i,r) = 1 - SUBPAR(i,r);
   1051    
   1052   Coefficient (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1053       APE(i,k,r) # Allen partial elst. of sub. between composite i and k in r #;
   1054   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1055       APE(i,k,r)
   1056           = ALPHA(i,r) + ALPHA(k,r) - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r));
   1057   Formula (all,i,TRAD_COMM)(all,r,REG)
   1058       APE(i,i,r)
   1059           = 2.0 * ALPHA(i,r)
   1060           - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r))
   1061           - ALPHA(i,r) / CONSHR(i,r);
   1062    
   1063   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1064       EY(i,r) # income elast. of private hhld demand for i in r (HT F4) #;
   1065   Formula (all,i,TRAD_COMM)(all,r,REG)
   1066       EY(i,r)
   1067           =   [1.0 / sum(n,TRAD_COMM, CONSHR(n,r) * INCPAR(n,r))]
   1068               * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
   1069                   + sum(n,TRAD_COMM, CONSHR(n,r) * INCPAR(n,r) * ALPHA(n,r))]
   1070           + [ALPHA(i,r) - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r))];
   1071    
   1072   Coefficient (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1073       EP(i,k,r)
   1074       # uncomp. elast. of private hhld demand for i wrt price of k in r (HT F5) #;
   1075   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1076       EP(i,k,r) = 0;
   1077   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1078       EP(i,k,r) = [APE(i,k,r) - EY(i,r)] * CONSHR(k,r);
   1079    
   1080   Equation PRIVDMNDS
   1081   # private consumption demands for composite commodities (HT 46) #
   1082   (all,i,TRAD_COMM)(all,r,REG)
   1083       qp(i,r) - pop(r)
   1084           = sum(k,TRAD_COMM, EP(i,k,r) * pp(k,r)) + EY(i,r) * [yp(r) - pop(r)];
   1085   !<
   1086       Private consumption demands for composite commodities.  Demand system is
   1087       on a per capita basis.  Here, yp(r) - pop(r) is % change in per capita
   1088       income.  (HT 46)
   1089   >!
   1090    
   1091    
   1092   !<
   1093       2-3. Composite Tradeables
   1094       -------------------------
   1095   >!
   1096    
   1097   Variable (all,r,REG)
   1098       tp(r) # comm.-, source-gen. shift in tax on private cons. #;
   1099   !<
   1100       The variable tp(r) can be swapped with del_ttaxr(r) in order to generate a
   1101       tax replacement scenario, whereby taxes remain a constant share of
   1102       national income.
   1103   >!
   1104    
   1105   Coefficient (all,i,TRAD_COMM)(all,r,REG) LevTPD(i,r) # levels TPD #;
   1106   Zerodivide default 1;
   1107   Formula (all,i,TRAD_COMM)(all,r,REG) LevTPD(i,r)  =  VDPA(i,r)/VDPM(i,r);
   1108   Zerodivide off;
   1109   Variable  (orig_level=LevTPD)(all,i,TRAD_COMM)(all,r,REG)
   1110       tpd(i,r) # comm.-, source-spec. shift in tax on private cons. of dom. #;
   1111   Variable (all,i,TRAD_COMM)(all,r,REG)
   1112       atpd(i,r) # power of tax on domestic i purchased by private hhld in r #;
   1113   Equation TPDSHIFT
   1114   # permits uniform consumption tax change #
   1115   (all,i,TRAD_COMM)(all,r,REG)
   1116       atpd(i,r) = tpd(i,r) + tp(r);
   1117    
   1118   Equation PHHDPRICE
   1119   # eq'n links domestic market and private consumption prices (HT 18) #
   1120   (all,i,TRAD_COMM)(all,r,REG)
   1121       ppd(i,r) = atpd(i,r) + pm(i,r);
   1122    
   1123   Variable (all,i,TRAD_COMM)(all,r,REG)
   1124       tpm(i,r) # comm.-, source-spec. shift in tax on private cons. of imp. #;
   1125   Variable (all,i,TRAD_COMM)(all,r,REG)
   1126       atpm(i,r) # power of tax on imported i purchased by private hhld in r #;
   1127   Equation TPMSHIFT
   1128   # permits uniform consumption tax change #
   1129   (all,i,TRAD_COMM)(all,r,REG)
   1130       atpm(i,r) = tpm(i,r) + tp(r);
   1131    
   1132   Equation PHHIPRICES
   1133   # eq'n links domestic market and private consumption prices (HT 21) #
   1134   (all,i,TRAD_COMM)(all,r,REG)
   1135       ppm(i,r) = atpm(i,r) + pim(i,r);
   1136    
   1137   Equation TPCRATIO
   1138   # change in ratio of private consumption tax payments to regional income #
   1139   (all,r,REG)
   1140       100.0 * INCOME(r) * del_taxrpc(r) + TPC(r) * y(r)
   1141           = sum(i,TRAD_COMM,
   1142               VDPA(i,r) * atpd(i,r) + DPTAX(i,r) * [pm(i,r) + qpd(i,r)])
   1143           + sum(i,TRAD_COMM,
   1144               VIPA(i,r) * atpm(i,r) + IPTAX(i,r) * [pim(i,r) + qpm(i,r)]);
   1145    
   1146   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   1147       PMSHR(i,s) # share of imports for priv hhld at agent's prices #;
   1148   Formula (all,i,TRAD_COMM)(all,s,REG)
   1149       PMSHR(i,s) = VIPA(i,s) / VPA(i,s);
   1150    
   1151   Equation PCOMPRICE
   1152   # private consumption price for composite commodities (HT 47) #
   1153   (all,i,TRAD_COMM)(all,s,REG)
   1154       pp(i,s) = PMSHR(i,s) * ppm(i,s) + [1 - PMSHR(i,s)] * ppd(i,s);
   1155    
   1156   Equation PHHLDDOM
   1157   # private consumption demand for domestic goods (HT 48) #
   1158   (all,i,TRAD_COMM)(all,s,REG)
   1159       qpd(i,s) = qp(i,s) + ESUBD(i) * [pp(i,s) - ppd(i,s)];
   1160    
   1161   Equation PHHLDAGRIMP
   1162   # private consumption demand for aggregate imports (HT 49) #
   1163   (all,i,TRAD_COMM)(all,s,REG)
   1164       qpm(i,s) = qp(i,s) + ESUBD(i) * [pp(i,s) - ppm(i,s)];
   1165    
   1166    
   1167   !<
   1168       ---------
   1169       3. Firms
   1170       ---------
   1171    
   1172       We now turn to the behavioral equations for firms.  The following picture
   1173       describes factor demands.  The first set of equations describe demands for
   1174       primary factors.  (See table 4 of Hertel and Tsigas.)
   1175    
   1176       Production structure
   1177       --------------------
   1178    
   1179                                qo(j,r)  [ao(j,r)]
   1180                                /\
   1181                               /  \  <----- CES
   1182                              /    \
   1183                             /      \
   1184                            /        \
   1185         [ava(j,r)]  qva(j,r)        qf(i,j,r)  [af(i,j,r)]
   1186                     /|\                    /\
   1187    CES ----->      / | \                  /  \  <------ CES
   1188                   /  |  \                /    \
   1189                  /   |   \              /      \
   1190                 /    |    \            /        \
   1191             Land   Labor  Capital  Domestic     Foreign
   1192                  qfe(i,j,r)         qfd(i,j,r)  qfm(i,j,r)
   1193                [afe(i,j,r)]
   1194    
   1195    
   1196    
   1197       3-0. Module-Specific Variables
   1198       3-1. Total Output Nest
   1199       3-2. Composite Intermediates Nest
   1200       3-3. Value-Added Nest
   1201       3-4. Zero Profits Equations
   1202   >!
   1203    
   1204    
   1205   !<
   1206       3-0. Module-Specific Variables
   1207       ------------------------------
   1208    
   1209       only used in this Firms module or the Summary Indices or Welfare
   1210       appendices
   1211   >!
   1212    
   1213   Variable (all,j,PROD_COMM)(all,r,REG)
   1214       pva(j,r) # firms' price of value added in industry j of region r #;
   1215   Variable (all,j,PROD_COMM)(all,r,REG)
   1216       qva(j,r) # value added in industry j of region r #;
   1217   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1218       pf(i,j,r) # firms' price for commodity i for use by j in r #;
   1219   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1220       qf(i,j,r) # demand for commodity i for use by j in region r #;
   1221   Variable (all,j,PROD_COMM)(all,r,REG)
   1222       ao(j,r) # output augmenting technical change in sector j of r #;
   1223   Variable (all,i,PROD_COMM)(all,r,REG)
   1224       ava(i,r) # value added augmenting tech change in sector i of r #;
   1225   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1226       af(i,j,r) # composite intermed. input i augmenting tech change by j of r #;
   1227   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1228       afe(i,j,r) # primary factor i augmenting tech change by j of r #;
   1229   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1230       ams(i,r,s) # import i from region r augmenting tech change in region s #;
   1231    
   1232    
   1233   !<
   1234       3-1. Total Output Nest
   1235       ----------------------
   1236   >!
   1237    
   1238   Variable (all,j,PROD_COMM)
   1239       aosec(j) # output tech change of sector j, worldwide #;
   1240   Variable (all,r,REG)
   1241       aoreg(r) # output tech change in region r #;
   1242   Variable (all,j,PROD_COMM)(all,r,REG)
   1243       aoall(j,r) # output augmenting technical change in sector j of r #;
   1244   Equation AOWORLD
   1245   # sector/region specific average rate of output augmenting tech change #
   1246   (all,j,PROD_COMM)(all,r,REG)
   1247       ao(j,r) = aosec(j) + aoreg(r) + aoall(j,r);
   1248    
   1249   Variable (all,j,PROD_COMM)
   1250       avasec(j) # value added tech change of sector j, worldwide #;
   1251   Variable (all,r,REG)
   1252       avareg(r) # value added tech change in region r #;
   1253   Variable (all,j,PROD_COMM)(all,r,REG)
   1254       avaall(j,r) # value added augmenting technical change in sector j of r #;
   1255   Equation AVAWORLD
   1256   # sector/region specific average rate of value added augmenting tech change #
   1257   (all,j,PROD_COMM)(all,r,REG)
   1258       ava(j,r) = avasec(j) + avareg(r) + avaall(j,r);
   1259    
   1260   Coefficient (parameter)(all,j,PROD_COMM)
   1261       ESUBT(j)
   1262       # elst. of sub. among composite intermediate inputs in production #;
   1263   Read
   1264       ESUBT from file GTAPPARM header "ESBT";
   1265    
   1266   Equation VADEMAND
   1267   # sector demands for primary factor composite #
   1268   (all,j,PROD_COMM)(all,r,REG)
   1269       qva(j,r)
   1270           = -ava(j,r) + qo(j,r) - ao(j,r)
   1271           - ESUBT(j) * [pva(j,r) - ava(j,r) - ps(j,r) - ao(j,r)];
   1272   !<
   1273       Sector demands for primary factor composite.  This equation differs from
   1274       HT 35 due to the presence of intermediate input substitution.
   1275   >!
   1276    
   1277   Variable (all,i,TRAD_COMM)
   1278       afcom(i) # intermediate tech change of input i, worldwide #;
   1279   Variable (all,j,PROD_COMM)
   1280       afsec(j) # intermediate tech change of sector j, worldwide #;
   1281   Variable (all,r,REG)
   1282       afreg(r) # intermediate tech change in region r #;
   1283   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1284       afall(i,j,r) # intermediate input i augmenting tech change by j in r #;
   1285   Equation AFWORLD
   1286   # sector/region specific average rate of intermediates augmenting tech change #
   1287   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1288       af(i,j,r) = afcom(i) + afsec(j) + afreg(r) + afall(i,j,r);
   1289    
   1290   Equation INTDEMAND
   1291   # industry demands for intermediate inputs, including cgds #
   1292   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1293       qf(i,j,r)
   1294           = - af(i,j,r) + qo(j,r) - ao(j,r)
   1295           - ESUBT(j) * [pf(i,j,r) - af(i,j,r) - ps(j,r) - ao(j,r)];
   1296   !<
   1297       Industry demands for intermediate inputs, including cgds.  This equation
   1298       differs from HT 36 due to the presence of intermediate input substitution.
   1299   >!
   1300    
   1301    
   1302   !<
   1303       3-2. Composite Intermediates Nest
   1304       ---------------------------------
   1305   >!
   1306    
   1307   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1308       tfd(i,j,r) # tax on domestic i purchased by j in r #;
   1309   Equation DMNDDPRICE
   1310   # eq'n links domestic market and firm prices (HT 20) #
   1311   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1312       pfd(i,j,r) = tfd(i,j,r) + pm(i,r);
   1313   !<
   1314       This equation links domestic market and firm prices.  It holds only for
   1315       domestic goods and it captures the effect of commodity taxation of firms.
   1316       (HT 20)
   1317   >!
   1318    
   1319   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1320       tfm(i,j,r) # tax on imported i purchased by j in r #;
   1321   Equation DMNDIPRICES
   1322   # eq'n links domestic market and firm prices (HT 23) #
   1323   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1324       pfm(i,j,r) = tfm(i,j,r) + pim(i,r);
   1325   !<
   1326       This equation links domestic market and firm prices.  It holds only for
   1327       imported goods and it captures the effect of commodity taxation of firms.
   1328       (HT 23)
   1329   >!
   1330    
   1331   Equation TIURATIO
   1332   # change in ratio of tax payments on intermediate goods to regional income #
   1333   (all,r,REG)
   1334       100.0 * INCOME(r) * del_taxriu(r) + TIU(r) * y(r)
   1335           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   1336               VDFA(i,j,r) * tfd(i,j,r) + DFTAX(i,j,r) * [pm(i,r) + qfd(i,j,r)]))
   1337           + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   1338               VIFA(i,j,r) * tfm(i,j,r) + IFTAX(i,j,r) * [pim(i,r) + qfm(i,j,r)]));
   1339    
   1340   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1341       FMSHR(i,j,s) # share of firms' imports in dom. composite, agent's prices #;
   1342   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1343       FMSHR(i,j,s) = VIFA(i,j,s) / VFA(i,j,s);
   1344   Equation ICOMPRICE
   1345   # industry price for composite commodities (HT 30) #
   1346   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1347       pf(i,j,r) = FMSHR(i,j,r) * pfm(i,j,r) + [1 - FMSHR(i,j,r)] * pfd(i,j,r);
   1348    
   1349   Equation INDIMP
   1350   # industry j demands for composite import i (HT 31) #
   1351   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1352       qfm(i,j,s) = qf(i,j,s) - ESUBD(i) * [pfm(i,j,s) - pf(i,j,s)];
   1353    
   1354   Equation INDDOM
   1355   # industry j demands for domestic good i (HT 32) #
   1356   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1357       qfd(i,j,s) = qf(i,j,s) - ESUBD(i) * [pfd(i,j,s) - pf(i,j,s)];
   1358    
   1359    
   1360   !<
   1361       3-3. Value-Added Nest
   1362       ---------------------
   1363   >!
   1364    
   1365   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1366       tf(i,j,r) # tax on primary factor i used by j in region r #;
   1367    
   1368   Equation MPFACTPRICE
   1369   # eq'n links domestic and firm demand prices (HT 16) #
   1370   (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   1371       pfe(i,j,r) = tf(i,j,r) + pm(i,r);
   1372    
   1373   Equation SPFACTPRICE
   1374   # eq'n links domestic and firm demand prices (HT 17) #
   1375   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   1376       pfe(i,j,r) = tf(i,j,r) + pmes(i,j,r);
   1377    
   1378   Variable (all,i,ENDW_COMM)
   1379       afecom(i) # factor input tech change of input i, worldwide #;
   1380   Variable (all,j,PROD_COMM)
   1381       afesec(j) # factor input tech change of sector j, worldwide #;
   1382   Variable (all,r,REG)
   1383       afereg(r) # factor input tech change in region r #;
   1384   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1385       afeall(i,j,r) # primary factor i augmenting tech change sector j in r #;
   1386   Equation AFEWORLD
   1387   # sector/region specific average rate of prim. factor i augmenting tech change #
   1388   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1389       afe(i,j,r) = afecom(i) + afesec(j) + afereg(r) + afeall(i,j,r);
   1390    
   1391   Coefficient (all,j,PROD_COMM)(all,r,REG)
   1392       VVA(j,r) # value added in activity j in region r #;
   1393   Formula (all,j,PROD_COMM)(all,r,REG)
   1394       VVA(j,r) = sum(i,ENDW_COMM, VFA(i,j,r));
   1395   Coefficient (all,i,ENDW_COMM)
   1396       SVADEFAULT(i) #zerodivide default for SVA#;
   1397   Formula (all,i,ENDW_COMM)
   1398       SVADEFAULT(i)
   1399           = sum(j,PROD_COMM, sum(r,REG, VFA(i,j,r)))
   1400           / sum(j,PROD_COMM, sum(r,REG, VVA(j,r)));
   1401   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1402       SVA(i,j,r) # share of i in total value added in j in r #;
   1403   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG: VVA(j,r) <> 0)
   1404       SVA(i,j,r) = VFA(i,j,r) / VVA(j,r);
   1405   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG: VVA(j,r) = 0)
   1406       SVA(i,j,r) = SVADEFAULT(i);
   1407   Equation VAPRICE
   1408   # effective price of primary factor composite in each sector/region (HT 33) #
   1409   (all,j,PROD_COMM)(all,r,REG)
   1410       pva(j,r) = sum(k,ENDW_COMM, SVA(k,j,r) * [pfe(k,j,r) - afe(k,j,r)]);
   1411    
   1412   Equation TFURATIO
   1413   # change in ratio of tax payments on factor usage to regional income #
   1414   (all,r,REG)
   1415       100.0 * INCOME(r) * del_taxrfu(r) + TFU(r) * y(r)
   1416           = sum(i,ENDWM_COMM, sum(j,PROD_COMM,
   1417               VFA(i,j,r) * tf(i,j,r) + ETAX(i,j,r) * [pm(i,r) + qfe(i,j,r)]))
   1418           + sum(i,ENDWS_COMM, sum(j,PROD_COMM,
   1419               VFA(i,j,r) * tf(i,j,r) + ETAX(i,j,r) * [pmes(i,j,r) + qfe(i,j,r)]));
   1420    
   1421   Coefficient (parameter)(all,j,PROD_COMM)
   1422       ESUBVA(j)
   1423       # elst. of sub. capital/labor/land, in production of value added in j #;
   1424   Read
   1425       ESUBVA from file GTAPPARM header "ESBV";
   1426    
   1427   Equation ENDWDEMAND
   1428   # demands for endowment commodities (HT 34) #
   1429   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1430       qfe(i,j,r)
   1431           = - afe(i,j,r) + qva(j,r)
   1432           - ESUBVA(j) * [pfe(i,j,r) - afe(i,j,r) - pva(j,r)];
   1433    
   1434    
   1435   !<
   1436       3-4. Zero Profits Equations
   1437       ---------------------------
   1438   >!
   1439    
   1440   Equation OUTPUTPRICES
   1441   # eq'n links pre- and post-tax supply prices for all industries  (HT 15) #
   1442   (all,i,PROD_COMM)(all,r,REG)
   1443       ps(i,r) = to(i,r) + pm(i,r);
   1444   !<
   1445       This equation links pre- and post-tax supply prices for all industries.
   1446       This captures the effect of output taxes.  TO(i,r) < 1 in the case of a
   1447       tax.  (HT 15)
   1448   >!
   1449    
   1450   Equation TOUTRATIO
   1451   # change in ratio of output tax payments to regional income #
   1452   (all,r,REG)
   1453       100.0 * INCOME(r) * del_taxrout(r) + TOUT(r) * y(r)
   1454           = sum(i,PROD_COMM,
   1455               VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);
   1456    
   1457   Variable (all,j,PROD_COMM)(all,r,REG)
   1458       profitslack(j,r) # slack variable in the zero profit equation #;
   1459   !<
   1460       This is exogenous, unless the user wishes to specify output in a given
   1461       region exogenously.
   1462   >!
   1463   Coefficient (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1464       STC(i,j,r) # share of i in total costs of j in r #;
   1465   Formula (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1466       STC(i,j,r) = VFA(i,j,r) / sum(k,DEMD_COMM, VFA(k,j,r));
   1467    
   1468   Equation ZEROPROFITS
   1469   # industry zero pure profits condition (HT 6) #
   1470   (all,j,PROD_COMM)(all,r,REG)
   1471       ps(j,r) + ao(j,r)
   1472           = sum(i,ENDW_COMM, STC(i,j,r) * [pfe(i,j,r) - afe(i,j,r) - ava(j,r)])
   1473           + sum(i,TRAD_COMM, STC(i,j,r) * [pf(i,j,r)  - af(i,j,r)])
   1474           + profitslack(j,r);
   1475   !<
   1476       Industry zero pure profits condition (HT 6).  This condition permits us to
   1477       determine the endogenous output level for each of the non-endowment
   1478       sectors, excepting when profitslack is itself endogenous.  The level of
   1479       activity in the endowment sectors is exogenously determined.
   1480   >!
   1481    
   1482    
   1483   !<
   1484       ---------------------------------------
   1485       4. Investment, Global Bank, and Savings
   1486       ---------------------------------------
   1487    
   1488       Capital stock and rate of return equations follow.  They correspond to the
   1489       Investment Equations of Table 8 in Hertel and Tsigas.
   1490    
   1491       4-0. Module-Specific Variables
   1492       4-1. Equations of Notational Convenience
   1493       4-2. Rate of Return Equations
   1494       4-3. Capital Accumulation
   1495       4-4. Global Bank
   1496       4-5. Price Index of Aggregate Global Composite Capital Goods
   1497       4-6. Price of Saving
   1498   >!
   1499    
   1500    
   1501   !<
   1502       4-0. Module-Specific Variables
   1503       ------------------------------
   1504    
   1505       only used in this Investment, Global Bank and Savings module
   1506   >!
   1507    
   1508   Variable (all,r,REG)
   1509       rental(r) # rental rate on capital = ps("capital",r) #;
   1510   Variable (all,r,REG)
   1511       ke(r) # end-of-period capital stock in r #;
   1512   Variable (all,r,REG)
   1513       rore(r) # expected net rate of return on capital stock in r #;
   1514   Variable (all,r,REG)
   1515       rorc(r) # current net rate of return on capital stock in r #;
   1516   Variable (all,r,REG)
   1517       qcgds(r) # output of capital goods sector = qo("cgds",r) #;
   1518    
   1519    
   1520   !<
   1521       4-1. Equations of Notational Convenience
   1522       ----------------------------------------
   1523   >!
   1524    
   1525   Variable (all,r,REG)
   1526       ksvces(r) # capital services = qo("capital",r) #;
   1527   Equation KAPSVCES
   1528   # eq'n defines a variable for capital services (HT 52) #
   1529   (all,r,REG)
   1530       ksvces(r)
   1531           = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * qo(h,r));
   1532   !<
   1533       This equation defines a variable for capital services, for convenience.
   1534       (There is really only one capital services item.) (HT 52)
   1535   >!
   1536    
   1537   Equation KAPRENTAL
   1538   # eq'n defines a variable for capital rental rate (HT 53) #
   1539   (all,r,REG)
   1540       rental(r)
   1541           = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * ps(h,r));
   1542    
   1543   Equation CAPGOODS
   1544   # eq'n defines a variable for gross investment (HT 54) #
   1545   (all,r,REG)
   1546       qcgds(r)
   1547           = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * qo(h,r));
   1548   !<
   1549       This equation defines a variable for gross investment, for convenience.
   1550       There is really only one capital goods item.
   1551   >!
   1552    
   1553   Equation PRCGOODS
   1554   # eq'n defines the price of cgds (HT 55) #
   1555   (all,r,REG)
   1556       pcgds(r) = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * ps(h,r));
   1557    
   1558   Equation KBEGINNING
   1559   # associates change in cap. services w/ change in cap. stock (HT 56) #
   1560   (all,r,REG)
   1561       kb(r) = ksvces(r);
   1562   !<
   1563       This equation associates any change in capital services during the period
   1564       with a change in capital stock.  Full capacity utilization is assumed.
   1565   >!
   1566    
   1567   Coefficient (ge 0)(all,r,REG)
   1568       VKB(r) # value of beginning-of-period capital stock in region r #;
   1569   Update (all,r,REG)
   1570       VKB(r) = pcgds(r) * kb(r);
   1571   Read
   1572       VKB from file GTAPDATA header "VKB";
   1573   !<
   1574       VKB(r) is used only in this sub-module, so its data are read here.  The
   1575       associated variables, pcgds(r) and kb(r), are used across modules, so they
   1576       have been defined as common variables.
   1577   >!
   1578    
   1579   Coefficient (all,r,REG)
   1580       INVKERATIO(r)
   1581       # ratio of gross investment to end-of-period capital stock in r #;
   1582   Formula (all,r,REG)
   1583       INVKERATIO(r) = REGINV(r) / [VKB(r) + NETINV(r)];
   1584    
   1585   Equation KEND
   1586   # Ending capital stock equals beginning stock plus net investment.  (HT 10) #
   1587   (all,r,REG)
   1588       ke(r) = INVKERATIO(r) * qcgds(r) + [1.0 - INVKERATIO(r)] * kb(r);
   1589    
   1590    
   1591   !<
   1592       4-2. Rate of Return Equations
   1593       -----------------------------
   1594   >!
   1595    
   1596   Coefficient (all,r,REG)
   1597       GRNETRATIO(r) # ratio of GROSS/NET rates of return on capital in r #;
   1598   Formula (all,r,REG)
   1599       GRNETRATIO(r)
   1600           = sum(h,ENDWC_COMM, VOA(h,r))
   1601           / [sum(h,ENDWC_COMM, VOA(h,r)) - VDEP(r)];
   1602   !<
   1603       NOTE: VOA("capital",r) is GROSS returns to capital.
   1604   >!
   1605   Equation RORCURRENT
   1606   # current rate of return on capital in region r (HT 57) #
   1607   (all,r,REG)
   1608       rorc(r) = GRNETRATIO(r) * [rental(r) - pcgds(r)];
   1609    
   1610   Coefficient (parameter)(all,r,REG)
   1611       RORFLEX(r)
   1612       # flexibility of expected net ROR on capital stock in r wrt investment #;
   1613   Read
   1614       RORFLEX from file GTAPPARM header "RFLX";
   1615   !<
   1616       RORFLEX is the flexibility of the expected net rate of return on the
   1617       capital stock, in region r, with respect to investment.  If a region's
   1618       capital stock increases by 1%, then it is expected that the net rate of
   1619       return on capital will decline by RORFLEX %.  A larger absolute value for
   1620       this parameter will reduce the tendency of international investment flows
   1621       to respond to changes in expected rates of return.
   1622   >!
   1623    
   1624   Equation ROREXPECTED
   1625   # expected rate of return depends on the current return and investment (HT 58) #
   1626   (all,r,REG)
   1627       rore(r) = rorc(r) - RORFLEX(r) * [ke(r) - kb(r)];
   1628    
   1629    
   1630   !<
   1631       4-3. Capital Accumulation
   1632       -------------------------
   1633    
   1634       based on the theory laid out in GTAP Technical Paper #7
   1635   >!
   1636    
   1637   Variable (all,i,ENDWC_COMM)(all,r,REG)
   1638       EXPAND(i,r) # change in investment levels relative to endowment stock #;
   1639   Equation BALDWIN
   1640   # change in investment levels relative to endowment stock #
   1641   (all,i,ENDWC_COMM)(all,r,REG)
   1642       EXPAND(i,r) = qcgds(r) - qo(i,r);
   1643    
   1644    
   1645   !<
   1646       4-4. Global Bank
   1647       ----------------
   1648   >!
   1649    
   1650   Coefficient (integer,parameter)
   1651       RORDELTA
   1652       # binary coefficient to switch mechanism of allocating investment funds #;
   1653   Read
   1654       RORDELTA from file GTAPPARM header "RDLT";
   1655   !<
   1656       RORDELTA is a binary coefficient which determines the mechanism of
   1657       allocating investment funds across regions.  When RORDELTA = 1, investment
   1658       funds are allocated across regions to equate the change in the expected
   1659       rates of return (i.e., rore(r)).  When RORDELTA = 0, investment funds are
   1660       allocated across regions to maintain the existing composition of capital
   1661       stocks.
   1662   >!
   1663    
   1664   Variable
   1665       rorg # global net rate of return on capital stock #;
   1666   Variable (all,r,REG)
   1667       cgdslack(r) # slack variable for qcgds(r) #;
   1668   !<
   1669       This is exogenous, unless the user wishes to exogenously fix the level of
   1670       gross investment in a region, in which case it can be swapped with
   1671       cgdslack.
   1672   >!
   1673   Equation RORGLOBAL
   1674   # either gross investment or expected rate of return in region r (HT 59) #
   1675   (all,r,REG)
   1676       RORDELTA * rore(r)
   1677       + [1 - RORDELTA]
   1678       * [[REGINV(r) / NETINV(r)] * qcgds(r) - [VDEP(r) / NETINV(r)] * kb(r)]
   1679           = RORDELTA * rorg + [1 - RORDELTA] * globalcgds + cgdslack(r);
   1680   !<
   1681       This equation determines either gross investment or the expected rate of
   1682       return in each region, depending on the setting for the binary RORDELTA
   1683       parameter.
   1684   >!
   1685    
   1686   Equation GLOBALINV
   1687   # either expected global rate of return or global net investment (HT 11) #
   1688       RORDELTA * globalcgds + [1 - RORDELTA] * rorg
   1689           = RORDELTA
   1690           * sum(r,REG,
   1691               [REGINV(r) / GLOBINV] * qcgds(r) - [VDEP(r) / GLOBINV] * kb(r))
   1692           + [1 - RORDELTA] * sum(r,REG, [NETINV(r) / GLOBINV] * rore(r));
   1693   !<
   1694       This equation computes either the change in global net investment (when
   1695       RORDELTA = 1), or the change in the expected global rate of return on
   1696       capital (when RORDELTA = 0).
   1697   >!
   1698    
   1699    
   1700   !<
   1701       4-5. Price Index of Aggregate Global Composite Capital Goods
   1702       ------------------------------------------------------------
   1703   >!
   1704    
   1705   Equation PRICGDS
   1706   # eq'n generates a price index for the aggregate global cgds composite (HT 60) #
   1707       pcgdswld = sum(r,REG, [NETINV(r) / GLOBINV] * pcgds(r));
   1708    
   1709    
   1710   !<
   1711       4-6. Price of Saving
   1712       --------------------
   1713   >!
   1714    
   1715   Variable (all,r,REG)
   1716       psaveslack(r) # slack variable for the savings price equation #;
   1717   !<
   1718       This is exogenous under the normal closure.  However, in order to
   1719       replicate simulations from the GTAP book, where there was a single savings
   1720       price, psaveslack may be swapped with psave in order to fix the latter.
   1721       In this case, pcgdswld must be the numeraire so that each region faces the
   1722       same price of savings.
   1723   >!
   1724    
   1725   Equation SAVEPRICE
   1726   # savings price #
   1727   (all,r,REG)
   1728       psave(r)
   1729           = pcgds(r)
   1730           + sum(s,REG, [[NETINV(s) - SAVE(s)] / GLOBINV] * pcgds(s))
   1731           + psaveslack(r);
   1732   !<
   1733       In contrast to the GTAP book, the price of savings is now region-specific
   1734       and it changes at the same rate as the price of regional investment, plus
   1735       an adjustment factor which accounts for the fact that savings and
   1736       investment are not equal at the regional level.
   1737   >!
   1738    
   1739    
   1740   !<
   1741       ----------------------
   1742       5. International Trade
   1743       ----------------------
   1744    
   1745       5-1. Export Prices
   1746       5-2. Demand for Imports
   1747   >!
   1748    
   1749    
   1750   !<
   1751       5-1. Export Prices
   1752       ------------------
   1753   >!
   1754    
   1755   Variable (all,i,TRAD_COMM)(all,r,REG)
   1756       tx(i,r) # dest.-gen. change in subsidy on exports of i from r #;
   1757   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1758       txs(i,r,s) # dest.-spec. change in subsidy on exports of i from r to s #;
   1759   !<
   1760       The variable txs captures changes in the power of bilateral export taxes.
   1761       However, the presence of a destination-generic export subsidy shift (tx)
   1762       also permits the user to swap a single export tax shock with another
   1763       target variable.  It is most naturally swapped with the variable qo to
   1764       insulate domestic producers from the world market.
   1765   >!
   1766    
   1767   Equation EXPRICES
   1768   # eq'n links agent's and world prices (HT 27) #
   1769   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1770       pfob(i,r,s) = pm(i,r) - tx(i,r) - txs(i,r,s);
   1771    
   1772   Equation TEXPRATIO
   1773   # change in ratio of export tax payments to regional income #
   1774   (all,r,REG)
   1775       100.0 * INCOME(r) * del_taxrexp(r) + TEX(r) * y(r)
   1776           = sum(i,TRAD_COMM, sum(s,REG,
   1777               VXMD(i,r,s) * [-tx(i,r) - txs(i,r,s)]
   1778               + XTAXD(i,r,s) * [pfob(i,r,s) + qxs(i,r,s)]));
   1779    
   1780    
   1781   !<
   1782       5-2. Demand for Imports
   1783       -----------------------
   1784    
   1785       Composite Imports Nest: Table 3 of Hertel and Tsigas
   1786   >!
   1787    
   1788   Variable (all,i,TRAD_COMM)(all,s,REG)
   1789       tm(i,s) # source-gen. change in tax on imports of i into s #;
   1790   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1791       tms(i,r,s) # source-spec. change in tax on imports of i from r into s #;
   1792   !<
   1793       The variable tms captures changes in the power of bilateral import taxes.
   1794       However, the presence of a source-generic import tariff shift (tm) also
   1795       permits the user to swap a single import tariff shock with another target
   1796       variable.  In particular, to insulate domestic producers from import price
   1797       changes, it may be swapped with the relative price variable pr -- see
   1798       below.
   1799   >!
   1800    
   1801   Equation MKTPRICES
   1802   # eq'n links domestic and world prices (HT 24) #
   1803   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1804       pms(i,r,s) = tm(i,s) + tms(i,r,s) + pcif(i,r,s);
   1805    
   1806   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1807       MSHRS(i,r,s) # share of imports from r in import bill of s at mkt prices #;
   1808   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1809       MSHRS(i,r,s) = VIMS(i,r,s) / sum(k,REG, VIMS(i,k,s));
   1810   Equation DPRICEIMP
   1811   # price for aggregate imports (HT 28) #
   1812   (all,i,TRAD_COMM)(all,s,REG)
   1813       pim(i,s) = sum(k,REG, MSHRS(i,k,s) * [pms(i,k,s) - ams(i,k,s)]);
   1814    
   1815   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
   1816       pr(i,r) # ratio of domestic to imported prices in r #;
   1817   Equation PRICETGT
   1818   # eq'n defines target price ratio to be attained via the variable levy (HT 25) #
   1819   (all,i,TRAD_COMM)(all,s,REG)
   1820       pr(i,s) = pm(i,s) - pim(i,s);
   1821   !<
   1822       This equation defines the target price ratio to be attained via the
   1823       variable levy.  This price ratio is the ratio of domestic to average
   1824       imported goods' price.  Note that the way this price ratio is defined, it
   1825       includes intraregional imports as well.  In most applications, regions
   1826       will represent groups of individual countries.  However, in the case of
   1827       the EU, this is problematic, since recent versions of the database have
   1828       incorporated intra-EU trade flows.  Therefore, when aggregated to the EU
   1829       level, the composite import price includes both intra-EU and outside
   1830       imports.  So some modification is needed to handle the EU case.
   1831   >!
   1832    
   1833   Coefficient (parameter)(all,i,TRAD_COMM)
   1834       ESUBM(i)
   1835       # region-generic el. of sub. among imports of i in Armington structure #;
   1836   Read
   1837       ESUBM from file GTAPPARM header "ESBM";
   1838    
   1839   Equation IMPORTDEMAND
   1840   # regional demand for disaggregated imported commodities by source (HT 29)  #
   1841   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1842       qxs(i,r,s)
   1843           = -ams(i,r,s) + qim(i,s)
   1844           - ESUBM(i) * [pms(i,r,s) - ams(i,r,s) - pim(i,s)];
   1845    
   1846   Equation TIMPRATIO
   1847   # change in ratio of import tax payments to regional income #
   1848   (all,r,REG)
   1849       100.0 * INCOME(r) * del_taxrimp(r) + TIM(r) * y(r)
   1850           = sum(i,TRAD_COMM, sum(s,REG,
   1851               VIMS(i,s,r) * [tm(i,r) + tms(i,s,r)]
   1852               + MTAX(i,s,r) * [pcif(i,s,r) + qxs(i,s,r)]));
   1853    
   1854    
   1855   !<
   1856       -----------------------------------
   1857       6. International Transport Services
   1858       -----------------------------------
   1859    
   1860       6-0. Module-Specific Variables and Coefficients
   1861       6-1. Demand for Global Transport Services
   1862       6-2. Supply of Transport Services
   1863   >!
   1864    
   1865    
   1866   !<
   1867       6-0. Module-Specific Variables and Coefficients
   1868       -----------------------------------------------
   1869    
   1870       only used in this International Transport Services module
   1871   >!
   1872    
   1873   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1874       qtmfsd(m,i,r,s) # international usage margin m on i from r to s #;
   1875   !<
   1876       International margin usage, by Margin, Freight, Source, and Destination,
   1877       i.e., the percent change in usage of m in transport of i from r to s.
   1878   >!
   1879   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1880       atmfsd(m,i,r,s) # tech change in m's shipping of i from region r to s #;
   1881   !<
   1882       Technical progress in shipping by Margin, Freight, Source, and
   1883       Destination.  This is endogenous and driven by the following mode-,
   1884       product-, source-, and destination-specific determinants.
   1885   >!
   1886   Variable (all,m,TRAD_COMM)
   1887       atm(m) # tech change in mode m, worldwide #;
   1888   Variable (all,i,TRAD_COMM)
   1889       atf(i) # tech change shipping of i, worldwide #;
   1890   Variable (all,r,REG)
   1891       ats(r) # tech change shipping from region r #;
   1892   Variable (all,s,REG)
   1893       atd(s) # tech change shipping to s #;
   1894   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1895       atall(m,i,r,s) # tech change in m's shipping of i from region r to s #;
   1896   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1897       ptrans(i,r,s) # cost index for international transport of i from r to s #;
   1898   !<
   1899       average cost index for margin services used in getting i from r to s
   1900   >!
   1901   Variable (all,m,MARG_COMM)
   1902       qtm(m) # global margin usage #;
   1903   Variable (all,m,MARG_COMM)
   1904       pt(m) # price of composite margins services, type #;
   1905   !<
   1906       price index for commodity m in margin services usage
   1907   >!
   1908    
   1909   Coefficient (ge 0) (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1910       VTMFSD(m,i,r,s)
   1911       # int'l margin usage, by margin, freight, source, and destination #;
   1912   Update (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1913       VTMFSD(m,i,r,s) = pt(m) * qtmfsd(m,i,r,s);
   1914   Read
   1915       VTMFSD from file GTAPDATA header "VTWR";
   1916    
   1917   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1918       VTFSD(i,r,s) # aggregate value of svces in the shipment of i from r to s #;
   1919   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1920       VTFSD(i,r,s) = sum(m,MARG_COMM, VTMFSD(m,i,r,s));
   1921   !<
   1922       In a balanced data base, (all,i,TRAD_COMM)(all,r,REG)(all,s,REG),
   1923       VIWS(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s).
   1924   >!
   1925    
   1926   Coefficient (all,m,MARG_COMM)
   1927       VTMUSE(m) # international margin services usage, by type #;
   1928   Formula (all,m,MARG_COMM)
   1929       VTMUSE(m) = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG, VTMFSD(m,i,r,s))));
   1930    
   1931   Coefficient (all,m,MARG_COMM)
   1932       VTMPROV(m) # international margin services provision #;
   1933   Formula (all,m,MARG_COMM)
   1934       VTMPROV(m) = sum(r,REG, VST(m,r));
   1935   !<
   1936       In a balanced data base, VTMPROV = VTMUSE.
   1937   >!
   1938    
   1939   Coefficient (all,r,REG)
   1940       VTRPROV(r) # international margin supply, by region #;
   1941   Formula (all,r,REG)
   1942       VTRPROV(r) = sum(m,MARG_COMM, VST(m,r));
   1943    
   1944   Coefficient
   1945       VT # international margin supply #;
   1946   Formula
   1947       VT = sum(m,MARG_COMM, sum(r,REG, VST(m,r)));
   1948    
   1949    
   1950   !<
   1951       6-1. Demand for Global Transport Services
   1952       -----------------------------------------
   1953   >!
   1954    
   1955   Equation QTRANS_MFSD
   1956   # bilateral demand for transport services  #
   1957   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1958       qtmfsd(m,i,r,s) = qxs(i,r,s) - atmfsd(m,i,r,s);
   1959   !<
   1960       This equation computes the bilateral demand for international
   1961       transportation services.  It reflects the fact that the demand for
   1962       services along any particular route is proportional to the quantity of
   1963       merchandise shipped [i.e., QXS(i,r,s)].  It is here that we introduce the
   1964       potential for input-augmenting tech change, atmfsd(m,i,r,s), which is
   1965       commodity- and route-specific.  Thus, in the levels:
   1966               ATMFSD(m,i,r,s) * QTMFSD(m,i,r,s) = QXS(i,r,s)
   1967       where QTMFSD is the amount of composite margins services m used along this
   1968       route.  Technological improvements are reflected by atmfsd(i,r,s) > 0, and
   1969       these reduce the margins services required for this i,r,s triplet.  Tech.
   1970       change also dampens the cost of shipping, thereby lowering the CIF price
   1971       implied by a given FOB value (see 6-2).
   1972   >!
   1973    
   1974   Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1975       VTMUSESHR(m,i,r,s) # share of i,r,s usage in global demand for m #;
   1976   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1977       VTMUSESHR(m,i,r,s) = VTFSD(i,r,s) / VT;
   1978   Formula
   1979       (all,m,MARG_COMM: VTMUSE(m) <> 0.0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1980       VTMUSESHR(m,i,r,s) = VTMFSD(m,i,r,s) / VTMUSE(m);
   1981    
   1982   Equation TRANS_DEMAND
   1983   # global demand for margin m #
   1984   (all,m,MARG_COMM)
   1985       qtm(m)
   1986           = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
   1987             VTMUSESHR(m,i,r,s) * qtmfsd(m,i,r,s))));
   1988    
   1989    
   1990   !<
   1991       6-2. Supply of Transport Services
   1992       ---------------------------------
   1993   >!
   1994    
   1995   Coefficient (all,m,MARG_COMM)(all,r,REG)
   1996       VTSUPPSHR(m,r) # share of region r in global supply of margin m #;
   1997   Formula (all,m,MARG_COMM)(all,r,REG)
   1998       VTSUPPSHR(m,r) = VTRPROV(r) / VT;
   1999   Formula (all,m,MARG_COMM: VTMPROV(m) <> 0.0)(all,r,REG)
   2000       VTSUPPSHR(m,r) = VST(m,r) / VTMPROV(m);
   2001    
   2002   Equation PTRANSPORT
   2003   # generate price index for composite transportation services #
   2004   (all,m,MARG_COMM)
   2005       pt(m) = sum(r,REG, VTSUPPSHR(m,r) * pm(m,r));
   2006   !<
   2007       This equation generates a price index for transportation services based on
   2008       zero profits.  NOTE:
   2009       (1) Sales to international transportation are not subject to export tax.
   2010           This is why we base the costs to the transport sector on market prices
   2011           of the goods sold to international transportation.
   2012       (2) We assume that the supply shares for margin services are uniform
   2013           across freight, source of freight, and destination.
   2014       (cf. HT#7)
   2015   >!
   2016    
   2017   Coefficient
   2018       VTUSE # international margin services usage #;
   2019   Formula
   2020       VTUSE
   2021           = sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
   2022               VTMFSD(m,i,r,s)))));
   2023    
   2024   Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2025       VTFSD_MSH(m,i,r,s) # share of margin m in cost of getting i from r to s #;
   2026   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
   2027           (all,s,REG: VTFSD(i,r,s) > 0.0)
   2028       VTFSD_MSH(m,i,r,s) = VTMFSD(m,i,r,s) / VTFSD(i,r,s);
   2029   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
   2030           (all,s,REG: VTFSD(i,r,s) = 0.0)
   2031       VTFSD_MSH(m,i,r,s) = VTMUSE(m) / VTUSE;
   2032    
   2033   Equation TRANSCOSTINDEX
   2034   #  generates flow-specific modal average cost of transport index (cf. HT7) #
   2035   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2036       ptrans(i,r,s)
   2037           = sum(m,MARG_COMM, VTFSD_MSH(m,i,r,s) * [pt(m) - atmfsd(m,i,r,s)]);
   2038    
   2039   Equation TRANSTECHANGE
   2040   #  generates flow-specific average rate of technical change #
   2041   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2042       atmfsd(m,i,r,s) = atm(m) + atf(i) + ats(r) + atd(s) + atall(m,i,r,s);
   2043    
   2044   Equation TRANSVCES
   2045   # generate demand for regional supply of global transportation service (HT 61) #
   2046   (all,m,MARG_COMM)(all,r,REG)
   2047       qst(m,r) = qtm(m) + [pt(m) - pm(m,r)];
   2048   !<
   2049       This equation generates the international transport sector's derived
   2050       demand for regional supplies of transportation services.  It reflects a
   2051       unitary elasticity of substitution between transportation services inputs
   2052       from different regions.
   2053   >!
   2054    
   2055   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2056       VIWSCOST(i,r,s) # value of imports calculated as total cost of imports #;
   2057   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2058       VIWSCOST(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s);
   2059    
   2060   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2061       FOBSHR(i,r,s) # FOB share in VIW #;
   2062   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2063       FOBSHR(i,r,s) = VXWD(i,r,s) / VIWSCOST(i,r,s);
   2064    
   2065   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2066       TRNSHR(i,r,s) # transport share in VIW #;
   2067   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2068       TRNSHR(i,r,s) = VTFSD(i,r,s) / VIWSCOST(i,r,s);
   2069    
   2070   Equation FOBCIF
   2071   # eq'n links FOB and CIF prices for good i shipped from region r to s (HT 26') #
   2072   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2073       pcif(i,r,s)
   2074          = FOBSHR(i,r,s) * pfob(i,r,s)
   2075          + TRNSHR(i,r,s) * ptrans(i,r,s);
   2076   !<
   2077       This equation links export and import prices for each commodity/route
   2078       triplet.  Note that technical change is embodied in ptrans(i,r,s) which is
   2079       now a cost index, as opposed to (HT 26') where it represented the price of
   2080       margins services.
   2081   >!
   2082    
   2083    
   2084   !<
   2085       ---------------------
   2086       7. Regional Household
   2087       ---------------------
   2088    
   2089       7-0. Module-Specific Coefficients
   2090       7-1. Supply of Endowments by the Regional Household
   2091       7-2. Computation of Regional Income
   2092       7-3. Regional Household Demand System
   2093       7-4. Aggregate Utility
   2094   >!
   2095    
   2096    
   2097   !<
   2098       7-0. Module-Specific Coefficients
   2099       ---------------------------------
   2100    
   2101       only used in this Regional Household module
   2102   >!
   2103    
   2104   Coefficient (all,r,REG)
   2105       XSHRPRIV(r) # private expenditure share in regional income #;
   2106   Formula (all,r,REG)
   2107       XSHRPRIV(r) = PRIVEXP(r) / INCOME(r);
   2108    
   2109   Coefficient (all,r,REG)
   2110       XSHRGOV(r) # government expenditure share in regional income #;
   2111   Formula (all,r,REG)
   2112       XSHRGOV(r) = GOVEXP(r) / INCOME(r);
   2113    
   2114   Coefficient (all,r,REG)
   2115       XSHRSAVE(r) # saving share in regional income #;
   2116   Formula (all,r,REG)
   2117       XSHRSAVE(r) = SAVE(r) / INCOME(r);
   2118    
   2119   Variable (all,r,REG)
   2120       uelas(r) # elasticity of cost of utility wrt utility #;
   2121    
   2122   Variable (all,r,REG)
   2123       dppriv(r) # private consumption distribution parameter #;
   2124   Variable (all,r,REG)
   2125       dpgov(r) # government consumption distribution parameter #;
   2126   Variable (all,r,REG)
   2127       dpsave(r) # saving distribution parameter #;
   2128    
   2129    
   2130   !<
   2131       7-1. Supply of Endowments by the Regional Household
   2132       ---------------------------------------------------
   2133   >!
   2134    
   2135   Equation FACTORINCPRICES
   2136   # eq'n links pre- and post-tax endowment supply prices (HT 15) #
   2137   (all,i,ENDW_COMM)(all,r,REG)
   2138       ps(i,r) = to(i,r) + pm(i,r);
   2139    
   2140   Coefficient (all,r,REG)
   2141       TINC(r) # income tax payments in r #;
   2142   Formula (all,r,REG)
   2143       TINC(r) = sum(i,ENDW_COMM, PTAX(i,r));
   2144    
   2145   Equation TINCRATIO
   2146   # change in ratio of income tax payments to regional income #
   2147   (all,r,REG)
   2148       100.0 * INCOME(r) * del_taxrinc(r) + TINC(r) * y(r)
   2149           = sum(i,ENDW_COMM,
   2150               VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);
   2151    
   2152   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   2153       REVSHR(i,j,r);
   2154   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   2155       REVSHR(i,j,r) = VFM(i,j,r) / sum(k,PROD_COMM, VFM(i,k,r));
   2156   Equation ENDW_PRICE
   2157   # eq'n generates the composite price for sluggish endowments (HT 50) #
   2158   (all,i,ENDWS_COMM)(all,r,REG)
   2159       pm(i,r) = sum(k,PROD_COMM, REVSHR(i,k,r) * pmes(i,k,r));
   2160    
   2161   Coefficient (parameter)(all,i,ENDW_COMM)
   2162       ETRAE(i)
   2163       # elst. of transformation for sluggish primary factor endowments #;
   2164   Read
   2165       ETRAE from file GTAPPARM header "ETRE";
   2166   !<
   2167       ETRAE is the elasticity of transformation for sluggish primary factor
   2168       endowments.  It is non-positive, by definition.
   2169   >!
   2170   Equation ENDW_SUPPLY
   2171   # eq'n distributes the sluggish endowments across sectors (HT 51) #
   2172   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   2173       qoes(i,j,r) = qo(i,r) - endwslack(i,r) + ETRAE(i) * [pm(i,r) - pmes(i,j,r)];
   2174    
   2175    
   2176   !<
   2177       7-2. Computation of Regional Income
   2178       -----------------------------------
   2179   >!
   2180    
   2181   Coefficient (all,r,REG)
   2182       FY(r) # primary factor income in r net of depreciation #;
   2183   Formula (all,r,REG)
   2184       FY(r) = sum(i,ENDW_COMM, VOM(i,r)) - VDEP(r);
   2185   Variable (all,r,REG)
   2186       fincome(r) # factor income at market prices net of depreciation #;
   2187   Equation FACTORINCOME
   2188   # factor income at market prices net of depreciation #
   2189   (all,r,REG)
   2190       FY(r) * fincome(r)
   2191           = sum(i,ENDW_COMM, VOM(i,r) * [pm(i,r) + qo(i,r)])
   2192           - VDEP(r)  * [pcgds(r) + kb(r)];
   2193    
   2194   Variable (change)(all,r,REG)
   2195       del_indtaxr(r) # change in ratio of indirect taxes to INCOME in r #;
   2196   Equation DINDTAXRATIO
   2197   # change in ratio of indirect taxes to INCOME in r #
   2198   (all,r,REG)
   2199       del_indtaxr(r)
   2200           = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
   2201           + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r);
   2202    
   2203   Variable (change)(all,r,REG)
   2204       del_ttaxr(r) # change in ratio of taxes to INCOME in r #;
   2205   Equation DTAXRATIO
   2206   # change in ratio of taxes to INCOME in r #
   2207   (all,r,REG)
   2208       del_ttaxr(r)
   2209           = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
   2210           + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r) + del_taxrinc(r);
   2211   !<
   2212      This variable can be swapped with the commodity- and source-generic
   2213      consumption tax shift, tp(r), in order to generate a tax replacement
   2214      scenario, whereby taxes remain a constant share of national income.
   2215   >!
   2216    
   2217   Variable (all,r,REG)
   2218       incomeslack(r) # slack variable in the expression for regional income #;
   2219   !<
   2220       This is exogenous, unless the user wishes to fix regional income.
   2221   >!
   2222    
   2223   Coefficient (all,r,REG)
   2224       INDTAX(r) # indirect tax receipts in r #;
   2225   Formula (all,r,REG)
   2226       INDTAX(r) = TPC(r) + TGC(r) + TIU(r) + TFU(r) + TOUT(r) + TEX(r) + TIM(r);
   2227    
   2228   Equation REGIONALINCOME
   2229   # regional income = sum of primary factor income and indirect tax receipts #
   2230   (all,r,REG)
   2231       INCOME(r) * y(r)
   2232           = FY(r) * fincome(r)
   2233           + 100.0 * INCOME(r) * del_indtaxr(r)
   2234           + INDTAX(r) * y(r)
   2235           + INCOME(r) * incomeslack(r);
   2236   !<
   2237       This equation computes regional income as the sum of primary factor
   2238       payment and indirect tax receipts.  The first term computes the change in
   2239       endowment income, net of depreciation.  The subsequent terms compute the
   2240       change in indirect tax receipts for various transactions taxes.
   2241   >!
   2242    
   2243    
   2244   !<
   2245       7-3. Regional Household Demand System
   2246       -------------------------------------
   2247   >!
   2248    
   2249   Variable (all,r,REG)
   2250       dpav(r) # average distribution parameter shift, for EV calc. #;
   2251   Equation DPARAV
   2252   # average distribution parameter shift #
   2253   (all,r,REG)
   2254       dpav(r)
   2255           = XSHRPRIV(r) * dppriv(r)
   2256           + XSHRGOV(r) * dpgov(r)
   2257           + XSHRSAVE(r) * dpsave(r);
   2258    
   2259   Equation UTILITELASTIC
   2260   # elasticity of cost of utility wrt utility #
   2261   (all,r,REG)
   2262       uelas(r) = XSHRPRIV(r) * uepriv(r) - dpav(r);
   2263    
   2264   Equation PRIVCONSEXP
   2265   # private consumption expenditure #
   2266   (all,r,REG)
   2267       yp(r) - y(r) = -[uepriv(r) - uelas(r)] + dppriv(r);
   2268    
   2269   Equation GOVCONSEXP
   2270   # government consumption expenditure #
   2271   (all,r,REG)
   2272       yg(r) - y(r) = uelas(r) + dpgov(r);
   2273    
   2274   Equation SAVING
   2275   # saving #
   2276   (all,r,REG)
   2277       psave(r) + qsave(r) - y(r) = uelas(r) + dpsave(r);
   2278    
   2279    
   2280   !<
   2281       7-4. Aggregate Utility
   2282       ----------------------
   2283   >!
   2284    
   2285   Variable (all,r,REG)
   2286       p(r) # price index for disposition of income by regional household #;
   2287   Equation PRICEINDEXREG
   2288       # price index for disposition of income by regional household #
   2289       (all,r,REG)
   2290       p(r)
   2291           = XSHRPRIV(r) * ppriv(r)
   2292           + XSHRGOV(r) * pgov(r)
   2293           + XSHRSAVE(r) * psave(r);
   2294    
   2295   Variable (all,r,REG)
   2296       au(r) # input-neutral shift in utility function #;
   2297   Variable (all,r,REG)
   2298       dpsum(r) # sum of the distribution parameters #;
   2299    
   2300   Coefficient (all,r,REG)
   2301       DPARSUM(r) # sum of distribution parameters #;
   2302   Read
   2303       DPARSUM from file GTAPDATA header "DPSM";
   2304   Update (all,r,REG)
   2305       DPARSUM(r) = dpsum(r);
   2306    
   2307   Coefficient (all,r,REG)
   2308       UTILELAS(r) # elasticity of cost of utility wrt utility #;
   2309   Formula (all,r,REG)
   2310       UTILELAS(r)
   2311           = [UELASPRIV(r) * XSHRPRIV(r) + XSHRGOV(r) + XSHRSAVE(r)] / DPARSUM(r);
   2312    
   2313   Coefficient (all,r,REG)
   2314       DPARPRIV(r) # private consumption distribution parameter #;
   2315   Formula (all,r,REG)
   2316       DPARPRIV(r) = UELASPRIV(r) * XSHRPRIV(r) / UTILELAS(r);
   2317    
   2318   Coefficient (all,r,REG)
   2319       DPARGOV(r) # government consumption distribution parameter #;
   2320   Formula (all,r,REG)
   2321       DPARGOV(r) = XSHRGOV(r) / UTILELAS(r);
   2322    
   2323   Coefficient (all,r,REG)
   2324       DPARSAVE(r) # saving distribution parameter #;
   2325   Formula (all,r,REG)
   2326       DPARSAVE(r) = XSHRSAVE(r) / UTILELAS(r);
   2327    
   2328   Coefficient (all,r,REG)
   2329       UTILPRIV(r) # utility from private consumption #;
   2330   Formula (initial)(all,r,REG)
   2331       UTILPRIV(r) = 1.0;
   2332   Update (all,r,REG)
   2333       UTILPRIV(r) = up(r);
   2334    
   2335   Coefficient (all,r,REG)
   2336       UTILGOV(r) # utility from government consumption #;
   2337   Formula (initial)(all,r,REG)
   2338       UTILGOV(r) = 1.0;
   2339   Update (all,r,REG)
   2340       UTILGOV(r) = ug(r);
   2341    
   2342   Coefficient (all,r,REG)
   2343       UTILSAVE(r) # utility from saving #;
   2344   Formula (initial)(all,r,REG)
   2345       UTILSAVE(r) = 1.0;
   2346   Update (change) (all,r,REG)
   2347       UTILSAVE(r) = [[qsave(r) - pop(r)] / 100] * UTILSAVE(r);
   2348    
   2349   Variable (all,r,REG)
   2350       u(r) # per capita utility from aggregate hhld expend. in region r #;
   2351   Equation UTILITY
   2352   # regional household utility #
   2353   (all,r,REG)
   2354       u(r)
   2355           = au(r)
   2356           + DPARPRIV(r) * loge(UTILPRIV(r)) * dppriv(r)
   2357           + DPARGOV(r) * loge(UTILGOV(r)) * dpgov(r)
   2358           + DPARSAVE(r) * loge(UTILSAVE(r)) * dpsave(r)
   2359           + [1.0 / UTILELAS(r)] * [y(r) - pop(r) - p(r)];
   2360    
   2361   Equation DISTPARSUM
   2362   # sum of the distribution parameters #
   2363   (all,r,REG)
   2364       DPARSUM(r) * dpsum(r)
   2365           = DPARPRIV(r) * dppriv(r)
   2366           + DPARGOV(r) * dpgov(r)
   2367           + DPARSAVE(r) * dpsave(r);
   2368    
   2369    
   2370   !<
   2371       -------------------------
   2372       8. Equilibrium Conditions
   2373       -------------------------
   2374    
   2375       8-1. Market Clearing Conditions
   2376       8-2. Walras' Law
   2377   >!
   2378    
   2379    
   2380   !<
   2381       8-1. Market Clearing Conditions
   2382       -------------------------------
   2383   >!
   2384    
   2385   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2386       SHRDFM(i,j,r) # share of dom. prod. i used by sector j in r at mkt prices #;
   2387   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2388       SHRDFM(i,j,r) = VDFM(i,j,r) / VDM(i,r);
   2389    
   2390   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2391       SHRDPM(i,r) # share of domestic prod. of i used by private hhlds in r #;
   2392   Formula (all,i,TRAD_COMM)(all,r,REG)
   2393       SHRDPM(i,r) = VDPM(i,r) / VDM(i,r);
   2394    
   2395   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2396       SHRDGM(i,r) # share of imports of i used by gov't hhlds in r #;
   2397   Formula (all,i,TRAD_COMM)(all,r,REG)
   2398       SHRDGM(i,r) = VDGM(i,r) / VDM(i,r);
   2399    
   2400   Variable (orig_level=VDM)(all,i,TRAD_COMM)(all,r,REG)
   2401       qds(i,r) # domestic sales of commodity i in r #;
   2402   Equation MKTCLDOM
   2403   # eq'n assures market clearing for domestic sales (HT 3) #
   2404   (all,i,TRAD_COMM)(all,r,REG)
   2405       qds(i,r)
   2406           = sum(j,PROD_COMM, SHRDFM(i,j,r) * qfd(i,j,r))
   2407           + SHRDPM(i,r) * qpd(i,r)
   2408           + SHRDGM(i,r) * qgd(i,r);
   2409    
   2410   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2411       SHRDM(i,r) # share of domestic sales of i in r #;
   2412   Formula (all,i,TRAD_COMM)(all,r,REG)
   2413       SHRDM(i,r) = VDM(i,r) / VOM(i,r);
   2414    
   2415   Coefficient (all,m,MARG_COMM)(all,r,REG)
   2416       SHRST(m,r) # share of sales of m to global transport services in r #;
   2417   Formula (all,m,MARG_COMM)(all,r,REG)
   2418       SHRST(m,r) = VST(m,r) / VOM(m,r);
   2419    
   2420   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2421       SHRXMD(i,r,s) # share of export sales of i to s in r #;
   2422   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2423       SHRXMD(i,r,s) = VXMD(i,r,s) / VOM(i,r);
   2424    
   2425   Variable (all,i,TRAD_COMM)(all,r,REG)
   2426       tradslack(i,r) # slack variable in tradeables market clearing condition #;
   2427   !<
   2428       This is exogenous unless the user wishes to specify the price of
   2429       tradeables exogenously, in which case the analysis becomes partial
   2430       equilibrium and walraslack must be exogenized.
   2431   >!
   2432    
   2433   Equation MKTCLTRD_MARG
   2434   # eq'n assures market clearing for margins commodities (HT 1) #
   2435   (all,m,MARG_COMM)(all,r,REG)
   2436       qo(m,r)
   2437           = SHRDM(m,r) * qds(m,r)
   2438           + SHRST(m,r) * qst(m,r)
   2439           + sum(s,REG, SHRXMD(m,r,s) * qxs(m,r,s))
   2440           + tradslack(m,r);
   2441   Equation MKTCLTRD_NMRG
   2442   # eq'n assures market clearing for the non-margins commodities (HT 1) #
   2443   (all,i,NMRG_COMM)(all,r,REG)
   2444       qo(i,r)
   2445           = SHRDM(i,r) * qds(i,r)
   2446           + sum(s,REG, SHRXMD(i,r,s) * qxs(i,r,s))
   2447           + tradslack(i,r);
   2448    
   2449   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2450       VIM(i,r) # value of imports of commodity i in r at domestic market prices #;
   2451   Formula (all,i,TRAD_COMM)(all,r,REG)
   2452       VIM(i,r) = sum(j,PROD_COMM, VIFM(i,j,r)) + VIPM(i,r) + VIGM(i,r);
   2453    
   2454   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2455       SHRIFM(i,j,r) # share of import i used by sector j in r  #;
   2456   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2457       SHRIFM(i,j,r) = VIFM(i,j,r) / VIM(i,r);
   2458    
   2459   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2460       SHRIPM(i,r) # share of import i used by private hhlds in r #;
   2461   Formula (all,i,TRAD_COMM)(all,r,REG)
   2462       SHRIPM(i,r) = VIPM(i,r) / VIM(i,r);
   2463    
   2464   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2465       SHRIGM(i,r) # the share of import i used by gov't hhlds in r #;
   2466   Formula (all,i,TRAD_COMM)(all,r,REG)
   2467       SHRIGM(i,r) = VIGM(i,r) / VIM(i,r);
   2468    
   2469   Equation MKTCLIMP
   2470   # eq'n assures mkt clearing for imported goods entering each region (HT 2) #
   2471   (all,i,TRAD_COMM)(all,r,REG)
   2472       qim(i,r)
   2473           = sum(j,PROD_COMM, SHRIFM(i,j,r) * qfm(i,j,r))
   2474           + SHRIPM(i,r) * qpm(i,r)
   2475           + SHRIGM(i,r) * qgm(i,r);
   2476    
   2477   Coefficient (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   2478       SHREM(i,j,r) # share of mobile endowment i used by sector j at mkt prices #;
   2479   Formula (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   2480       SHREM(i,j,r) = VFM(i,j,r) / VOM(i,r);
   2481    
   2482   Equation MKTCLENDWM
   2483   # eq'n assures mkt clearing for perfectly mobile endowments in each r (HT 4) #
   2484   (all,i,ENDWM_COMM)(all,r,REG)
   2485       qo(i,r) = sum(j,PROD_COMM, SHREM(i,j,r) * qfe(i,j,r)) + endwslack(i,r);
   2486   !<
   2487       This equation assures market clearing for perfectly mobile endowments (HT
   2488       4)
   2489   >!
   2490    
   2491   Equation MKTCLENDWS
   2492   # eq'n assures mkt clearing for imperfectly mobile endowments in each r (HT 5) #
   2493   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   2494       qoes(i,j,r) = qfe(i,j,r);
   2495   !<
   2496       This equation assures market clearing for sluggish endowments (HT 5)
   2497   >!
   2498    
   2499    
   2500   !<
   2501       8-2. Walras' Law
   2502       ----------------
   2503   >!
   2504    
   2505   Variable
   2506       walras_sup # supply in omitted market--global supply of cgds composite #;
   2507   Equation WALRAS_S
   2508   # Extra eq'n computes change in supply in the omitted market. #
   2509       walras_sup = pcgdswld + globalcgds;
   2510   !<
   2511       This is an extra equation which simply computes change in supply in the
   2512       omitted market.  (modified from HT 12 to reflect the value as opposed to
   2513       quantity change, in light of the new treatment of psave(r))
   2514   >!
   2515    
   2516   Variable
   2517       walras_dem # demand in the omitted market--global demand for savings #;
   2518   Equation WALRAS_D
   2519   # Extra eq'n computes change in demand in the omitted market. #
   2520       GLOBINV * walras_dem = sum(r,REG, SAVE(r) * [psave(r) + qsave(r)]);
   2521   !<
   2522       This is an extra equation which simply computes change in demand in the
   2523       omitted market.  (modified from HT 13 to reflect the value as opposed to
   2524       quantity change)
   2525   >!
   2526    
   2527   Variable
   2528       walraslack # slack variable in the omitted market #;
   2529   !<
   2530       This is endogenous under normal, GE closure.  If the GE links are broken,
   2531       then this must be swapped with the numeraire, thereby forcing global
   2532       savings to explicitly equal global investment.
   2533   >!
   2534   Equation WALRAS
   2535   # Check Walras' Law.  Value of "walraslack" should be zero. (HT 14) #
   2536       walras_sup = walras_dem + walraslack;
   2537   !<
   2538       This equation checks Walras' Law.  The value of walraslack should be zero
   2539       in any GE simulation.  (HT 14)
   2540   >!
   2541    
   2542    
   2543   !<
   2544       ==========
   2545       Appendices
   2546       ==========
   2547    
   2548       A. Summary Indices
   2549       B. Equivalent Variation
   2550       C. Welfare Decomposition
   2551       D. Terms of Trade Decomposition
   2552   >!
   2553    
   2554    
   2555   !<
   2556       ------------------
   2557       A. Summary Indices
   2558       ------------------
   2559    
   2560       The following equations calculate many useful summary statistics.  They do
   2561       not generally affect the equilibrium structure of the model, although they
   2562       do include the equation for the usual numeraire variable, "pfactwld". Some
   2563       are documented in Hertel and Tsigas, many are new.
   2564    
   2565       A-0. Appendix-Specific Variables and Coefficients
   2566       A-1. Factor Price Indices
   2567       A-2. Regional Terms of Trade
   2568       A-3. GDP Indices (Value, Price and Quantity)
   2569       A-4. Aggregate Trade Indices (Value, Price and Quantity)
   2570       A-5. Trade Balance Indices
   2571   >!
   2572    
   2573    
   2574   !<
   2575       A-0. Appendix-Specific Variables and Coefficients
   2576       -------------------------------------------------
   2577    
   2578       only used in this Summary Indices appendix
   2579   >!
   2580    
   2581   Variable (all,i,TRAD_COMM)(all,s,REG)
   2582       vxwfob(i,s) # value of merchandise regional exports, by commodity, FOB #;
   2583   Variable (all,i,TRAD_COMM)(all,s,REG)
   2584       viwcif(i,s) # value of merchandise regional imports, by commodity, CIF #;
   2585   Variable (all,r,REG)
   2586       vxwreg(r) # value of merchandise exports, by region #;
   2587   Variable (all,r,REG)
   2588       viwreg(r) # value of merchandise imports, by region, at world prices #;
   2589    
   2590   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2591       VXW(i,r) # value of exports by comm. i and region r at FOB prices #;
   2592   Formula (all,m,MARG_COMM)(all,r,REG)
   2593       VXW(m,r) = sum(s,REG, VXWD(m,r,s)) + VST(m,r);
   2594   Formula (all,i,NMRG_COMM)(all,r,REG)
   2595       VXW(i,r) = sum(s,REG, VXWD(i,r,s));
   2596    
   2597   Coefficient (all,r,REG)
   2598       VXWREGION(r) # value of exports by region r at FOB prices #;
   2599   Formula (all,r,REG)
   2600       VXWREGION(r) = sum(i,TRAD_COMM, VXW(i,r));
   2601    
   2602   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   2603       VIW(i,s) # value of commodity imports i into s at CIF prices #;
   2604   Formula (all,i,TRAD_COMM)(all,s,REG)
   2605       VIW(i,s) = sum(r,REG, VIWS(i,r,s));
   2606   Coefficient (all,r,REG)
   2607       VIWREGION(r) # value of commodity imports by region r at CIF prices #;
   2608   Formula (all,r,REG)
   2609       VIWREGION(r) = sum(i,TRAD_COMM, VIW(i,r));
   2610    
   2611    
   2612   !<
   2613       A-1. Factor Price Indices
   2614       -------------------------
   2615   >!
   2616    
   2617   Variable (orig_level=1.0)(all,i,ENDW_COMM)(all,r,REG)
   2618       pfactreal(i,r) # ratio of return to primary factor i to CPI in r #;
   2619   Equation REALRETURN
   2620   # eq'n defines the real rate of return to primary factor i in region r #
   2621   (all,i,ENDW_COMM)(all,s,REG)
   2622       pfactreal(i,s) = pm(i,s) - ppriv(s);
   2623   !<
   2624       This equation defines the real rate of return to primary factor i in
   2625       region r (new).
   2626   >!
   2627    
   2628   Coefficient (all,r,REG)
   2629       VENDWREG(r) # value of primary factors, at mkt prices, by region #;
   2630   Formula (all,r,REG)
   2631       VENDWREG(r) = sum(i,ENDW_COMM, VOM(i,r));
   2632    
   2633   Variable (orig_level=1.0)(all,r,REG)
   2634       pfactor(r) # market price index of primary factors, by region #;
   2635   Equation PRIMFACTPR
   2636   # computes % change in price index of primary factors, by region #
   2637   (all,r,REG)
   2638       VENDWREG(r) * pfactor(r) = sum(i,ENDW_COMM, VOM(i,r) * pm(i,r));
   2639    
   2640   Coefficient
   2641       VENDWWLD # value of primary factors, at mkt prices, worldwide #;
   2642   Formula
   2643       VENDWWLD = sum(r,REG, VENDWREG(r));
   2644   Variable (orig_level=1.0)
   2645       pfactwld # world price index of primary factors #;
   2646   Equation PRIMFACTPRWLD
   2647   # computes % change in global price index of primary factors #
   2648       VENDWWLD * pfactwld = sum(r,REG, VENDWREG(r) * pfactor(r));
   2649    
   2650    
   2651   !<
   2652       A-2. Regional Terms of Trade
   2653       ----------------------------
   2654    
   2655       The next three equations correspond to Table 10 of Hertel and Tsigas on
   2656       Regional Terms of Trade.
   2657   >!
   2658    
   2659   Variable (orig_level=1.0)(all,r,REG)
   2660       psw(r) # index of prices received for tradeables produced in r #;
   2661   Equation REGSUPRICE
   2662   # estimate change in index of prices received for tradeables i produced in r #
   2663   (all,r,REG)
   2664       VXWREGION(r) * psw(r)
   2665           = sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   2666           + sum(m,MARG_COMM, VST(m,r) * pm(m,r));
   2667   !<
   2668       This equation estimates the change in the index of prices received for
   2669       tradeable products produced in r.  (modified from HT 64 to eliminate the
   2670       investment component)
   2671   >!
   2672    
   2673   Variable (orig_level=1.0)(all,r,REG)
   2674       pdw(r) # index of prices paid for tradeables used in region r #;
   2675   Equation REGDEMPRICE
   2676   # estimate change in index of prices paid for tradeable products used in r #
   2677   (all,r,REG)
   2678       VIWREGION(r) * pdw(r)
   2679           = sum(i,TRAD_COMM, sum(k,REG, VIWS(i,k,r) * pcif(i,k,r)));
   2680   !<
   2681       This equation estimates the change in the index of prices paid for
   2682       tradeable products used in r.  (modified from HT 65 to eliminate savings)
   2683   >!
   2684    
   2685   Variable (orig_level=1.0)(all,r,REG)
   2686       tot(r) # terms of trade for region r: tot(r) = psw(r) - pdw(r) #;
   2687   Equation TOTeq
   2688   # terms of trade equation computed as difference in psw and pdw (HT 66) #
   2689   (all,r,REG)
   2690       tot(r) = psw(r) - pdw(r);
   2691    
   2692    
   2693   !<
   2694       A-3. GDP Indices (Value, Price and Quantity)
   2695       --------------------------------------------
   2696   >!
   2697    
   2698   Coefficient (all,r,REG)
   2699       GDP(r) # Gross Domestic Product in region r #;
   2700   Formula (all,s,REG)
   2701       GDP(s)
   2702           = sum(i,TRAD_COMM, VPA(i,s))
   2703           + sum(i,TRAD_COMM, VGA(i,s))
   2704           + sum(k,CGDS_COMM, VOA(k,s))
   2705           + sum(i,TRAD_COMM, sum(r,REG, VXWD(i,s,r)))
   2706           + sum(m,MARG_COMM, VST(m,s))
   2707           - sum(i,TRAD_COMM, sum(r,REG, VIWS(i,r,s)));
   2708   !<
   2709       Gross Domestic Product in region r.  Trade is valued at FOB and CIF
   2710       prices.
   2711   >!
   2712    
   2713   Variable (all,r,REG)
   2714       vgdp(r) # change in value of GDP #;
   2715   Equation VGDP_r
   2716   # change in value of GDP (HT 70) #
   2717   (all,r,REG)
   2718       GDP(r) * vgdp(r)
   2719           = sum(i,TRAD_COMM, VGA(i,r) * [qg(i,r) + pg(i,r)])
   2720           + sum(i,TRAD_COMM, VPA(i,r) * [qp(i,r) + pp(i,r)])
   2721           + REGINV(r) * [qcgds(r) + pcgds(r)]
   2722           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]))
   2723           + sum(m,MARG_COMM, VST(m,r) * [qst(m,r) + pm(m,r)])
   2724           - sum(i,TRAD_COMM, sum(s,REG,
   2725               VIWS(i,s,r) * [qxs(i,s,r) + pcif(i,s,r)]));
   2726    
   2727   Variable (orig_level=1.0)(all,r,REG)
   2728       pgdp(r) # GDP price index #;
   2729   Equation PGDP_r
   2730   # GDP price index (HT 71) #
   2731   (all,r,REG)
   2732       GDP(r) * pgdp(r)
   2733           = sum(i,TRAD_COMM, VGA(i,r) * pg(i,r))
   2734           + sum(i,TRAD_COMM, VPA(i,r) * pp(i,r))
   2735           + REGINV(r) * pcgds(r)
   2736           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   2737           + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
   2738           - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * pcif(i,s,r)));
   2739    
   2740   Variable (orig_level=GDP)(all,r,REG)
   2741       qgdp(r) # GDP quantity index #;
   2742   Equation QGDP_r
   2743   # GDP quantity index #
   2744   (all,r,REG)
   2745       GDP(r) * qgdp(r)
   2746           = sum(i,TRAD_COMM, VGA(i,r) * qg(i,r))
   2747           + sum(i,TRAD_COMM, VPA(i,r) * qp(i,r))
   2748           + REGINV(r) * qcgds(r)
   2749           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * qxs(i,r,s)))
   2750           + sum(m,MARG_COMM, VST(m,r) * qst(m,r))
   2751           - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * qxs(i,s,r)));
   2752   !<
   2753       modified from HT 72 for use with AnalyzeGE
   2754   >!
   2755    
   2756   Variable (all,i,PROD_COMM)(all,r,REG)
   2757       compvalad(i,r) # composition of value added for good i and region r #;
   2758   Equation COMPVALADEQ
   2759   # track change in composition of value added #
   2760   (all,i,PROD_COMM)(all,r,REG)
   2761       compvalad(i,r) = qo(i,r) - qgdp(r);
   2762    
   2763    
   2764   !<
   2765       A-4. Aggregate Trade Indices (Value, Price and Quantity)
   2766       --------------------------------------------------------
   2767   >!
   2768    
   2769    
   2770   !<
   2771       Common Variables and Coefficients
   2772       Value Indices for Aggregate Trade
   2773       Price Indices for Aggregate Trade
   2774       Quantity Indices for Aggregate Trade
   2775   >!
   2776    
   2777    
   2778   !<
   2779       Common Variables and Coefficients
   2780       .................................
   2781    
   2782       only used in this Aggregate Trade Indices section
   2783   >!
   2784    
   2785   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
   2786       pxw(i,r) # aggregate exports price index of i from region r #;
   2787    
   2788   Coefficient (all,i,TRAD_COMM)
   2789       VXWCOMMOD(i) # value of world exports by commodity i at FOB prices #;
   2790   Formula (all,i,TRAD_COMM)
   2791       VXWCOMMOD(i) = sum(r,REG, VXW(i,r));
   2792    
   2793   Coefficient
   2794       VXWLD # value of commodity exports, FOB, globally #;
   2795   Formula
   2796       VXWLD = sum(r,REG, VXWREGION(r));
   2797    
   2798   Coefficient (all,i,TRAD_COMM)
   2799       VIWCOMMOD(i) # global value of commodity imports, CIF, by commodity #;
   2800   Formula (all,i,TRAD_COMM)
   2801       VIWCOMMOD(i) = sum(r,REG, VIW(i,r));
   2802    
   2803   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2804       PW_PM(i,r) # ratio of world to domestic prices #;
   2805   Formula (all,i,TRAD_COMM)(all,r,REG)
   2806       PW_PM(i,r) = sum(s,REG, VXWD(i,r,s)) / sum(s,REG, VXMD(i,r,s));
   2807   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2808       VOW(i,r) # value of output in r at FOB including transportation services #;
   2809   Formula (all,m,MARG_COMM)(all,r,REG)
   2810       VOW(m,r) = VDM(m,r) * PW_PM(m,r) + sum(s,REG, VXWD(m,r,s)) + VST(m,r);
   2811   Formula (all,i,NMRG_COMM)(all,r,REG)
   2812       VOW(i,r) = VDM(i,r) * PW_PM(i,r) + sum(s,REG, VXWD(i,r,s));
   2813    
   2814   Coefficient (all,i,TRAD_COMM)
   2815       VWOW(i) # value of world supply at world prices for i #;
   2816   Formula (all,i,TRAD_COMM)
   2817       VWOW(i) = sum(r,REG, VOW(i,r));
   2818    
   2819   Coefficient (all,i,TRAD_COMM)
   2820       VWOU(i) # value of world output of i at user prices #;
   2821   Formula (all,i,TRAD_COMM)
   2822       VWOU(i) = sum(s,REG, [VPA(i,s) + VGA(i,s)] + sum(j,PROD_COMM, VFA(i,j,s)));
   2823    
   2824    
   2825   !<
   2826       Value Indices for Aggregate Trade
   2827       .................................
   2828   >!
   2829    
   2830   Equation VREGEX_ir_MARG
   2831   # the change in FOB value of exports of m from r #
   2832   (all,m,MARG_COMM)(all,r,REG)
   2833       VXW(m,r) * vxwfob(m,r)
   2834           = sum(s,REG, VXWD(m,r,s) * [qxs(m,r,s) + pfob(m,r,s)])
   2835           + VST(m,r) * [qst(m,r) + pm(m,r)];
   2836   Equation VREGEX_ir_NMRG
   2837   # the change in FOB value of exports of commodity i from r (HT 73) #
   2838   (all,i,NMRG_COMM)(all,r,REG)
   2839       VXW(i,r) * vxwfob(i,r)
   2840           = sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]);
   2841    
   2842   Equation VREGEX_r
   2843   # computes % change in value of merchandise exports, by region (HT 75) #
   2844   (all,r,REG)
   2845       VXWREGION(r) * vxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * vxwfob(i,r));
   2846    
   2847   Variable (all,i,TRAD_COMM)
   2848       vxwcom(i) # value of global merchandise exports by commodity #;
   2849   Equation VWLDEX_i
   2850   # computes % change in FOB value of global exports, by commodity (HT 77) #
   2851   (all,i,TRAD_COMM)
   2852       VXWCOMMOD(i) * vxwcom(i) = sum(r,REG, VXW(i,r) * vxwfob(i,r));
   2853    
   2854   Variable
   2855       vxwwld # value of world trade #;
   2856   Equation VWLDEX
   2857   # computes % change in value of global exports (HT 79) #
   2858       VXWLD * vxwwld = sum(r,REG, VXWREGION(r) * vxwreg(r));
   2859    
   2860   Equation VREGIM_is
   2861   # the change in CIF value of imports of commodity i into s (HT 74) #
   2862   (all,i,TRAD_COMM)(all,s,REG)
   2863       VIW(i,s) * viwcif(i,s)
   2864           = sum(r,REG, VIWS(i,r,s) * [pcif(i,r,s) + qxs(i,r,s)]);
   2865    
   2866   Equation VREGIM_s
   2867   # computes % change in value of imports, CIF basis, by region (HT 76) #
   2868   (all,s,REG)
   2869       VIWREGION(s) * viwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * viwcif(i,s));
   2870    
   2871   Variable (all,i,TRAD_COMM)
   2872       viwcom(i) # value of global merchandise imports i, at world prices #;
   2873   Equation VWLDIM_i
   2874   # computes % change in value of global imports, by commodity (HT 78) #
   2875   (all,i,TRAD_COMM)
   2876       VIWCOMMOD(i) * viwcom(i) = sum(s,REG, VIW(i,s) * viwcif(i,s));
   2877    
   2878   Variable (all,i,TRAD_COMM)
   2879       valuew(i) # value of world supply of good i #;
   2880   Equation VWLDOUT
   2881   # change in value of world output of comm. i at FOB prices (HT 80) #
   2882   (all,i,TRAD_COMM)
   2883       VWOW(i) * valuew(i) = sum(r,REG, VOW(i,r) * [pxw(i,r) + qo(i,r)]);
   2884    
   2885   Variable (all,i,TRAD_COMM)
   2886       valuewu(i) # value of world supply of good i at user prices #;
   2887   Equation VWLDOUTUSE
   2888   # change in value of world output of commodity i at user prices #
   2889   (all,i,TRAD_COMM)
   2890       VWOU(i) * valuewu(i)
   2891           = sum(s,REG, VPA(i,s) * [pp(i,s) + qp(i,s)]
   2892           + VGA(i,s) * [pg(i,s) + qg(i,s)]
   2893           + sum(j,PROD_COMM, VFA(i,j,s) * [pf(i,j,s) + qf(i,j,s)]));
   2894    
   2895    
   2896   !<
   2897       Price Indices for Aggregate Trade
   2898       .................................
   2899   >!
   2900    
   2901   Equation PREGEX_ir_MARG
   2902   # change in FOB price index of exports of m from r #
   2903   (all,m,MARG_COMM)(all,r,REG)
   2904       VXW(m,r) * pxw(m,r)
   2905           = sum(s,REG, VXWD(m,r,s) * pfob(m,r,s)) + VST(m,r) * pm(m,r);
   2906    
   2907   Equation PREGEX_ir_NMRG
   2908   # change in FOB price index of exports of commodity i from r (HT 81) #
   2909   (all,i,NMRG_COMM)(all,r,REG)
   2910       VXW(i,r) * pxw(i,r) = sum(s,REG, VXWD(i,r,s) * pfob(i,r,s));
   2911    
   2912   Variable (orig_level=1.0)(all,r,REG)
   2913       pxwreg(r) # price index of merchandise exports, by region #;
   2914   Equation PREGEX_r
   2915   # computes % change in price index of exports, by region (HT 83) #
   2916   (all,r,REG)
   2917       VXWREGION(r) * pxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * pxw(i,r));
   2918    
   2919   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   2920       pxwcom(i) # price index of global merchandise exports by commodity #;
   2921   Equation PWLDEX_i
   2922   # computes % change in price index of exports, by commodity (HT 85) #
   2923   (all,i,TRAD_COMM)
   2924       VXWCOMMOD(i) * pxwcom(i) = sum(r,REG, VXW(i,r) * pxw(i,r));
   2925    
   2926   Variable (orig_level=1.0)
   2927       pxwwld # price index of world trade #;
   2928   Equation PWLDEX
   2929   # computes % change in price index of global exports (HT 87) #
   2930       VXWLD * pxwwld = sum(r,REG, VXWREGION(r) * pxwreg(r));
   2931    
   2932   Variable (all,i,TRAD_COMM)(all,r,REG)
   2933       piw(i,r) # world price of composite import i in region r #;
   2934   Equation PREGIM_is
   2935   # change in CIF price index of imports of commodity i into s (HT 82) #
   2936   (all,i,TRAD_COMM)(all,s,REG)
   2937       VIW(i,s) * piw(i,s) = sum(r,REG, VIWS(i,r,s) * pcif(i,r,s));
   2938    
   2939   Variable (orig_level=1.0)(all,r,REG)
   2940       piwreg(r) # price index of merchandise imports, by region #;
   2941   Equation PREGIM_s
   2942   # computes % change in price index of imports, by region (HT 84) #
   2943   (all,s,REG)
   2944       VIWREGION(s) * piwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * piw(i,s));
   2945    
   2946   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   2947       piwcom(i) # price index of global merchandise imports by commodity #;
   2948   Equation PWLDIM_i
   2949   # computes % change in price index of imports, by commodity (HT 86) #
   2950   (all,i,TRAD_COMM)
   2951       VIWCOMMOD(i) * piwcom(i) = sum(s,REG, VIW(i,s) * piw(i,s));
   2952    
   2953   Variable (all,i,TRAD_COMM)
   2954       pw(i) # world price index for total good i supplies #;
   2955   Equation PWLDOUT
   2956   # change in index of world prices, FOB, for total production of i (HT 88) #
   2957   (all,i,TRAD_COMM)
   2958       VWOW(i) * pw(i) = sum(r,REG, VOW(i,r) * pxw(i,r));
   2959    
   2960   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   2961       pwu(i) # world price index for total good i supplies at user prices #;
   2962   Equation PWLDUSE
   2963   # change in index of user prices for deflating world production of i #
   2964   (all,i,TRAD_COMM)
   2965       VWOU(i) * pwu(i)
   2966           = sum(s,REG, VPA(i,s) * pp(i,s)
   2967           + VGA(i,s) * pg(i,s)
   2968           + sum(j,PROD_COMM, VFA(i,j,s) * pf(i,j,s)));
   2969    
   2970    
   2971   !<
   2972       Quantity Indices for Aggregate Trade
   2973       ....................................
   2974   >!
   2975    
   2976   Variable (orig_level=VXW)(all,i,TRAD_COMM)(all,r,REG)
   2977       qxw(i,r) # aggregate exports of i from region r, FOB weights #;
   2978   Equation QREGEX_ir_MARG
   2979   # change in volume of exports of margin commodity m from r #
   2980   (all,m,MARG_COMM)(all,r,REG)
   2981       VXW(m,r) * qxw(m,r)
   2982           = sum(s,REG, VXWD(m,r,s) * qxs(m,r,s)) + VST(m,r) * qst(m,r);
   2983   Equation QREGEX_ir_NMRG
   2984   # change in volume of exports of non-margin commodity i from r #
   2985   (all,i,NMRG_COMM)(all,r,REG)
   2986       VXW(i,r) * qxw(i,r) = sum(s,REG, VXWD(i,r,s) * qxs(i,r,s));
   2987   !<
   2988       modified from HT 89 for use with AnalyzeGE
   2989   >!
   2990    
   2991   Variable (orig_level=VXWREGION)(all,r,REG)
   2992       qxwreg(r) # volume of merchandise exports, by region #;
   2993   Equation QREGEX_r
   2994   # computes % change in quantity index of exports, by region #
   2995   (all,r,REG)
   2996       VXWREGION(r) * qxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * qxw(i,r));
   2997   !<
   2998       modified from HT 91 for use with AnalyzeGE
   2999   >!
   3000    
   3001   Variable (orig_level=VXWCOMMOD)(all,i,TRAD_COMM)
   3002       qxwcom(i) # volume of global merchandise exports by commodity #;
   3003   Equation QWLDEX_i
   3004   # computes % change in quantity index of exports, by commodity #
   3005   (all,i,TRAD_COMM)
   3006       VXWCOMMOD(i) * qxwcom(i) = sum(r,REG, VXW(i,r) * qxw(i,r));
   3007   !<
   3008       modified from HT 93 for use with AnalyzeGE
   3009   >!
   3010    
   3011   Variable (orig_level=VXWLD)
   3012       qxwwld # volume of world trade #;
   3013   Equation QWLDEX
   3014   # computes % change in quantity index of global exports #
   3015       VXWLD * qxwwld = sum(r,REG, VXWREGION(r) * qxwreg(r));
   3016   !<
   3017       modified from HT 95 for use with AnalyzeGE
   3018   >!
   3019    
   3020   Variable (all,i,TRAD_COMM)(all,s,REG)
   3021       qiw(i,s) # aggregate imports of i into region s, CIF weights #;
   3022   Equation QREGIM_is
   3023   # change in volume of imports of commodity i into s #
   3024   (all,i,TRAD_COMM)(all,s,REG)
   3025       VIW(i,s) * qiw(i,s) = sum(r,REG, VIWS(i,r,s) * qxs(i,r,s));
   3026   !<
   3027       modified from HT 90 for use with AnalyzeGE
   3028   >!
   3029    
   3030   Variable (orig_level=VIWREGION)(all,r,REG)
   3031       qiwreg(r) # volume of merchandise imports, by region #;
   3032   Equation QREGIM_s
   3033   # computes % change in quantity index of imports, by region #
   3034   (all,s,REG)
   3035       VIWREGION(s) * qiwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * qiw(i,s));
   3036   !<
   3037       modified from HT 92 for use with AnalyzeGE
   3038   >!
   3039    
   3040   Variable (orig_level=VIWCOMMOD)(all,i,TRAD_COMM)
   3041       qiwcom(i) # volume of global merchandise imports by commodity #;
   3042   Equation QWLDIM_i
   3043   # computes % change in quantity index of imports, by commodity #
   3044   (all,i,TRAD_COMM)
   3045       VIWCOMMOD(i) * qiwcom(i) = sum(s,REG, VIW(i,s) * qiw(i,s));
   3046   !<
   3047       modified from HT 94 for use with AnalyzeGE
   3048   >!
   3049    
   3050   Variable (all,i,TRAD_COMM)
   3051       qow(i) # quantity index for world supply of good i #;
   3052   Equation QWLDOUT
   3053   # change in index of world production of i #
   3054   (all,i,TRAD_COMM)
   3055       VWOW(i) * qow(i) = sum(r,REG, VOW(i,r) * qo(i,r));
   3056   !<
   3057       modified from HT 96 for use with AnalyzeGE
   3058   >!
   3059    
   3060   Variable (orig_level=VWOU)(all,i,TRAD_COMM)
   3061       qowu(i) # quantity index for world supply of good i at user prices #;
   3062   Equation QWLDOUTU
   3063   # change in index of world production of i evaluated at user prices #
   3064   (all,i,TRAD_COMM)
   3065       VWOU(i) * qowu(i)
   3066           = sum(s,REG, VPA(i,s) * qp(i,s)
   3067           + VGA(i,s) * qg(i,s)
   3068           + sum(j,PROD_COMM, VFA(i,j,s) * qf(i,j,s)));
   3069    
   3070    
   3071   !<
   3072       A-5. Trade Balance Indices
   3073       --------------------------
   3074   >!
   3075    
   3076   Variable (change)(all,i,TRAD_COMM)(all,r,REG)
   3077       DTBALi(i,r) # change in trade balance by i and by r, $ US million #;
   3078   !<
   3079       A positive value indicates that the change in exports exceeds the change
   3080       in imports.
   3081   >!
   3082   Equation TRADEBAL_i
   3083   # computes change in trade balance by commodity and by region (HT 97) #
   3084   (all,i,TRAD_COMM)(all,r,REG)
   3085       DTBALi(i,r)
   3086           = [VXW(i,r) / 100] * vxwfob(i,r) - [VIW(i,r) / 100] * viwcif(i,r);
   3087    
   3088   Variable (change)(all,r,REG)
   3089       DTBAL(r) # change in trade balance X - M, $ US million #;
   3090   Equation TRADEBALANCE
   3091   # computes change in trade balance (X - M), by region (HT 98) #
   3092   (all,r,REG)
   3093       DTBAL(r)
   3094           = [VXWREGION(r) / 100] * vxwreg(r) - [VIWREGION(r) / 100] * viwreg(r);
   3095    
   3096   !<
   3097       In order to maintain homogeneity in the presence of a fixed trade balance,
   3098       it is useful to have a nominal variable which this is measured against.
   3099       The next equation provides this, and we recommend users fix DTBALR instead
   3100       of fixing DTBAL in future simulations.  The strategy is the same one used
   3101       above for taxes.
   3102   >!
   3103    
   3104   Coefficient (all,r,REG)
   3105       TBAL(r) # trade balance for region r #;
   3106   Formula (all,r,REG)
   3107       TBAL(r) = VXWREGION(r) - VIWREGION(r);
   3108    
   3109   Variable (change)(all,r,REG)
   3110       DTBALR(r) # change in ratio of trade balance to regional income #;
   3111   Equation DTBALRATIO
   3112   # change in ratio of trade balance to regional income #
   3113   (all,r,REG)
   3114       100 * INCOME(r) * DTBALR(r) = 100 * DTBAL(r) - TBAL(r) * y(r);
   3115    
   3116    
   3117   !<
   3118       -----------------------
   3119       B. Equivalent Variation
   3120       -----------------------
   3121    
   3122       B-0. Appendix-Specific Variables and Coefficients
   3123       B-1. Government Consumption Shadow Demand System
   3124       B-2. Private Consumption Shadow Demand System
   3125       B-3. Regional Household Shadow Demand System
   3126       B-4. Equivalent Variation
   3127    
   3128       This appendix calculates equivalent variation "EV" and world equivalent
   3129       variation, "WEV", by determining the income "yev" that would be required
   3130       to achieve the current actual utility level "u" in a shadow demand system
   3131       in which prices are fixed.
   3132    
   3133       Section B-2 calculates the utility elasticity of private consumption
   3134       expenditure, "ueprivev", within a shadow demand system for private
   3135       consumption, for use in section B-3.  B-3 calculates private consumption
   3136       expenditure "ypev" for use in B-2, and regional income "yev" for use in
   3137       B-4, within a shadow demand system for the regional household.  B-4
   3138       calculates "EV" and "WEV".
   3139   >!
   3140    
   3141    
   3142   !<
   3143       B-0. Appendix-Specific Variables and Coefficients
   3144       -------------------------------------------------
   3145    
   3146       only used in this Equivalent Variation section of the Summary Indices
   3147       appendix
   3148   >!
   3149    
   3150   Variable (all,r,REG)
   3151       uelasev(r)
   3152       # elasticity of cost of utility wrt utility, for EV calc. #;
   3153   Variable (all,r,REG)
   3154       ueprivev(r)
   3155       # utility elasticity of private consn expenditure, for EV calc. #;
   3156   Variable (all,r,REG)
   3157       ugev(r) # per capita utility from gov't expend., for EV calc. #;
   3158   Variable (all,r,REG)
   3159       upev(r) # per capita utility from private expend., for EV calc. #;
   3160   Variable (all,r,REG)
   3161       qsaveev(r) # total quantity of savings demanded, for EV calc. #;
   3162   Variable (all,r,REG)
   3163       yev(r) # regional household income in region r, for EV calc. #;
   3164   Variable (all,r,REG)
   3165       ypev(r)
   3166       # private consumption expenditure in region r, for EV calc. #;
   3167   Variable (all,r,REG)
   3168       ygev(r)
   3169       # government consumption expenditure in region r, for EV calc. #;
   3170    
   3171   Coefficient (all,r,REG)
   3172       INCOMEEV(r) # regional income, for EV calc. #;
   3173   Formula (initial) (all,r,REG)
   3174       INCOMEEV(r) = INCOME(r);
   3175   Update (all,r,REG)
   3176       INCOMEEV(r) = yev(r);
   3177    
   3178   Coefficient (all,r,REG)
   3179       UTILPRIVEV(r) # utility from private consumption, for EV calcs #;
   3180   Formula (initial) (all,r,REG)
   3181       UTILPRIVEV(r) = UTILPRIV(r);
   3182   Update (all,r,REG)
   3183       UTILPRIVEV(r) = upev(r);
   3184    
   3185   Coefficient (all,r,REG)
   3186       UTILGOVEV(r) # utility from private consumption, for EV calcs #;
   3187   Formula (initial) (all,r,REG)
   3188       UTILGOVEV(r) = UTILGOV(r);
   3189   Update (all,r,REG)
   3190       UTILGOVEV(r) = ugev(r);
   3191    
   3192   Coefficient (all,r,REG)
   3193       UTILSAVEEV(r) # utility from private consumption, for EV calcs #;
   3194   Formula (initial) (all,r,REG)
   3195       UTILSAVEEV(r) = UTILSAVE(r);
   3196   Update (change) (all,r,REG)
   3197       UTILSAVEEV(r) = [[qsaveev(r) - pop(r)] / 100] * UTILSAVEEV(r);
   3198    
   3199    
   3200   !<
   3201       B-1. Government Consumption Shadow Demand System
   3202       ------------------------------------------------
   3203   >!
   3204    
   3205   Equation GOVUSHD
   3206   # utility from government consumption in r #
   3207   (all,r,REG)
   3208       ygev(r) - pop(r) = ugev(r);
   3209    
   3210    
   3211   !<
   3212       B-2. Private Consumption Shadow Demand System
   3213       ---------------------------------------------
   3214   >!
   3215    
   3216   Variable (all,i,TRAD_COMM)(all,r,REG)
   3217       qpev(i,r)
   3218       # private hhld demand for commodity i in region r, for EV calc. #;
   3219    
   3220   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3221       VPAEV(i,r)
   3222       # private hhld expend. on i in r valued at agent's prices, for EV calc. #;
   3223   Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   3224       VPAEV(i,r) = VPA(i,r);
   3225   Update (all,i,TRAD_COMM)(all,r,REG)
   3226       VPAEV(i,r) = qpev(i,r);
   3227    
   3228   Coefficient (all,r,REG)
   3229       VPAREGEV(r) # private consumption expenditure in region r, for EV calc. #;
   3230   Formula (all,r,REG)
   3231       VPAREGEV(r) = sum(i,TRAD_COMM, VPAEV(i,r));
   3232   !<
   3233       VPAREGEV should agree with PRIVEXPEV.
   3234   >!
   3235    
   3236   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3237       CONSHREV(i,r)
   3238       # share of private hhld consn devoted to good i in r, for EV calc. #;
   3239   Formula (all,i,TRAD_COMM)(all,r,REG)
   3240       CONSHREV(i,r) = VPAEV(i,r) / VPAREGEV(r);
   3241   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3242       EYEV(i,r)
   3243       # expend. elast. of private hhld demand for i in r, for EV calc. #;
   3244   Formula (all,i,TRAD_COMM)(all,r,REG)
   3245       EYEV(i,r)
   3246           = [1.0 / sum(n,TRAD_COMM, CONSHREV(n,r) * INCPAR(n,r))]
   3247           * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
   3248               + sum(n,TRAD_COMM, CONSHREV(n,r) * INCPAR(n,r) * ALPHA(n,r))]
   3249           + ALPHA(i,r)
   3250           - sum(n,TRAD_COMM, CONSHREV(n,r) * ALPHA(n,r));
   3251    
   3252   Equation PRIVDMNDSEV
   3253       # private hhld demands for composite commodities, for EV calc. #
   3254       (all,i,TRAD_COMM)(all,r,REG)
   3255       qpev(i,r) - pop(r) = EYEV(i,r) * [ypev(r) - pop(r)];
   3256   !<
   3257       Prices are held constant for the EV calculation and so do not appear here.
   3258   >!
   3259    
   3260   Coefficient (all,r,REG)
   3261       UELASPRIVEV(r)
   3262       # elast. of cost wrt utility from private consn, for EV calc. #;
   3263   Formula (all,r,REG)
   3264       UELASPRIVEV(r) = sum(i,TRAD_COMM, CONSHREV(i,r) * INCPAR(i,r));
   3265    
   3266   Equation PRIVATEUEV
   3267   # computation of utility from private consumption in r (HT 45) #
   3268   (all,r,REG)
   3269       ypev(r) - pop(r) = UELASPRIVEV(r) * upev(r);
   3270    
   3271   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3272       XWCONSHREV(i,r)
   3273       # expansion-parameter-weighted consumption share, for EV calc. #;
   3274   Formula (all,i,TRAD_COMM)(all,r,REG)
   3275       XWCONSHREV(i,r) = CONSHREV(i,r) * INCPAR(i,r) / UELASPRIVEV(r);
   3276    
   3277   Equation UTILELASPRIVEV
   3278       # elasticity of cost wrt utility from private consn, for EV calc. #
   3279       (all,r,REG)
   3280       ueprivev(r)
   3281           = sum(i,TRAD_COMM, XWCONSHREV(i,r) * [qpev(i,r) - ypev(r)]);
   3282   !<
   3283       Prices are held constant for the EV calculation and so do not appear here.
   3284   >!
   3285    
   3286    
   3287   !<
   3288    
   3289       B-3. Regional Household Shadow Demand System
   3290       --------------------------------------------
   3291   >!
   3292    
   3293   Variable (all,r,REG)
   3294       ysaveev(r) # NET savings expenditure, for EV calc. #;
   3295    
   3296   Coefficient (all,r,REG)
   3297       PRIVEXPEV(r)
   3298       # private consumption expenditure in region r, for EV calc. #;
   3299   Formula (initial) (all,r,REG)
   3300       PRIVEXPEV(r) = PRIVEXP(r);
   3301   Update (all,r,REG)
   3302       PRIVEXPEV(r) = ypev(r);
   3303   !<
   3304       PRIVEXPEV should agree with VPAREGEV.
   3305   >!
   3306    
   3307   Coefficient (all,r,REG)
   3308       GOVEXPEV(r)
   3309       # government consumption expenditure in region r, for EV calc. #;
   3310   Formula (initial) (all,r,REG)
   3311       GOVEXPEV(r) = GOVEXP(r);
   3312   Update (all,r,REG)
   3313       GOVEXPEV(r) = ygev(r);
   3314    
   3315   Coefficient (all,r,REG)
   3316       SAVEEV(r)
   3317       # saving in region r, for EV calc. #;
   3318   Formula (initial) (all,r,REG)
   3319       SAVEEV(r) = SAVE(r);
   3320   Update (all,r,REG)
   3321       SAVEEV(r) = ysaveev(r);
   3322    
   3323   Coefficient (all,r,REG)
   3324       XSHRPRIVEV(r)
   3325       # private expenditure share in regional income, for EV calc. #;
   3326   Formula (all,r,REG)
   3327       XSHRPRIVEV(r) = PRIVEXPEV(r) / INCOMEEV(r);
   3328    
   3329   Coefficient (all,r,REG)
   3330       XSHRGOVEV(r)
   3331       # government expenditure share in regional income, for EV calc. #;
   3332   Formula (all,r,REG)
   3333       XSHRGOVEV(r) = GOVEXPEV(r) / INCOMEEV(r);
   3334    
   3335   Coefficient (all,r,REG)
   3336       XSHRSAVEEV(r) # saving share in regional income, for EV calc. #;
   3337   Formula (all,r,REG)
   3338       XSHRSAVEEV(r) = SAVEEV(r) / INCOMEEV(r);
   3339    
   3340   Variable (all,r,REG)
   3341       dpavev(r) # average distribution parameter shift, for EV calc. #;
   3342   Equation DPARAVEV
   3343   # average distribution parameter shift, for EV calc. #
   3344       (all,r,REG)
   3345       dpavev(r)
   3346           = XSHRPRIVEV(r) * dppriv(r)
   3347           + XSHRGOVEV(r) * dpgov(r)
   3348           + XSHRSAVEEV(r) * dpsave(r);
   3349    
   3350   Equation UTILITELASTICEV
   3351       # elasticity of cost of utility wrt utility, for EV calc. #
   3352       (all,r,REG)
   3353       uelasev(r) = XSHRPRIV(r) * ueprivev(r) - dpavev(r);
   3354    
   3355   Equation PCONSEXPEV
   3356   # private consumption expenditure, for EV calc. #
   3357       (all,r,REG)
   3358       ypev(r) - yev(r) = -[ueprivev(r) - uelasev(r)] + dppriv(r);
   3359    
   3360   Equation GOVCONSEXPEV
   3361   # government consumption expenditure #
   3362   (all,r,REG)
   3363       ygev(r) - yev(r) = uelasev(r) + dpgov(r);
   3364    
   3365   Equation SAVINGEV
   3366   # saving #
   3367   (all,r,REG)
   3368       ysaveev(r) - yev(r) = uelasev(r) + dpsave(r);
   3369    
   3370   Equation SAVEUEV
   3371   # saving #
   3372   (all,r,REG)
   3373       qsaveev(r) = ysaveev(r);
   3374    
   3375   !<
   3376       Note that because psave doesn't change, qsaveev moves with ysaveev.
   3377   >!
   3378    
   3379   Coefficient (all,r,REG)
   3380       UTILELASEV(r)
   3381       # elasticity of cost of utility wrt utility, for EV calc. #;
   3382   Formula (initial) (all,r,REG)
   3383       UTILELASEV(r) = UTILELAS(r);
   3384   Update (all,r,REG)
   3385       UTILELASEV(r) = uelasev(r);
   3386    
   3387   Equation INCOME_EQUIV
   3388   # equivalent income #
   3389   (all,r,REG)
   3390       u(r)
   3391           = au(r)
   3392           + DPARPRIV(r) * loge(UTILPRIVEV(r)) * dppriv(r)
   3393           + DPARGOV(r) * loge(UTILGOVEV(r)) * dpgov(r)
   3394           + DPARSAVE(r) * loge(UTILSAVEEV(r)) * dpsave(r)
   3395           + [1.0 / UTILELASEV(r)] * [yev(r) - pop(r)];
   3396    
   3397    
   3398   !<
   3399       B-4. Equivalent Variation
   3400       -------------------------
   3401   >!
   3402    
   3403   Variable (change)(all,r,REG)
   3404       EV(r) # equivalent variation, $ US million #;
   3405   Equation EVREG
   3406   # regional EV (HT 67) #
   3407   (all,r,REG)
   3408       EV(r) = [INCOMEEV(r) / 100] * yev(r);
   3409    
   3410   Variable (change)
   3411       WEV # equivalent variation for the world #;
   3412   Equation EVWLD
   3413   # EV for the world (HT 68) #
   3414       WEV = sum(r,REG, EV(r));
   3415    
   3416    
   3417   !<
   3418       ------------------------
   3419       C. Welfare Decomposition
   3420       ------------------------
   3421       See GTAP Technical Paper No. 5 for derivation and interpretation.
   3422   >!
   3423    
   3424   Coefficient (all,r,REG)
   3425       EVSCALFACT(r) # equivalent variation scaling factor #;
   3426   Formula (all,r,REG)
   3427       EVSCALFACT(r) = [UTILELASEV(r) / UTILELAS(r)] * [INCOMEEV(r) / INCOME(r)];
   3428    
   3429   Coefficient (all,m,MARG_COMM)(all,s,REG)
   3430       VTMD(m,s) # aggregate value of svce m in shipments to s #;
   3431   Formula (all,m,MARG_COMM)(all,s,REG)
   3432       VTMD(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));
   3433    
   3434   Variable (linear,change)(all,r,REG)
   3435       EV_ALT(r) # regional EV computed in alternative way #;
   3436   Equation EV_DECOMPOSITION
   3437   # decomposition of Equivalent Variation #
   3438   (all,r,REG)
   3439       EV_ALT(r)
   3440           = -[0.01 * UTILELASEV(r) * INCOMEEV(r)]
   3441           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3442               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3443               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)]
   3444           + [0.01 * EVSCALFACT(r)]
   3445           * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
   3446               + sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3447                   ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
   3448               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3449                   IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)]))
   3450               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3451                   DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)]))
   3452               + sum(i,TRAD_COMM, IPTAX(i,r) * [qpm(i,r) - pop(r)])
   3453               + sum(i,TRAD_COMM, DPTAX(i,r) * [qpd(i,r) - pop(r)])
   3454               + sum(i,TRAD_COMM, IGTAX(i,r) * [qgm(i,r) - pop(r)])
   3455               + sum(i,TRAD_COMM, DGTAX(i,r) * [qgd(i,r) - pop(r)])
   3456               + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
   3457               + sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))
   3458               + sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
   3459               - VDEP(r) * [kb(r) - pop(r)]
   3460               + sum(i,PROD_COMM, VOA(i,r) * ao(i,r))
   3461               + sum(j,PROD_COMM, VVA(j,r) * ava(j,r))
   3462               + sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)))
   3463               + sum(j,PROD_COMM, sum(i,TRAD_COMM, VFA(i,j,r) * af(i,j,r)))
   3464               + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3465                   VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
   3466               + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))
   3467               + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   3468               + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
   3469               + NETINV(r) * pcgds(r)
   3470               - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * pfob(i,s,r)))
   3471               - sum(m,MARG_COMM, VTMD(m,r) * pt(m))
   3472               - SAVE(r) * psave(r)]
   3473           + 0.01 * INCOMEEV(r) * pop(r);
   3474    
   3475   Variable (linear,change)
   3476       WEV_ALT # expression for WEV computed in alternative way #;
   3477   Equation WORLDEV
   3478   # Equivalent Variation for the world #
   3479       WEV_ALT = sum(r,REG, EV_ALT(r));
   3480    
   3481   Variable (linear,change) (all,r,REG)
   3482       CNTdpar(r) # contribution to EV of change in distribution parameters #;
   3483   Equation CNT_WEV_dpar
   3484   (all,r,REG)
   3485       CNTdpar(r)
   3486           = -0.01 * UTILELASEV(r) * INCOMEEV(r)
   3487           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3488               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3489               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)];
   3490    
   3491   Variable (linear,change) (all,r,REG)
   3492       CNTpopr(r) # contribution to EV in region r of change in population #;
   3493   Equation CONT_EV_pop
   3494   (all,r,REG)
   3495       CNTpopr(r) = 0.01 * INCOMEEV(r) * pop(r);
   3496    
   3497   Variable (linear,change) (all,r,REG)
   3498       CNTqor(r) # contribution to EV in region r of output changes #;
   3499   Equation CONT_EV_qor
   3500   (all,r,REG)
   3501       CNTqor(r)
   3502           = sum(i,NSAV_COMM,
   3503               0.01 * EVSCALFACT(r) * PTAX(i,r) * [qo(i,r) - pop(r)]);
   3504    
   3505   Variable (linear,change) (all,i,NSAV_COMM)(all,r,REG)
   3506       CNTqoir(i,r)
   3507       # contribution to EV of changes in output of NSAV_COMM i in reg. r #;
   3508   Equation CONT_EV_qoir
   3509   (all,i,NSAV_COMM)(all,r,REG)
   3510       CNTqoir(i,r) = PTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qo(i,r) - pop(r)];
   3511    
   3512   Variable (linear,change) (all,r,REG)
   3513       CNTqfer(r)
   3514       # cont. to EV of changes in use of all ENDW_COMM in all ind. in reg. r #;
   3515   Equation CONT_EV_qfer
   3516   (all,r,REG)
   3517       CNTqfer(r)
   3518           = sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3519               ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]));
   3520    
   3521   Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
   3522       CNTqfeir(i,r)
   3523       # contribution to EV of changes in use of ENDW_COMM i in all ind. in r #;
   3524   Equation CONT_EV_qfeir
   3525   (all,i,ENDW_COMM)(all,r,REG)
   3526       CNTqfeir(i,r)
   3527           = sum(j,PROD_COMM,
   3528               ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]);
   3529    
   3530   Variable (linear,change) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3531       CNTqfeijr(i,j,r)
   3532       # cont. to EV of changes in use of ENDW_COMM i in ind. j of reg. r #;
   3533   Equation CONT_EV_qfeijr
   3534   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3535       CNTqfeijr(i,j,r)
   3536           = ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)];
   3537    
   3538   Variable (linear,change) (all,r,REG)
   3539       CNTqfmr(r)
   3540       # cont. to EV of changes in use of imported int. in all ind. in reg. r #;
   3541   Equation CONT_EV_qfmr
   3542   (all,r,REG)
   3543       CNTqfmr(r)
   3544           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3545               IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)]));
   3546    
   3547   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3548       CNTqfmir(i,r)
   3549       # cont. to EV of changes in use of imported int. i in all ind. in r #;
   3550   Equation CONT_EV_qfmir
   3551   (all,i,TRAD_COMM)(all,r,REG)
   3552       CNTqfmir(i,r)
   3553           = sum(j,PROD_COMM,
   3554               IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)]);
   3555    
   3556   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3557       CNTqfmijr(i,j,r)
   3558       # cont. to EV of changes in use of imported int. i in ind. j of reg. r #;
   3559   Equation CONT_EV_qfmijr
   3560   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3561       CNTqfmijr(i,j,r)
   3562           = IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)];
   3563    
   3564   Variable (linear,change) (all,r,REG)
   3565       CNTqfdr(r)
   3566       # cont. to EV of changes in use of domestic int. in all ind. in reg. r #;
   3567   Equation CONT_EV_qfdr
   3568   (all,r,REG)
   3569       CNTqfdr(r)
   3570           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3571               DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)]));
   3572    
   3573   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3574       CNTqfdir(i,r)
   3575       # contribution to EV of changes in use of domestic i in all ind. in r #;
   3576   Equation CONT_EV_qfdir
   3577   (all,i,TRAD_COMM)(all,r,REG)
   3578       CNTqfdir(i,r)
   3579           = sum(j,PROD_COMM,
   3580               DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)]);
   3581    
   3582   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3583       CNTqfdijr(i,j,r)
   3584       # cont. to EV of changes in use of domestic int. i in ind. j of reg. r #;
   3585   Equation CONT_EV_qfdijr
   3586   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3587       CNTqfdijr(i,j,r)
   3588           = DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)];
   3589    
   3590   Variable (linear,change) (all,r,REG)
   3591       CNTqpmr(r)
   3592       # contribution to EV of changes in consumption of imported goods in r #;
   3593   Equation CONT_EV_qpmr
   3594   (all,r,REG)
   3595       CNTqpmr(r)
   3596           = sum(i,TRAD_COMM,
   3597               IPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpm(i,r) - pop(r)]);
   3598    
   3599   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3600       CNTqpmir(i,r)
   3601       # cont. to EV of changes in consumption of imported good i in reg. r #;
   3602   Equation CONT_EV_qpmir
   3603   (all,i,TRAD_COMM)(all,r,REG)
   3604       CNTqpmir(i,r) = IPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpm(i,r) - pop(r)];
   3605    
   3606   Variable (linear,change) (all,r,REG)
   3607       CNTqpdr(r)
   3608       # contribution to EV of changes in consumption of domestic goods in r #;
   3609   Equation CONT_EV_qpdr
   3610   (all,r,REG)
   3611       CNTqpdr(r)
   3612           = sum(i,TRAD_COMM,
   3613               DPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpd(i,r) - pop(r)]);
   3614    
   3615   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3616       CNTqpdir(i,r)
   3617       # cont. to EV of changes in consumption of domestic good i in reg. r #;
   3618   Equation CONT_EV_qpdir
   3619   (all,i,TRAD_COMM)(all,r,REG)
   3620       CNTqpdir(i,r) = DPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpd(i,r) - pop(r)];
   3621    
   3622   Variable (linear,change) (all,r,REG)
   3623       CNTqgmr(r)
   3624       # cont. to EV of changes in gov't consumption of imports in reg. r #;
   3625   Equation CONT_EV_qgmr
   3626   (all,r,REG)
   3627       CNTqgmr(r)
   3628           = sum(i,TRAD_COMM,
   3629               IGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgm(i,r) - pop(r)]);
   3630    
   3631   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3632       CNTqgmir(i,r)
   3633       # cont. to EV of changes in gov't consumption of import i in reg. r #;
   3634   Equation CONT_EV_qgmir
   3635   (all,i,TRAD_COMM)(all,r,REG)
   3636       CNTqgmir(i,r) = IGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgm(i,r) - pop(r)];
   3637    
   3638   Variable (linear,change) (all,r,REG)
   3639       CNTqgdr(r)
   3640       # cont. to EV of changes in gov't consumption of domestics in reg. r #;
   3641   Equation CONT_EV_qgdr
   3642   (all,r,REG)
   3643       CNTqgdr(r)
   3644           = sum(i,TRAD_COMM,
   3645               DGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgd(i,r) - pop(r)]);
   3646    
   3647   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3648       CNTqgdir(i,r)
   3649       # cont. to EV of changes in gov't consumption of domestic i in reg. r #;
   3650   Equation CONT_EV_qgdir
   3651   (all,i,TRAD_COMM)(all,r,REG)
   3652       CNTqgdir(i,r) = DGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgd(i,r) - pop(r)];
   3653    
   3654   Variable (linear,change) (all,r,REG)
   3655       CNTqxsr(r)
   3656       # cont. to EV of changes in exports of all goods from SRCE r to all DEST #;
   3657   Equation CONT_EV_qxsr
   3658   (all,r,REG)
   3659       CNTqxsr(r)
   3660           = sum(i,TRAD_COMM, sum(s,REG,
   3661               XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)]));
   3662    
   3663   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3664       CNTqxsirs(i,r,s)
   3665       # cont. to EV of changes in exports of i from SRCE r to DEST s #;
   3666   Equation CONT_EV_qxsirs
   3667   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3668       CNTqxsirs(i,r,s)
   3669           = XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)];
   3670    
   3671   Variable (linear,change) (all,r,REG)
   3672       CNTqimr(r)
   3673       # cont. to EV of changes in imports of all goods from all SRCE to DEST r #;
   3674   Equation CONT_EV_qimr
   3675   (all,r,REG)
   3676       CNTqimr(r)
   3677           = sum(i,TRAD_COMM, sum(s,REG,
   3678               MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)]));
   3679    
   3680   Variable (linear,change) (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
   3681       CNTqimisr(i,s,r)
   3682       # cont. to EV of changes in imports of i from SRCE s to DEST r #;
   3683   Equation CONT_EV_qimisr
   3684   (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
   3685       CNTqimisr(i,s,r)
   3686           = MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)];
   3687    
   3688   Variable (linear,change) (all,r,REG)
   3689       CNTalleffr(r) # total contribution to regional EV of allocative effects #;
   3690   Equation CONT_EV_alleffr
   3691   (all,r,REG)
   3692       CNTalleffr(r)
   3693           = [0.01 * EVSCALFACT(r)]
   3694           * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
   3695               + sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3696                   ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
   3697               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3698                   IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)]))
   3699               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3700                   DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)]))
   3701               + sum(i,TRAD_COMM, IPTAX(i,r) * [qpm(i,r) - pop(r)])
   3702               + sum(i,TRAD_COMM, DPTAX(i,r) * [qpd(i,r) - pop(r)])
   3703               + sum(i,TRAD_COMM, IGTAX(i,r) * [qgm(i,r) - pop(r)])
   3704               + sum(i,TRAD_COMM, DGTAX(i,r) * [qgd(i,r) - pop(r)])
   3705               + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
   3706               + sum(i,TRAD_COMM, sum(s,REG,
   3707                   MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))];
   3708    
   3709   Variable (linear,change) (all,i,DEMD_COMM)(all,r,REG)
   3710       CNTalleffir(i,r)
   3711       # total contribution to regional EV of allocative effects #;
   3712   Equation CONT_EV_alleffir_E
   3713   (all,i,ENDW_COMM)(all,r,REG)
   3714       CNTalleffir(i,r)
   3715           = [0.01 * EVSCALFACT(r)]
   3716           * [PTAX(i,r) * [qo(i,r) - pop(r)]
   3717               + sum(j,PROD_COMM, ETAX(i,j,r) * [qfe(i,j,r) - pop(r)])];
   3718   Equation CONT_EV_alleffir_T
   3719   (all,i,TRAD_COMM)(all,r,REG)
   3720       CNTalleffir(i,r)
   3721           = [0.01 * EVSCALFACT(r)]
   3722           * [PTAX(i,r) * [qo(i,r) - pop(r)]
   3723               + sum(j,PROD_COMM, IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)])
   3724               + sum(j,PROD_COMM, DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)])
   3725               + IPTAX(i,r) * [qpm(i,r) - pop(r)]
   3726               + DPTAX(i,r) * [qpd(i,r) - pop(r)]
   3727               + IGTAX(i,r) * [qgm(i,r) - pop(r)]
   3728               + DGTAX(i,r) * [qgd(i,r) - pop(r)]
   3729               + sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)])
   3730               + sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)])];
   3731    
   3732   Variable (linear,change) (all,r,REG)
   3733       CNTtotr(r)
   3734       # contribution to regional EV of changes in its terms of trade #;
   3735   Equation CONT_EV_totr
   3736   (all,r,REG)
   3737       CNTtotr(r)
   3738           = [0.01 * EVSCALFACT(r)]
   3739           * [sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [pfob(i,r,s) - pxwwld]))
   3740               + sum(m,MARG_COMM, VST(m,r) * [pm(m,r) - pxwwld])
   3741               - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * [pfob(i,s,r) - pxwwld]))
   3742               - sum(m,MARG_COMM, VTMD(m,r) * [pt(m) - pxwwld])];
   3743    
   3744   Variable (linear,change) (all,r,REG)
   3745       CNTcgdsr(r) # contribution to regional EV of changes in the price of cgds #;
   3746   Equation CNT_EV_cgdsr
   3747   (all,r,REG)
   3748       CNTcgdsr(r)
   3749           = [0.01 * EVSCALFACT(r)]
   3750           * [NETINV(r) * [pcgds(r) - pxwwld] - SAVE(r) * [psave(r) - pxwwld]];
   3751    
   3752   Variable (linear,change) (all,r,REG)
   3753       CNTendwr(r) # contribution to regional EV of changes in all ENDW_COMM #;
   3754   Equation CONT_EV_endwr
   3755   (all,r,REG)
   3756       CNTendwr(r)
   3757           = [0.01 * EVSCALFACT(r)]
   3758           * [sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
   3759               - VDEP(r) * [kb(r) - pop(r)]];
   3760    
   3761   Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
   3762       CNTendwir(i,r) # contribution to regional EV of changes in ENDW_COMM i #;
   3763   Equation CONT_EV_endwir
   3764   (all,i,ENDW_COMM)(all,r,REG)
   3765       CNTendwir(i,r) = [0.01 * EVSCALFACT(r)] * [VOA(i,r) * [qo(i,r) - pop(r)]];
   3766    
   3767   Variable (linear,change) (all,r,REG)
   3768       CNTtechr(r) # contribution to regional EV of all technical change #;
   3769   Equation CONT_EV_techr
   3770   (all,r,REG)
   3771       CNTtechr(r)
   3772           = [0.01 * EVSCALFACT(r)]
   3773           * [sum(i,PROD_COMM, VOA(i,r) * ao(i,r))
   3774               + sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)))
   3775               + sum(j,PROD_COMM, VVA(j,r) * ava(j,r))
   3776               + sum(j,PROD_COMM, sum(i,TRAD_COMM,
   3777                   [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r)))
   3778               + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3779                   VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
   3780               + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))];
   3781    
   3782   Variable (linear,change) (all,r,REG)
   3783       CNTtech_aor(r)
   3784       # contribution to regional EV of output augmenting technical change #;
   3785   Equation CONT_EV_tech_aor
   3786   (all,r,REG)
   3787       CNTtech_aor(r)
   3788           = [0.01 * EVSCALFACT(r)] * sum(i,PROD_COMM, VOA(i,r) * ao(i,r));
   3789    
   3790   Variable (linear,change) (all,i,PROD_COMM)(all,r,REG)
   3791       CNTtech_aoir(i,r)
   3792       # cont. to regional EV of output augmenting tech change in TRAD_COMM i #;
   3793   Equation CONT_EV_tech_aoir
   3794   (all,i,PROD_COMM)(all,r,REG)
   3795       CNTtech_aoir(i,r) = [0.01 * EVSCALFACT(r)] * VOA(i,r) * ao(i,r);
   3796    
   3797   Variable (linear,change) (all,r,REG)
   3798       CNTtech_afer(r)
   3799       # contribution to regional EV of primary factor augmenting tech change #;
   3800   Equation CONT_EV_tech_afer
   3801   (all,r,REG)
   3802       CNTtech_afer(r)
   3803           = [0.01 * EVSCALFACT(r)]
   3804           * sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)));
   3805    
   3806   Variable (linear,change) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3807       CNTtech_afeijr(i,j,r)
   3808       # cont. to EV of primary factor i augmenting tech change in sector j #;
   3809   Equation CONT_EV_tech_afeijr
   3810   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3811       CNTtech_afeijr(i,j,r) = [0.01 * EVSCALFACT(r)] * VFA(i,j,r) * afe(i,j,r);
   3812    
   3813   Variable (linear,change) (all,r,REG)
   3814       CNTtech_avar(r)
   3815       # contribution to regional EV of value added augmenting tech change #;
   3816   Equation CONT_EV_tech_avar
   3817   (all,r,REG)
   3818       CNTtech_avar(r)
   3819           = [0.01 * EVSCALFACT(r)] * sum(j,PROD_COMM, VVA(j,r) * ava(j,r));
   3820    
   3821   Variable (linear,change) (all,j,PROD_COMM)(all,r,REG)
   3822       CNTtech_avajr(j,r)
   3823       # cont. to EV of value added augmenting tech change in sector j #;
   3824   Equation CONT_EV_tech_avajr
   3825   (all,j,PROD_COMM)(all,r,REG)
   3826       CNTtech_avajr(j,r) = [0.01 * EVSCALFACT(r)] * VVA(j,r) * ava(j,r);
   3827    
   3828   Variable (linear,change) (all,r,REG)
   3829       CNTtech_afr(r)
   3830       # cont. to regional EV of comp. int. input augmenting tech change #;
   3831   Equation CONT_EV_tech_afr
   3832   (all,r,REG)
   3833       CNTtech_afr(r)
   3834           = [0.01 * EVSCALFACT(r)]
   3835           * sum(j,PROD_COMM, sum(i,TRAD_COMM,
   3836               [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r)));
   3837    
   3838   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3839       CNTtech_afijr(i,j,r)
   3840       # cont. to EV of composite i input augmenting tech change in sector j #;
   3841   Equation CONT_EV_tech_afijr
   3842   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3843       CNTtech_afijr(i,j,r)
   3844           = [0.01 * EVSCALFACT(r)] * [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r);
   3845    
   3846   Variable (linear,change) (all,r,REG)
   3847       CNTtech_atrr(r)
   3848       # contribution to regional EV of technical change in transportation #;
   3849   Equation CONT_EV_tech_atrr
   3850   (all,r,REG)
   3851       CNTtech_atrr(r)
   3852           = [0.01 * EVSCALFACT(r)]
   3853           * sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3854               VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))));
   3855    
   3856   Variable (linear,change)(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3857       CNTtech_afmfdsd(m,i,r,s)
   3858       # cont. to EV of tech change in transportation efficiency #;
   3859   Equation CONT_EV_tech_afmfdsd
   3860   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3861       CNTtech_afmfdsd(m,i,r,s)
   3862           = [0.01 * EVSCALFACT(s)] * VTMFSD(m,i,r,s) * atmfsd(m,i,r,s);
   3863    
   3864   Variable (linear,change)(all,r,REG)
   3865       CNTtech_amsr(r) # cont. to EV of bilateral import-augmenting tech change #;
   3866   Equation CONT_EV_tech_amsr
   3867   (all,r,REG)
   3868       CNTtech_amsr(r)
   3869           = [0.01 * EVSCALFACT(r)]
   3870           * sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)));
   3871    
   3872   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3873       CNTtech_amsirs(i,r,s)
   3874    # cont. to EV of bilateral import augmenting tech change for TRAD_COMM i #;
   3875   Equation CONT_EV_tech_amsirs
   3876   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3877       CNTtech_amsirs(i,r,s) = [0.01 * EVSCALFACT(r)] * VIMS(i,r,s) * ams(i,r,s);
   3878    
   3879   Variable (linear,change) (all,r,REG)
   3880       CNTkbr(r)
   3881       # cont. to EV of changes to beg. period capital stock and depreciation #;
   3882   Equation CONT_EV_kbr
   3883   (all,r,REG)
   3884       CNTkbr(r) = - [0.01 * EVSCALFACT(r)] * VDEP(r) * [kb(r) - pop(r)];
   3885    
   3886    
   3887   !<
   3888       -------------------------------
   3889       D. Terms of Trade Decomposition
   3890       -------------------------------
   3891    
   3892       Computations for decomposition the terms-of-trade effect
   3893       Reference: Robert McDougall, SALTER No. 12 Working Paper
   3894   >!
   3895    
   3896   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3897       SX_IR(i,r) # share of good i in total exports from r #;
   3898   Formula (all,m,MARG_COMM)(all,r,REG)
   3899       SX_IR(m,r)
   3900           = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
   3901           / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
   3902               + sum(l,MARG_COMM, VST(l,r))];
   3903   Formula (all,i,NMRG_COMM)(all,r,REG)
   3904       SX_IR(i,r)
   3905           = sum(s,REG, VXWD(i,r,s))
   3906           / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
   3907               + sum(l,MARG_COMM, VST(l,r))];
   3908    
   3909   Coefficient (all,m,MARG_COMM)(all,s,REG)
   3910       VTICOMM(m,s) # margin usage of m in getting imports to region s #;
   3911   Formula (all,m,MARG_COMM)(all,s,REG)
   3912       VTICOMM(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));
   3913    
   3914   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   3915       VIWDIRALL(i,s) # imports of i into s, with direct allocation of margins #;
   3916   Formula (all,m,MARG_COMM)(all,s,REG)
   3917       VIWDIRALL(m,s) = sum(r,REG, VXWD(m,r,s)) + VTICOMM(m,s);
   3918   Formula (all,i,NMRG_COMM)(all,s,REG)
   3919       VIWDIRALL(i,s) = sum(r,REG, VXWD(i,r,s));
   3920    
   3921   Coefficient (all,s,REG)
   3922       VIWDATOT(s) # total imports into s, calculated on direct allocation basis #;
   3923   Formula (all,s,REG)
   3924       VIWDATOT(s) = sum(i,TRAD_COMM, VIWDIRALL(i,s));
   3925    
   3926   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3927       SM_IR(i,r)  # share of good i in total imports into r #;
   3928   Formula (all,i,TRAD_COMM)(all,s,REG)
   3929       SM_IR(i,s) = VIWDIRALL(i,s) / VIWDATOT(s);
   3930    
   3931   Zerodivide (zero_by_zero) default 0;
   3932   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3933       SX_IRS(i,r,s) # share of exports of good i from region r to s #;
   3934   Formula (all,m,MARG_COMM)(all,r,REG)(all,s,REG)
   3935       SX_IRS(m,r,s) = VXWD(m,r,s) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
   3936   Formula (all,i,NMRG_COMM)(all,r,REG)(all,s,REG)
   3937       SX_IRS(i,r,s) = VXWD(i,r,s) / sum(k,REG, VXWD(i,r,k));
   3938   Zerodivide (zero_by_zero) off;
   3939    
   3940   Coefficient (all,m,MARG_COMM)(all,r,REG)
   3941       SXT_IR(m,r) # share of margins in exports of good i from region r #;
   3942   Formula (all,m,MARG_COMM)(all,r,REG)
   3943       SXT_IR(m,r) = VST(m,r) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
   3944    
   3945   Variable (all,i,TRAD_COMM)(all,r,REG)
   3946       px_ir(i,r) # export price index for good i and region r #;
   3947   Equation EXPPRICE_MARG
   3948   # price index for total exports of m from r #
   3949   (all,m,MARG_COMM)(all,r,REG)
   3950       px_ir(m,r)
   3951           = sum(s,REG, SX_IRS(m,r,s) * pfob(m,r,s)) + SXT_IR(m,r) * pm(m,r);
   3952   Equation EXPPRICE_NMRG
   3953   # price index for total exports of i from r #
   3954   (all,i,NMRG_COMM)(all,r,REG)
   3955       px_ir(i,r) = sum(s,REG, SX_IRS(i,r,s) * pfob(i,r,s));
   3956    
   3957   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3958       SM_IRS(i,r,s) # share of imports of good i into s from r at FOB prices #;
   3959   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3960       SM_IRS(i,r,s) = VXWD(i,r,s) / VIWDIRALL(i,s);
   3961    
   3962   Coefficient (all,m,MARG_COMM)(all,r,REG)
   3963       SMT_IR(m,r) # share of transport cost in imports of margin commodity #;
   3964   Formula (all,m,MARG_COMM)(all,s,REG)
   3965       SMT_IR(m,s) = VTICOMM(m,s) / VIWDIRALL(m,s);
   3966    
   3967   Variable (all,i,TRAD_COMM)(all,r,REG)
   3968       pm_ir(i,r) # imports price index for good i and region r #;
   3969   Equation IMPPRICE1_MARG
   3970   # price index for total imports of m in s -- margins commodities #
   3971   (all,m,MARG_COMM)(all,s,REG)
   3972       pm_ir(m,s)
   3973           = sum(r,REG, SM_IRS(m,r,s) * pfob(m,r,s)) + SMT_IR(m,s) * pt(m);
   3974   Equation IMPPRICE1_NMRG
   3975   # price index for total imports of i in s -- non-margins commodities #
   3976   (all,i,NMRG_COMM)(all,s,REG)
   3977       pm_ir(i,s) = sum(r,REG, SM_IRS(i,r,s) * pfob(i,r,s));
   3978    
   3979   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3980       SW_IR(i,r) # share of region r exports in world total for good i #;
   3981   Formula (all,m,MARG_COMM)(all,r,REG)
   3982       SW_IR(m,r)
   3983           = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
   3984           / sum(k,REG, sum(s,REG, VXWD(m,k,s)) + VST(m,k));
   3985   Formula (all,i,NMRG_COMM)(all,r,REG)
   3986       SW_IR(i,r)
   3987           = sum(s,REG, VXWD(i,r,s)) / sum(k,REG, sum(s,REG, VXWD(i,k,s)));
   3988    
   3989   Variable (all,i,TRAD_COMM)
   3990       px_i(i) # world export price index for commodity i #;
   3991   Equation WRLDPRICEi
   3992   # world export price index for good i #
   3993   (all,i,TRAD_COMM)
   3994       px_i(i) = sum(r,REG, SW_IR(i,r) * px_ir(i,r));
   3995    
   3996   Coefficient (all,i,TRAD_COMM)
   3997       SW_I(i) # share of exports of i in world total #;
   3998   Formula (all,m,MARG_COMM)
   3999       SW_I(m)
   4000           = sum(r,REG, sum(s,REG, VXWD(m,r,s)) + VST(m,r))
   4001           / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
   4002               + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
   4003   Formula (all,i,NMRG_COMM)
   4004       SW_I(i)
   4005           = sum(r,REG, sum(s,REG, VXWD(i,r,s)))
   4006           / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
   4007               + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
   4008    
   4009   Variable
   4010       px_ # world export price index for all commodities #;
   4011   Equation WRLDPRICE
   4012   # world export price index for all goods #
   4013       px_ = sum(i,TRAD_COMM, SW_I(i) * px_i(i));
   4014    
   4015   Variable (all,i,TRAD_COMM)(all,r,REG)
   4016       c1_ir(i,r) # contribution of world price, px_i, to ToT #;
   4017   Equation c1_irEQ
   4018   # contribution of world export price index of good i to ToT for region r #
   4019   (all,i,TRAD_COMM)(all,r,REG)
   4020       c1_ir(i,r) = [SX_IR(i,r) - SM_IR(i,r)] * [px_i(i) - px_];
   4021    
   4022   Variable (all,i,TRAD_COMM)(all,r,REG)
   4023       c2_ir(i,r) # contribution of regional export price, px_ir, to ToT #;
   4024   Equation c2_irEQ
   4025   # contribution of regional export price of good i for region r #
   4026   (all,i,TRAD_COMM)(all,r,REG)
   4027       c2_ir(i,r) = SX_IR(i,r) * [px_ir(i,r) - px_i(i)];
   4028    
   4029   Variable (all,i,TRAD_COMM)(all,r,REG)
   4030       c3_ir(i,r) # contribution of regional import price, pm_ir, to ToT #;
   4031   Equation c3_irEQ
   4032   # contribution of imports price index of good i for region r #
   4033   (all,i,TRAD_COMM)(all,r,REG)
   4034       c3_ir(i,r) = SM_IR(i,r) * [pm_ir(i,r) - px_i(i)];
   4035    
   4036   Variable (all,r,REG)
   4037       c1_r(r) # contribution of world prices for all goods to ToT #;
   4038   Equation c1_rEQ
   4039   # contribution of world price indexes of all goods to ToT for r #
   4040   (all,r,REG)
   4041       c1_r(r) = sum(i,TRAD_COMM, c1_ir(i,r));
   4042    
   4043   Variable (all,r,REG)
   4044       c2_r(r) # contribution of regional export prices to ToT #;
   4045   Equation c2_rEQ
   4046   # contribution of regional exports prices to ToT for r #
   4047   (all,r,REG)
   4048       c2_r(r) = sum(i,TRAD_COMM, c2_ir(i,r));
   4049    
   4050   Variable (all,r,REG)
   4051       c3_r(r) # contribution of regional import prices to ToT #;
   4052   Equation c3_rEQ
   4053   # contribution of regional import prices to ToT for r #
   4054   (all,r,REG)
   4055       c3_r(r) = sum(i,TRAD_COMM, c3_ir(i,r));
   4056    
   4057   Variable (all,r,REG)
   4058       tot2(r) # trade terms for region r, computed from components #;
   4059   Equation TOT2eq
   4060   # trade terms for region r, computed from components #
   4061   (all,r,REG)
   4062       tot2(r) = c1_r(r) + c2_r(r) - c3_r(r);
   4063    
   4064    
   4065   !
   4066   Variable (change)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4067    delMTAX(i,r,s) # change in tariff rev #;
   4068   Equation E_delMTAX (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   4069    delMTAX(i,r,s) = 0.01*[VIMS(i,r,s)*{pms(i,r,s) +qxs(i,r,s)}]
   4070                   - 0.01*[VIWS(i,r,s)*{pcif(i,r,s)+qxs(i,r,s)}];
   4071   BackSolve delMTAX using E_delMTAX;
   4072   !
   4073    
   4074    
   4075   !<
   4076       ====================
   4077       END OF GTAP.TAB FILE
   4078       ====================
   4079   >!




 ========================
 ++ INPUT STATEMENT TABLE
 ========================

          Starts   Syntax  Semantic
  Number  at line  Error?   Error?            Description
  ------------------------------------------------------------
     1       111     no       no      FILE 'GTAPSETS            '             
     2       113     no       no      FILE 'GTAPDATA            '             
     3       115     no       no      FILE 'GTAPPARM            '             
     4       154     no       no      COEFFICIENT 'VERNUM      '              
     5       156     no       no      READ into 'VERNUM      '                
     6       158     no       no      UPDATE of 'VERNUM      '                
     7       161     no       no      SET 'REG         '                      
     8       164     no       no      SET 'TRAD_COMM   '                      
     9       167     no       no      SET 'MARG_COMM   '                      
    10       170     no       no      SUBSET 'MARG_COMM   ' of 'TRAD_COMM   ' 
    11       172     no       no      SET 'NMRG_COMM   '                      
    12       172     no       no      SUBSET 'NMRG_COMM   ' of 'TRAD_COMM   ' 
    13       174     no       no      SET 'CGDS_COMM   '                      
    14       177     no       no      SET 'ENDW_COMM   '                      
    15       180     no       no      SET 'PROD_COMM   '                      
    16       180     no       no      SUBSET 'TRAD_COMM   ' of 'PROD_COMM   ' 
    17       180     no       no      SUBSET 'CGDS_COMM   ' of 'PROD_COMM   ' 
    18       182     no       no      SET 'DEMD_COMM   '                      
    19       182     no       no      SUBSET 'ENDW_COMM   ' of 'DEMD_COMM   ' 
    20       182     no       no      SUBSET 'TRAD_COMM   ' of 'DEMD_COMM   ' 
    21       184     no       no      SET 'NSAV_COMM   '                      
    22       184     no       no      SUBSET 'DEMD_COMM   ' of 'NSAV_COMM   ' 
    23       184     no       no      SUBSET 'CGDS_COMM   ' of 'NSAV_COMM   ' 
    24       186     no       no      SUBSET 'PROD_COMM   ' of 'NSAV_COMM   ' 
    25       194     no       no      COEFFICIENT 'SIZE_TRAD   '              
    26       196     no       no      Formula for "SIZE_TRAD"                 
    27       198     no       no      COEFFICIENT 'SIZE_ENDW   '              
    28       200     no       no      Formula for "SIZE_ENDW"                 
    29       202     no       no      COEFFICIENT 'SIZE_DEMD   '              
    30       204     no       no      Formula for "SIZE_DEMD"                 
    31       206     no       no      Assertion                               
    32       209     no       no      COEFFICIENT 'SIZE_CGDS   '              
    33       211     no       no      Formula for "SIZE_CGDS"                 
    34       213     no       no      COEFFICIENT 'SIZE_PROD   '              
    35       215     no       no      Formula for "SIZE_PROD"                 
    36       217     no       no      Assertion                               
    37       226     no       no      COEFFICIENT 'SLUG        '              
    38       228     no       no      READ into 'SLUG        '                
    39       231     no       no      SET 'ENDWS_COMM  '                      
    40       231     no       no      Formula for Set "ENDWS_COMM"            
    41       231     no       no      SUBSET 'ENDWS_COMM  ' of 'ENDW_COMM   ' 
    42       234     no       no      SET 'ENDWM_COMM  '                      
    43       234     no       no      SUBSET 'ENDWM_COMM  ' of 'ENDW_COMM   ' 
    44       237     no       no      SET 'ENDWC_COMM  '                      
    45       242     no       no      SUBSET 'ENDWC_COMM  ' of 'ENDW_COMM   ' 
    46       287     no       no      VARIABLE 'psave          '              
    47       289     no       no      VARIABLE 'qsave          '              
    48       291     no       no      COEFFICIENT 'SAVE        '              
    49       293     no       no      UPDATE of 'SAVE        '                
    50       295     no       no      READ into 'SAVE        '                
    51       304     no       no      VARIABLE 'pgd            '              
    52       306     no       no      VARIABLE 'qgd            '              
    53       308     no       no      COEFFICIENT 'VDGA        '              
    54       310     no       no      UPDATE of 'VDGA        '                
    55       312     no       no      READ into 'VDGA        '                
    56       315     no       no      VARIABLE 'pm             '              
    57       317     no       no      COEFFICIENT 'VDGM        '              
    58       319     no       no      UPDATE of 'VDGM        '                
    59       321     no       no      READ into 'VDGM        '                
    60       324     no       no      VARIABLE 'pgm            '              
    61       326     no       no      VARIABLE 'qgm            '              
    62       328     no       no      COEFFICIENT 'VIGA        '              
    63       330     no       no      UPDATE of 'VIGA        '                
    64       332     no       no      READ into 'VIGA        '                
    65       335     no       no      VARIABLE 'pim            '              
    66       337     no       no      COEFFICIENT 'VIGM        '              
    67       339     no       no      UPDATE of 'VIGM        '                
    68       341     no       no      READ into 'VIGM        '                
    69       350     no       no      VARIABLE 'ppd            '              
    70       352     no       no      VARIABLE 'qpd            '              
    71       354     no       no      COEFFICIENT 'VDPA        '              
    72       356     no       no      UPDATE of 'VDPA        '                
    73       358     no       no      READ into 'VDPA        '                
    74       361     no       no      COEFFICIENT 'VDPM        '              
    75       363     no       no      UPDATE of 'VDPM        '                
    76       365     no       no      READ into 'VDPM        '                
    77       368     no       no      VARIABLE 'ppm            '              
    78       370     no       no      VARIABLE 'qpm            '              
    79       372     no       no      COEFFICIENT 'VIPA        '              
    80       374     no       no      UPDATE of 'VIPA        '                
    81       376     no       no      READ into 'VIPA        '                
    82       379     no       no      COEFFICIENT 'VIPM        '              
    83       381     no       no      UPDATE of 'VIPM        '                
    84       383     no       no      READ into 'VIPM        '                
    85       392     no       no      VARIABLE 'ps             '              
    86       394     no       no      VARIABLE 'qo             '              
    87       396     no       no      COEFFICIENT 'EVOA        '              
    88       398     no       no      UPDATE of 'EVOA        '                
    89       400     no       no      READ into 'EVOA        '                
    90       403     no       no      VARIABLE 'pfe            '              
    91       405     no       no      VARIABLE 'qfe            '              
    92       407     no       no      COEFFICIENT 'EVFA        '              
    93       409     no       no      UPDATE of 'EVFA        '                
    94       411     no       no      READ into 'EVFA        '                
    95       414     no       no      VARIABLE 'pfd            '              
    96       416     no       no      VARIABLE 'qfd            '              
    97       418     no       no      COEFFICIENT 'VDFA        '              
    98       420     no       no      UPDATE of 'VDFA        '                
    99       422     no       no      READ into 'VDFA        '                
   100       425     no       no      VARIABLE 'pfm            '              
   101       427     no       no      VARIABLE 'qfm            '              
   102       429     no       no      COEFFICIENT 'VIFA        '              
   103       431     no       no      UPDATE of 'VIFA        '                
   104       433     no       no      READ into 'VIFA        '                
   105       436     no       no      VARIABLE 'pmes           '              
   106       438     no       no      COEFFICIENT 'VFM         '              
   107       440     no       no      UPDATE of 'VFM         '                
   108       442     no       no      UPDATE of 'VFM         '                
   109       444     no       no      READ into 'VFM         '                
   110       447     no       no      COEFFICIENT 'VIFM        '              
   111       449     no       no      UPDATE of 'VIFM        '                
   112       451     no       no      READ into 'VIFM        '                
   113       454     no       no      COEFFICIENT 'VDFM        '              
   114       456     no       no      UPDATE of 'VDFM        '                
   115       458     no       no      READ into 'VDFM        '                
   116       467     no       no      VARIABLE 'kb             '              
   117       469     no       no      VARIABLE 'pcgds          '              
   118       471     no       no      COEFFICIENT 'VDEP        '              
   119       473     no       no      UPDATE of 'VDEP        '                
   120       475     no       no      READ into 'VDEP        '                
   121       488     no       no      VARIABLE 'pms            '              
   122       490     no       no      VARIABLE 'qxs            '              
   123       492     no       no      COEFFICIENT 'VIMS        '              
   124       494     no       no      UPDATE of 'VIMS        '                
   125       496     no       no      READ into 'VIMS        '                
   126       499     no       no      VARIABLE 'pcif           '              
   127       501     no       no      COEFFICIENT 'VIWS        '              
   128       503     no       no      UPDATE of 'VIWS        '                
   129       505     no       no      READ into 'VIWS        '                
   130       508     no       no      VARIABLE 'pfob           '              
   131       510     no       no      COEFFICIENT 'VXWD        '              
   132       512     no       no      UPDATE of 'VXWD        '                
   133       514     no       no      READ into 'VXWD        '                
   134       517     no       no      COEFFICIENT 'VXMD        '              
   135       520     no       no      UPDATE of 'VXMD        '                
   136       522     no       no      READ into 'VXMD        '                
   137       525     no       no      VARIABLE 'qst            '              
   138       527     no       no      COEFFICIENT 'VST         '              
   139       530     no       no      UPDATE of 'VST         '                
   140       532     no       no      READ into 'VST         '                
   141       548     no       no      VARIABLE 'y              '              
   142       550     no       no      VARIABLE 'pop            '              
   143       552     no       no      VARIABLE 'qoes           '              
   144       554     no       no      VARIABLE 'endwslack      '              
   145       561     no       no      VARIABLE 'pgov           '              
   146       563     no       no      VARIABLE 'yg             '              
   147       566     no       no      VARIABLE 'ug             '              
   148       568     no       no      VARIABLE 'ppriv          '              
   149       571     no       no      VARIABLE 'uepriv         '              
   150       574     no       no      VARIABLE 'yp             '              
   151       576     no       no      VARIABLE 'up             '              
   152       578     no       no      VARIABLE 'to             '              
   153       585     no       no      VARIABLE 'qim            '              
   154       587     no       no      VARIABLE 'globalcgds     '              
   155       589     no       no      VARIABLE 'pcgdswld       '              
   156       611     no       no      VARIABLE 'del_taxrgc     '              
   157       613     no       no      VARIABLE 'del_taxrpc     '              
   158       615     no       no      VARIABLE 'del_taxriu     '              
   159       617     no       no      VARIABLE 'del_taxrfu     '              
   160       619     no       no      VARIABLE 'del_taxrout    '              
   161       621     no       no      VARIABLE 'del_taxrexp    '              
   162       623     no       no      VARIABLE 'del_taxrimp    '              
   163       625     no       no      VARIABLE 'del_taxrinc    '              
   164       650     no       no      COEFFICIENT 'VFA         '              
   165       652     no       no      Formula for "VFA"                       
   166       654     no       no      Formula for "VFA"                       
   167       657     no       no      COEFFICIENT 'VOA         '              
   168       659     no       no      Formula for "VOA"                       
   169       661     no       no      Formula for "VOA"                       
   170       664     no       no      COEFFICIENT 'VDM         '              
   171       666     no       no      Formula for "VDM"                       
   172       669     no       no      COEFFICIENT 'VOM         '              
   173       671     no       no      Formula for "VOM"                       
   174       673     no       no      Formula for "VOM"                       
   175       675     no       no      Formula for "VOM"                       
   176       677     no       no      Formula for "VOM"                       
   177       713     no       no      COEFFICIENT 'VGA         '              
   178       715     no       no      Formula for "VGA"                       
   179       717     no       no      COEFFICIENT 'GOVEXP      '              
   180       719     no       no      Formula for "GOVEXP"                    
   181       723     no       no      COEFFICIENT 'VPA         '              
   182       725     no       no      Formula for "VPA"                       
   183       727     no       no      COEFFICIENT 'PRIVEXP     '              
   184       729     no       no      Formula for "PRIVEXP"                   
   185       733     no       no      COEFFICIENT 'INCOME      '              
   186       735     no       no      Formula for "INCOME"                    
   187       744     no       no      COEFFICIENT 'DGTAX       '              
   188       746     no       no      Formula for "DGTAX"                     
   189       748     no       no      COEFFICIENT 'IGTAX       '              
   190       750     no       no      Formula for "IGTAX"                     
   191       752     no       no      COEFFICIENT 'TGC         '              
   192       754     no       no      Formula for "TGC"                       
   193       757     no       no      COEFFICIENT 'DPTAX       '              
   194       759     no       no      Formula for "DPTAX"                     
   195       761     no       no      COEFFICIENT 'IPTAX       '              
   196       763     no       no      Formula for "IPTAX"                     
   197       765     no       no      COEFFICIENT 'TPC         '              
   198       767     no       no      Formula for "TPC"                       
   199       770     no       no      COEFFICIENT 'DFTAX       '              
   200       772     no       no      Formula for "DFTAX"                     
   201       774     no       no      COEFFICIENT 'IFTAX       '              
   202       776     no       no      Formula for "IFTAX"                     
   203       778     no       no      COEFFICIENT 'TIU         '              
   204       780     no       no      Formula for "TIU"                       
   205       783     no       no      COEFFICIENT 'ETAX        '              
   206       785     no       no      Formula for "ETAX"                      
   207       787     no       no      COEFFICIENT 'TFU         '              
   208       789     no       no      Formula for "TFU"                       
   209       792     no       no      COEFFICIENT 'PTAX        '              
   210       794     no       no      Formula for "PTAX"                      
   211       796     no       no      COEFFICIENT 'TOUT        '              
   212       798     no       no      Formula for "TOUT"                      
   213       801     no       no      COEFFICIENT 'XTAXD       '              
   214       803     no       no      Formula for "XTAXD"                     
   215       805     no       no      COEFFICIENT 'TEX         '              
   216       807     no       no      Formula for "TEX"                       
   217       810     no       no      COEFFICIENT 'MTAX        '              
   218       812     no       no      Formula for "MTAX"                      
   219       814     no       no      COEFFICIENT 'TIM         '              
   220       816     no       no      Formula for "TIM"                       
   221       826     no       no      COEFFICIENT 'ESUBD       '              
   222       829     no       no      READ into 'ESUBD       '                
   223       833     no       no      COEFFICIENT 'REGINV      '              
   224       835     no       no      Formula for "REGINV"                    
   225       837     no       no      COEFFICIENT 'NETINV      '              
   226       839     no       no      Formula for "NETINV"                    
   227       841     no       no      COEFFICIENT 'GLOBINV     '              
   228       843     no       no      Formula for "GLOBINV"                   
   229       847     no       no      COEFFICIENT 'CONSHR      '              
   230       849     no       no      Formula for "CONSHR"                    
   231       851     no       no      COEFFICIENT 'INCPAR      '              
   232       854     no       no      READ into 'INCPAR      '                
   233       856     no       no      COEFFICIENT 'UELASPRIV   '              
   234       859     no       no      Formula for "UELASPRIV"                 
   235       897     no       no      VARIABLE 'pg             '              
   236       899     no       no      VARIABLE 'qg             '              
   237       908     no       no      EQUATION 'GPRICEINDEX         '         
   238       913     no       no      EQUATION 'GOVDMNDS            '         
   239       918     no       no      EQUATION 'GOVU                '         
   240       929     no       no      VARIABLE 'tgd            '              
   241       932     no       no      VARIABLE 'tgm            '              
   242       935     no       no      EQUATION 'GHHDPRICE           '         
   243       940     no       no      EQUATION 'GHHIPRICES          '         
   244       945     no       no      COEFFICIENT 'GMSHR       '              
   245       947     no       no      Formula for "GMSHR"                     
   246       950     no       no      EQUATION 'GCOMPRICE           '         
   247       955     no       no      EQUATION 'GHHLDAGRIMP         '         
   248       960     no       no      EQUATION 'GHHLDDOM            '         
   249       965     no       no      EQUATION 'TGCRATIO            '         
   250       994     no       no      VARIABLE 'pp             '              
   251       996     no       no      VARIABLE 'qp             '              
   252      1005     no       no      EQUATION 'PHHLDINDEX          '         
   253      1010     no       no      EQUATION 'PRIVATEU            '         
   254      1020     no       no      COEFFICIENT 'XWCONSHR    '              
   255      1023     no       no      Formula for "XWCONSHR"                  
   256      1026     no       no      EQUATION 'UTILELASPRIV        '         
   257      1038     no       no      COEFFICIENT 'SUBPAR      '              
   258      1041     no       no      READ into 'SUBPAR      '                
   259      1047     no       no      COEFFICIENT 'ALPHA       '              
   260      1049     no       no      Formula for "ALPHA"                     
   261      1052     no       no      COEFFICIENT 'APE         '              
   262      1054     no       no      Formula for "APE"                       
   263      1057     no       no      Formula for "APE"                       
   264      1063     no       no      COEFFICIENT 'EY          '              
   265      1065     no       no      Formula for "EY"                        
   266      1072     no       no      COEFFICIENT 'EP          '              
   267      1075     no       no      Formula for "EP"                        
   268      1077     no       no      Formula for "EP"                        
   269      1080     no       no      EQUATION 'PRIVDMNDS           '         
   270      1097     no       no      VARIABLE 'tp             '              
   271      1105     no       no      COEFFICIENT 'LevTPD      '              
   272      1106     no       no      ZERODIVIDE instruction                  
   273      1107     no       no      Formula for "LevTPD"                    
   274      1108     no       no      ZERODIVIDE instruction                  
   275      1109     no       no      VARIABLE 'tpd            '              
   276      1111     no       no      VARIABLE 'atpd           '              
   277      1113     no       no      EQUATION 'TPDSHIFT            '         
   278      1118     no       no      EQUATION 'PHHDPRICE           '         
   279      1123     no       no      VARIABLE 'tpm            '              
   280      1125     no       no      VARIABLE 'atpm           '              
   281      1127     no       no      EQUATION 'TPMSHIFT            '         
   282      1132     no       no      EQUATION 'PHHIPRICES          '         
   283      1137     no       no      EQUATION 'TPCRATIO            '         
   284      1146     no       no      COEFFICIENT 'PMSHR       '              
   285      1148     no       no      Formula for "PMSHR"                     
   286      1151     no       no      EQUATION 'PCOMPRICE           '         
   287      1156     no       no      EQUATION 'PHHLDDOM            '         
   288      1161     no       no      EQUATION 'PHHLDAGRIMP         '         
   289      1213     no       no      VARIABLE 'pva            '              
   290      1215     no       no      VARIABLE 'qva            '              
   291      1217     no       no      VARIABLE 'pf             '              
   292      1219     no       no      VARIABLE 'qf             '              
   293      1221     no       no      VARIABLE 'ao             '              
   294      1223     no       no      VARIABLE 'ava            '              
   295      1225     no       no      VARIABLE 'af             '              
   296      1227     no       no      VARIABLE 'afe            '              
   297      1229     no       no      VARIABLE 'ams            '              
   298      1238     no       no      VARIABLE 'aosec          '              
   299      1240     no       no      VARIABLE 'aoreg          '              
   300      1242     no       no      VARIABLE 'aoall          '              
   301      1244     no       no      EQUATION 'AOWORLD             '         
   302      1249     no       no      VARIABLE 'avasec         '              
   303      1251     no       no      VARIABLE 'avareg         '              
   304      1253     no       no      VARIABLE 'avaall         '              
   305      1255     no       no      EQUATION 'AVAWORLD            '         
   306      1260     no       no      COEFFICIENT 'ESUBT       '              
   307      1263     no       no      READ into 'ESUBT       '                
   308      1266     no       no      EQUATION 'VADEMAND            '         
   309      1277     no       no      VARIABLE 'afcom          '              
   310      1279     no       no      VARIABLE 'afsec          '              
   311      1281     no       no      VARIABLE 'afreg          '              
   312      1283     no       no      VARIABLE 'afall          '              
   313      1285     no       no      EQUATION 'AFWORLD             '         
   314      1290     no       no      EQUATION 'INTDEMAND           '         
   315      1307     no       no      VARIABLE 'tfd            '              
   316      1309     no       no      EQUATION 'DMNDDPRICE          '         
   317      1319     no       no      VARIABLE 'tfm            '              
   318      1321     no       no      EQUATION 'DMNDIPRICES         '         
   319      1331     no       no      EQUATION 'TIURATIO            '         
   320      1340     no       no      COEFFICIENT 'FMSHR       '              
   321      1342     no       no      Formula for "FMSHR"                     
   322      1344     no       no      EQUATION 'ICOMPRICE           '         
   323      1349     no       no      EQUATION 'INDIMP              '         
   324      1354     no       no      EQUATION 'INDDOM              '         
   325      1365     no       no      VARIABLE 'tf             '              
   326      1368     no       no      EQUATION 'MPFACTPRICE         '         
   327      1373     no       no      EQUATION 'SPFACTPRICE         '         
   328      1378     no       no      VARIABLE 'afecom         '              
   329      1380     no       no      VARIABLE 'afesec         '              
   330      1382     no       no      VARIABLE 'afereg         '              
   331      1384     no       no      VARIABLE 'afeall         '              
   332      1386     no       no      EQUATION 'AFEWORLD            '         
   333      1391     no       no      COEFFICIENT 'VVA         '              
   334      1393     no       no      Formula for "VVA"                       
   335      1395     no       no      COEFFICIENT 'SVADEFAULT  '              
   336      1397     no       no      Formula for "SVADEFAULT"                
   337      1401     no       no      COEFFICIENT 'SVA         '              
   338      1403     no       no      Formula for "SVA"                       
   339      1405     no       no      Formula for "SVA"                       
   340      1407     no       no      EQUATION 'VAPRICE             '         
   341      1412     no       no      EQUATION 'TFURATIO            '         
   342      1421     no       no      COEFFICIENT 'ESUBVA      '              
   343      1424     no       no      READ into 'ESUBVA      '                
   344      1427     no       no      EQUATION 'ENDWDEMAND          '         
   345      1440     no       no      EQUATION 'OUTPUTPRICES        '         
   346      1450     no       no      EQUATION 'TOUTRATIO           '         
   347      1457     no       no      VARIABLE 'profitslack    '              
   348      1463     no       no      COEFFICIENT 'STC         '              
   349      1465     no       no      Formula for "STC"                       
   350      1468     no       no      EQUATION 'ZEROPROFITS         '         
   351      1508     no       no      VARIABLE 'rental         '              
   352      1510     no       no      VARIABLE 'ke             '              
   353      1512     no       no      VARIABLE 'rore           '              
   354      1514     no       no      VARIABLE 'rorc           '              
   355      1516     no       no      VARIABLE 'qcgds          '              
   356      1525     no       no      VARIABLE 'ksvces         '              
   357      1527     no       no      EQUATION 'KAPSVCES            '         
   358      1537     no       no      EQUATION 'KAPRENTAL           '         
   359      1543     no       no      EQUATION 'CAPGOODS            '         
   360      1553     no       no      EQUATION 'PRCGOODS            '         
   361      1558     no       no      EQUATION 'KBEGINNING          '         
   362      1567     no       no      COEFFICIENT 'VKB         '              
   363      1569     no       no      UPDATE of 'VKB         '                
   364      1571     no       no      READ into 'VKB         '                
   365      1579     no       no      COEFFICIENT 'INVKERATIO  '              
   366      1582     no       no      Formula for "INVKERATIO"                
   367      1585     no       no      EQUATION 'KEND                '         
   368      1596     no       no      COEFFICIENT 'GRNETRATIO  '              
   369      1598     no       no      Formula for "GRNETRATIO"                
   370      1605     no       no      EQUATION 'RORCURRENT          '         
   371      1610     no       no      COEFFICIENT 'RORFLEX     '              
   372      1613     no       no      READ into 'RORFLEX     '                
   373      1624     no       no      EQUATION 'ROREXPECTED         '         
   374      1637     no       no      VARIABLE 'EXPAND         '              
   375      1639     no       no      EQUATION 'BALDWIN             '         
   376      1650     no       no      COEFFICIENT 'RORDELTA    '              
   377      1653     no       no      READ into 'RORDELTA    '                
   378      1664     no       no      VARIABLE 'rorg           '              
   379      1666     no       no      VARIABLE 'cgdslack       '              
   380      1673     no       no      EQUATION 'RORGLOBAL           '         
   381      1686     no       no      EQUATION 'GLOBALINV           '         
   382      1705     no       no      EQUATION 'PRICGDS             '         
   383      1715     no       no      VARIABLE 'psaveslack     '              
   384      1725     no       no      EQUATION 'SAVEPRICE           '         
   385      1755     no       no      VARIABLE 'tx             '              
   386      1757     no       no      VARIABLE 'txs            '              
   387      1767     no       no      EQUATION 'EXPRICES            '         
   388      1772     no       no      EQUATION 'TEXPRATIO           '         
   389      1788     no       no      VARIABLE 'tm             '              
   390      1790     no       no      VARIABLE 'tms            '              
   391      1801     no       no      EQUATION 'MKTPRICES           '         
   392      1806     no       no      COEFFICIENT 'MSHRS       '              
   393      1808     no       no      Formula for "MSHRS"                     
   394      1810     no       no      EQUATION 'DPRICEIMP           '         
   395      1815     no       no      VARIABLE 'pr             '              
   396      1817     no       no      EQUATION 'PRICETGT            '         
   397      1833     no       no      COEFFICIENT 'ESUBM       '              
   398      1836     no       no      READ into 'ESUBM       '                
   399      1839     no       no      EQUATION 'IMPORTDEMAND        '         
   400      1846     no       no      EQUATION 'TIMPRATIO           '         
   401      1873     no       no      VARIABLE 'qtmfsd         '              
   402      1879     no       no      VARIABLE 'atmfsd         '              
   403      1886     no       no      VARIABLE 'atm            '              
   404      1888     no       no      VARIABLE 'atf            '              
   405      1890     no       no      VARIABLE 'ats            '              
   406      1892     no       no      VARIABLE 'atd            '              
   407      1894     no       no      VARIABLE 'atall          '              
   408      1896     no       no      VARIABLE 'ptrans         '              
   409      1901     no       no      VARIABLE 'qtm            '              
   410      1903     no       no      VARIABLE 'pt             '              
   411      1909     no       no      COEFFICIENT 'VTMFSD      '              
   412      1912     no       no      UPDATE of 'VTMFSD      '                
   413      1914     no       no      READ into 'VTMFSD      '                
   414      1917     no       no      COEFFICIENT 'VTFSD       '              
   415      1919     no       no      Formula for "VTFSD"                     
   416      1926     no       no      COEFFICIENT 'VTMUSE      '              
   417      1928     no       no      Formula for "VTMUSE"                    
   418      1931     no       no      COEFFICIENT 'VTMPROV     '              
   419      1933     no       no      Formula for "VTMPROV"                   
   420      1939     no       no      COEFFICIENT 'VTRPROV     '              
   421      1941     no       no      Formula for "VTRPROV"                   
   422      1944     no       no      COEFFICIENT 'VT          '              
   423      1946     no       no      Formula for "VT"                        
   424      1955     no       no      EQUATION 'QTRANS_MFSD         '         
   425      1974     no       no      COEFFICIENT 'VTMUSESHR   '              
   426      1976     no       no      Formula for "VTMUSESHR"                 
   427      1978     no       no      Formula for "VTMUSESHR"                 
   428      1982     no       no      EQUATION 'TRANS_DEMAND        '         
   429      1995     no       no      COEFFICIENT 'VTSUPPSHR   '              
   430      1997     no       no      Formula for "VTSUPPSHR"                 
   431      1999     no       no      Formula for "VTSUPPSHR"                 
   432      2002     no       no      EQUATION 'PTRANSPORT          '         
   433      2017     no       no      COEFFICIENT 'VTUSE       '              
   434      2019     no       no      Formula for "VTUSE"                     
   435      2024     no       no      COEFFICIENT 'VTFSD_MSH   '              
   436      2026     no       no      Formula for "VTFSD_MSH"                 
   437      2029     no       no      Formula for "VTFSD_MSH"                 
   438      2033     no       no      EQUATION 'TRANSCOSTINDEX      '         
   439      2039     no       no      EQUATION 'TRANSTECHANGE       '         
   440      2044     no       no      EQUATION 'TRANSVCES           '         
   441      2055     no       no      COEFFICIENT 'VIWSCOST    '              
   442      2057     no       no      Formula for "VIWSCOST"                  
   443      2060     no       no      COEFFICIENT 'FOBSHR      '              
   444      2062     no       no      Formula for "FOBSHR"                    
   445      2065     no       no      COEFFICIENT 'TRNSHR      '              
   446      2067     no       no      Formula for "TRNSHR"                    
   447      2070     no       no      EQUATION 'FOBCIF              '         
   448      2104     no       no      COEFFICIENT 'XSHRPRIV    '              
   449      2106     no       no      Formula for "XSHRPRIV"                  
   450      2109     no       no      COEFFICIENT 'XSHRGOV     '              
   451      2111     no       no      Formula for "XSHRGOV"                   
   452      2114     no       no      COEFFICIENT 'XSHRSAVE    '              
   453      2116     no       no      Formula for "XSHRSAVE"                  
   454      2119     no       no      VARIABLE 'uelas          '              
   455      2122     no       no      VARIABLE 'dppriv         '              
   456      2124     no       no      VARIABLE 'dpgov          '              
   457      2126     no       no      VARIABLE 'dpsave         '              
   458      2135     no       no      EQUATION 'FACTORINCPRICES     '         
   459      2140     no       no      COEFFICIENT 'TINC        '              
   460      2142     no       no      Formula for "TINC"                      
   461      2145     no       no      EQUATION 'TINCRATIO           '         
   462      2152     no       no      COEFFICIENT 'REVSHR      '              
   463      2154     no       no      Formula for "REVSHR"                    
   464      2156     no       no      EQUATION 'ENDW_PRICE          '         
   465      2161     no       no      COEFFICIENT 'ETRAE       '              
   466      2164     no       no      READ into 'ETRAE       '                
   467      2170     no       no      EQUATION 'ENDW_SUPPLY         '         
   468      2181     no       no      COEFFICIENT 'FY          '              
   469      2183     no       no      Formula for "FY"                        
   470      2185     no       no      VARIABLE 'fincome        '              
   471      2187     no       no      EQUATION 'FACTORINCOME        '         
   472      2194     no       no      VARIABLE 'del_indtaxr    '              
   473      2196     no       no      EQUATION 'DINDTAXRATIO        '         
   474      2203     no       no      VARIABLE 'del_ttaxr      '              
   475      2205     no       no      EQUATION 'DTAXRATIO           '         
   476      2217     no       no      VARIABLE 'incomeslack    '              
   477      2223     no       no      COEFFICIENT 'INDTAX      '              
   478      2225     no       no      Formula for "INDTAX"                    
   479      2228     no       no      EQUATION 'REGIONALINCOME      '         
   480      2249     no       no      VARIABLE 'dpav           '              
   481      2251     no       no      EQUATION 'DPARAV              '         
   482      2259     no       no      EQUATION 'UTILITELASTIC       '         
   483      2264     no       no      EQUATION 'PRIVCONSEXP         '         
   484      2269     no       no      EQUATION 'GOVCONSEXP          '         
   485      2274     no       no      EQUATION 'SAVING              '         
   486      2285     no       no      VARIABLE 'p              '              
   487      2287     no       no      EQUATION 'PRICEINDEXREG       '         
   488      2295     no       no      VARIABLE 'au             '              
   489      2297     no       no      VARIABLE 'dpsum          '              
   490      2300     no       no      COEFFICIENT 'DPARSUM     '              
   491      2302     no       no      READ into 'DPARSUM     '                
   492      2304     no       no      UPDATE of 'DPARSUM     '                
   493      2307     no       no      COEFFICIENT 'UTILELAS    '              
   494      2309     no       no      Formula for "UTILELAS"                  
   495      2313     no       no      COEFFICIENT 'DPARPRIV    '              
   496      2315     no       no      Formula for "DPARPRIV"                  
   497      2318     no       no      COEFFICIENT 'DPARGOV     '              
   498      2320     no       no      Formula for "DPARGOV"                   
   499      2323     no       no      COEFFICIENT 'DPARSAVE    '              
   500      2325     no       no      Formula for "DPARSAVE"                  
   501      2328     no       no      COEFFICIENT 'UTILPRIV    '              
   502      2330     no       no      Formula for "UTILPRIV"                  
   503      2330     no       no      READ into 'UTILPRIV    '                
   504      2332     no       no      UPDATE of 'UTILPRIV    '                
   505      2335     no       no      COEFFICIENT 'UTILGOV     '              
   506      2337     no       no      Formula for "UTILGOV"                   
   507      2337     no       no      READ into 'UTILGOV     '                
   508      2339     no       no      UPDATE of 'UTILGOV     '                
   509      2342     no       no      COEFFICIENT 'UTILSAVE    '              
   510      2344     no       no      Formula for "UTILSAVE"                  
   511      2344     no       no      READ into 'UTILSAVE    '                
   512      2346     no       no      UPDATE of 'UTILSAVE    '                
   513      2349     no       no      VARIABLE 'u              '              
   514      2351     no       no      EQUATION 'UTILITY             '         
   515      2361     no       no      EQUATION 'DISTPARSUM          '         
   516      2385     no       no      COEFFICIENT 'SHRDFM      '              
   517      2387     no       no      Formula for "SHRDFM"                    
   518      2390     no       no      COEFFICIENT 'SHRDPM      '              
   519      2392     no       no      Formula for "SHRDPM"                    
   520      2395     no       no      COEFFICIENT 'SHRDGM      '              
   521      2397     no       no      Formula for "SHRDGM"                    
   522      2400     no       no      VARIABLE 'qds            '              
   523      2402     no       no      EQUATION 'MKTCLDOM            '         
   524      2410     no       no      COEFFICIENT 'SHRDM       '              
   525      2412     no       no      Formula for "SHRDM"                     
   526      2415     no       no      COEFFICIENT 'SHRST       '              
   527      2417     no       no      Formula for "SHRST"                     
   528      2420     no       no      COEFFICIENT 'SHRXMD      '              
   529      2422     no       no      Formula for "SHRXMD"                    
   530      2425     no       no      VARIABLE 'tradslack      '              
   531      2433     no       no      EQUATION 'MKTCLTRD_MARG       '         
   532      2441     no       no      EQUATION 'MKTCLTRD_NMRG       '         
   533      2449     no       no      COEFFICIENT 'VIM         '              
   534      2451     no       no      Formula for "VIM"                       
   535      2454     no       no      COEFFICIENT 'SHRIFM      '              
   536      2456     no       no      Formula for "SHRIFM"                    
   537      2459     no       no      COEFFICIENT 'SHRIPM      '              
   538      2461     no       no      Formula for "SHRIPM"                    
   539      2464     no       no      COEFFICIENT 'SHRIGM      '              
   540      2466     no       no      Formula for "SHRIGM"                    
   541      2469     no       no      EQUATION 'MKTCLIMP            '         
   542      2477     no       no      COEFFICIENT 'SHREM       '              
   543      2479     no       no      Formula for "SHREM"                     
   544      2482     no       no      EQUATION 'MKTCLENDWM          '         
   545      2491     no       no      EQUATION 'MKTCLENDWS          '         
   546      2505     no       no      VARIABLE 'walras_sup     '              
   547      2507     no       no      EQUATION 'WALRAS_S            '         
   548      2516     no       no      VARIABLE 'walras_dem     '              
   549      2518     no       no      EQUATION 'WALRAS_D            '         
   550      2527     no       no      VARIABLE 'walraslack     '              
   551      2534     no       no      EQUATION 'WALRAS              '         
   552      2581     no       no      VARIABLE 'vxwfob         '              
   553      2583     no       no      VARIABLE 'viwcif         '              
   554      2585     no       no      VARIABLE 'vxwreg         '              
   555      2587     no       no      VARIABLE 'viwreg         '              
   556      2590     no       no      COEFFICIENT 'VXW         '              
   557      2592     no       no      Formula for "VXW"                       
   558      2594     no       no      Formula for "VXW"                       
   559      2597     no       no      COEFFICIENT 'VXWREGION   '              
   560      2599     no       no      Formula for "VXWREGION"                 
   561      2602     no       no      COEFFICIENT 'VIW         '              
   562      2604     no       no      Formula for "VIW"                       
   563      2606     no       no      COEFFICIENT 'VIWREGION   '              
   564      2608     no       no      Formula for "VIWREGION"                 
   565      2617     no       no      VARIABLE 'pfactreal      '              
   566      2619     no       no      EQUATION 'REALRETURN          '         
   567      2628     no       no      COEFFICIENT 'VENDWREG    '              
   568      2630     no       no      Formula for "VENDWREG"                  
   569      2633     no       no      VARIABLE 'pfactor        '              
   570      2635     no       no      EQUATION 'PRIMFACTPR          '         
   571      2640     no       no      COEFFICIENT 'VENDWWLD    '              
   572      2642     no       no      Formula for "VENDWWLD"                  
   573      2644     no       no      VARIABLE 'pfactwld       '              
   574      2646     no       no      EQUATION 'PRIMFACTPRWLD       '         
   575      2659     no       no      VARIABLE 'psw            '              
   576      2661     no       no      EQUATION 'REGSUPRICE          '         
   577      2673     no       no      VARIABLE 'pdw            '              
   578      2675     no       no      EQUATION 'REGDEMPRICE         '         
   579      2685     no       no      VARIABLE 'tot            '              
   580      2687     no       no      EQUATION 'TOTeq               '         
   581      2698     no       no      COEFFICIENT 'GDP         '              
   582      2700     no       no      Formula for "GDP"                       
   583      2713     no       no      VARIABLE 'vgdp           '              
   584      2715     no       no      EQUATION 'VGDP_r              '         
   585      2727     no       no      VARIABLE 'pgdp           '              
   586      2729     no       no      EQUATION 'PGDP_r              '         
   587      2740     no       no      VARIABLE 'qgdp           '              
   588      2742     no       no      EQUATION 'QGDP_r              '         
   589      2756     no       no      VARIABLE 'compvalad      '              
   590      2758     no       no      EQUATION 'COMPVALADEQ         '         
   591      2785     no       no      VARIABLE 'pxw            '              
   592      2788     no       no      COEFFICIENT 'VXWCOMMOD   '              
   593      2790     no       no      Formula for "VXWCOMMOD"                 
   594      2793     no       no      COEFFICIENT 'VXWLD       '              
   595      2795     no       no      Formula for "VXWLD"                     
   596      2798     no       no      COEFFICIENT 'VIWCOMMOD   '              
   597      2800     no       no      Formula for "VIWCOMMOD"                 
   598      2803     no       no      COEFFICIENT 'PW_PM       '              
   599      2805     no       no      Formula for "PW_PM"                     
   600      2807     no       no      COEFFICIENT 'VOW         '              
   601      2809     no       no      Formula for "VOW"                       
   602      2811     no       no      Formula for "VOW"                       
   603      2814     no       no      COEFFICIENT 'VWOW        '              
   604      2816     no       no      Formula for "VWOW"                      
   605      2819     no       no      COEFFICIENT 'VWOU        '              
   606      2821     no       no      Formula for "VWOU"                      
   607      2830     no       no      EQUATION 'VREGEX_ir_MARG      '         
   608      2836     no       no      EQUATION 'VREGEX_ir_NMRG      '         
   609      2842     no       no      EQUATION 'VREGEX_r            '         
   610      2847     no       no      VARIABLE 'vxwcom         '              
   611      2849     no       no      EQUATION 'VWLDEX_i            '         
   612      2854     no       no      VARIABLE 'vxwwld         '              
   613      2856     no       no      EQUATION 'VWLDEX              '         
   614      2860     no       no      EQUATION 'VREGIM_is           '         
   615      2866     no       no      EQUATION 'VREGIM_s            '         
   616      2871     no       no      VARIABLE 'viwcom         '              
   617      2873     no       no      EQUATION 'VWLDIM_i            '         
   618      2878     no       no      VARIABLE 'valuew         '              
   619      2880     no       no      EQUATION 'VWLDOUT             '         
   620      2885     no       no      VARIABLE 'valuewu        '              
   621      2887     no       no      EQUATION 'VWLDOUTUSE          '         
   622      2901     no       no      EQUATION 'PREGEX_ir_MARG      '         
   623      2907     no       no      EQUATION 'PREGEX_ir_NMRG      '         
   624      2912     no       no      VARIABLE 'pxwreg         '              
   625      2914     no       no      EQUATION 'PREGEX_r            '         
   626      2919     no       no      VARIABLE 'pxwcom         '              
   627      2921     no       no      EQUATION 'PWLDEX_i            '         
   628      2926     no       no      VARIABLE 'pxwwld         '              
   629      2928     no       no      EQUATION 'PWLDEX              '         
   630      2932     no       no      VARIABLE 'piw            '              
   631      2934     no       no      EQUATION 'PREGIM_is           '         
   632      2939     no       no      VARIABLE 'piwreg         '              
   633      2941     no       no      EQUATION 'PREGIM_s            '         
   634      2946     no       no      VARIABLE 'piwcom         '              
   635      2948     no       no      EQUATION 'PWLDIM_i            '         
   636      2953     no       no      VARIABLE 'pw             '              
   637      2955     no       no      EQUATION 'PWLDOUT             '         
   638      2960     no       no      VARIABLE 'pwu            '              
   639      2962     no       no      EQUATION 'PWLDUSE             '         
   640      2976     no       no      VARIABLE 'qxw            '              
   641      2978     no       no      EQUATION 'QREGEX_ir_MARG      '         
   642      2983     no       no      EQUATION 'QREGEX_ir_NMRG      '         
   643      2991     no       no      VARIABLE 'qxwreg         '              
   644      2993     no       no      EQUATION 'QREGEX_r            '         
   645      3001     no       no      VARIABLE 'qxwcom         '              
   646      3003     no       no      EQUATION 'QWLDEX_i            '         
   647      3011     no       no      VARIABLE 'qxwwld         '              
   648      3013     no       no      EQUATION 'QWLDEX              '         
   649      3020     no       no      VARIABLE 'qiw            '              
   650      3022     no       no      EQUATION 'QREGIM_is           '         
   651      3030     no       no      VARIABLE 'qiwreg         '              
   652      3032     no       no      EQUATION 'QREGIM_s            '         
   653      3040     no       no      VARIABLE 'qiwcom         '              
   654      3042     no       no      EQUATION 'QWLDIM_i            '         
   655      3050     no       no      VARIABLE 'qow            '              
   656      3052     no       no      EQUATION 'QWLDOUT             '         
   657      3060     no       no      VARIABLE 'qowu           '              
   658      3062     no       no      EQUATION 'QWLDOUTU            '         
   659      3076     no       no      VARIABLE 'DTBALi         '              
   660      3082     no       no      EQUATION 'TRADEBAL_i          '         
   661      3088     no       no      VARIABLE 'DTBAL          '              
   662      3090     no       no      EQUATION 'TRADEBALANCE        '         
   663      3104     no       no      COEFFICIENT 'TBAL        '              
   664      3106     no       no      Formula for "TBAL"                      
   665      3109     no       no      VARIABLE 'DTBALR         '              
   666      3111     no       no      EQUATION 'DTBALRATIO          '         
   667      3150     no       no      VARIABLE 'uelasev        '              
   668      3153     no       no      VARIABLE 'ueprivev       '              
   669      3156     no       no      VARIABLE 'ugev           '              
   670      3158     no       no      VARIABLE 'upev           '              
   671      3160     no       no      VARIABLE 'qsaveev        '              
   672      3162     no       no      VARIABLE 'yev            '              
   673      3164     no       no      VARIABLE 'ypev           '              
   674      3167     no       no      VARIABLE 'ygev           '              
   675      3171     no       no      COEFFICIENT 'INCOMEEV    '              
   676      3173     no       no      Formula for "INCOMEEV"                  
   677      3173     no       no      READ into 'INCOMEEV    '                
   678      3175     no       no      UPDATE of 'INCOMEEV    '                
   679      3178     no       no      COEFFICIENT 'UTILPRIVEV  '              
   680      3180     no       no      Formula for "UTILPRIVEV"                
   681      3180     no       no      READ into 'UTILPRIVEV  '                
   682      3182     no       no      UPDATE of 'UTILPRIVEV  '                
   683      3185     no       no      COEFFICIENT 'UTILGOVEV   '              
   684      3187     no       no      Formula for "UTILGOVEV"                 
   685      3187     no       no      READ into 'UTILGOVEV   '                
   686      3189     no       no      UPDATE of 'UTILGOVEV   '                
   687      3192     no       no      COEFFICIENT 'UTILSAVEEV  '              
   688      3194     no       no      Formula for "UTILSAVEEV"                
   689      3194     no       no      READ into 'UTILSAVEEV  '                
   690      3196     no       no      UPDATE of 'UTILSAVEEV  '                
   691      3205     no       no      EQUATION 'GOVUSHD             '         
   692      3216     no       no      VARIABLE 'qpev           '              
   693      3220     no       no      COEFFICIENT 'VPAEV       '              
   694      3223     no       no      Formula for "VPAEV"                     
   695      3223     no       no      READ into 'VPAEV       '                
   696      3225     no       no      UPDATE of 'VPAEV       '                
   697      3228     no       no      COEFFICIENT 'VPAREGEV    '              
   698      3230     no       no      Formula for "VPAREGEV"                  
   699      3236     no       no      COEFFICIENT 'CONSHREV    '              
   700      3239     no       no      Formula for "CONSHREV"                  
   701      3241     no       no      COEFFICIENT 'EYEV        '              
   702      3244     no       no      Formula for "EYEV"                      
   703      3252     no       no      EQUATION 'PRIVDMNDSEV         '         
   704      3260     no       no      COEFFICIENT 'UELASPRIVEV '              
   705      3263     no       no      Formula for "UELASPRIVEV"               
   706      3266     no       no      EQUATION 'PRIVATEUEV          '         
   707      3271     no       no      COEFFICIENT 'XWCONSHREV  '              
   708      3274     no       no      Formula for "XWCONSHREV"                
   709      3277     no       no      EQUATION 'UTILELASPRIVEV      '         
   710      3293     no       no      VARIABLE 'ysaveev        '              
   711      3296     no       no      COEFFICIENT 'PRIVEXPEV   '              
   712      3299     no       no      Formula for "PRIVEXPEV"                 
   713      3299     no       no      READ into 'PRIVEXPEV   '                
   714      3301     no       no      UPDATE of 'PRIVEXPEV   '                
   715      3307     no       no      COEFFICIENT 'GOVEXPEV    '              
   716      3310     no       no      Formula for "GOVEXPEV"                  
   717      3310     no       no      READ into 'GOVEXPEV    '                
   718      3312     no       no      UPDATE of 'GOVEXPEV    '                
   719      3315     no       no      COEFFICIENT 'SAVEEV      '              
   720      3318     no       no      Formula for "SAVEEV"                    
   721      3318     no       no      READ into 'SAVEEV      '                
   722      3320     no       no      UPDATE of 'SAVEEV      '                
   723      3323     no       no      COEFFICIENT 'XSHRPRIVEV  '              
   724      3326     no       no      Formula for "XSHRPRIVEV"                
   725      3329     no       no      COEFFICIENT 'XSHRGOVEV   '              
   726      3332     no       no      Formula for "XSHRGOVEV"                 
   727      3335     no       no      COEFFICIENT 'XSHRSAVEEV  '              
   728      3337     no       no      Formula for "XSHRSAVEEV"                
   729      3340     no       no      VARIABLE 'dpavev         '              
   730      3342     no       no      EQUATION 'DPARAVEV            '         
   731      3350     no       no      EQUATION 'UTILITELASTICEV     '         
   732      3355     no       no      EQUATION 'PCONSEXPEV          '         
   733      3360     no       no      EQUATION 'GOVCONSEXPEV        '         
   734      3365     no       no      EQUATION 'SAVINGEV            '         
   735      3370     no       no      EQUATION 'SAVEUEV             '         
   736      3379     no       no      COEFFICIENT 'UTILELASEV  '              
   737      3382     no       no      Formula for "UTILELASEV"                
   738      3382     no       no      READ into 'UTILELASEV  '                
   739      3384     no       no      UPDATE of 'UTILELASEV  '                
   740      3387     no       no      EQUATION 'INCOME_EQUIV        '         
   741      3403     no       no      VARIABLE 'EV             '              
   742      3405     no       no      EQUATION 'EVREG               '         
   743      3410     no       no      VARIABLE 'WEV            '              
   744      3412     no       no      EQUATION 'EVWLD               '         
   745      3424     no       no      COEFFICIENT 'EVSCALFACT  '              
   746      3426     no       no      Formula for "EVSCALFACT"                
   747      3429     no       no      COEFFICIENT 'VTMD        '              
   748      3431     no       no      Formula for "VTMD"                      
   749      3434     no       no      VARIABLE 'EV_ALT         '              
   750      3436     no       no      EQUATION 'EV_DECOMPOSITION    '         
   751      3475     no       no      VARIABLE 'WEV_ALT        '              
   752      3477     no       no      EQUATION 'WORLDEV             '         
   753      3481     no       no      VARIABLE 'CNTdpar        '              
   754      3483     no       no      EQUATION 'CNT_WEV_dpar        '         
   755      3491     no       no      VARIABLE 'CNTpopr        '              
   756      3493     no       no      EQUATION 'CONT_EV_pop         '         
   757      3497     no       no      VARIABLE 'CNTqor         '              
   758      3499     no       no      EQUATION 'CONT_EV_qor         '         
   759      3505     no       no      VARIABLE 'CNTqoir        '              
   760      3508     no       no      EQUATION 'CONT_EV_qoir        '         
   761      3512     no       no      VARIABLE 'CNTqfer        '              
   762      3515     no       no      EQUATION 'CONT_EV_qfer        '         
   763      3521     no       no      VARIABLE 'CNTqfeir       '              
   764      3524     no       no      EQUATION 'CONT_EV_qfeir       '         
   765      3530     no       no      VARIABLE 'CNTqfeijr      '              
   766      3533     no       no      EQUATION 'CONT_EV_qfeijr      '         
   767      3538     no       no      VARIABLE 'CNTqfmr        '              
   768      3541     no       no      EQUATION 'CONT_EV_qfmr        '         
   769      3547     no       no      VARIABLE 'CNTqfmir       '              
   770      3550     no       no      EQUATION 'CONT_EV_qfmir       '         
   771      3556     no       no      VARIABLE 'CNTqfmijr      '              
   772      3559     no       no      EQUATION 'CONT_EV_qfmijr      '         
   773      3564     no       no      VARIABLE 'CNTqfdr        '              
   774      3567     no       no      EQUATION 'CONT_EV_qfdr        '         
   775      3573     no       no      VARIABLE 'CNTqfdir       '              
   776      3576     no       no      EQUATION 'CONT_EV_qfdir       '         
   777      3582     no       no      VARIABLE 'CNTqfdijr      '              
   778      3585     no       no      EQUATION 'CONT_EV_qfdijr      '         
   779      3590     no       no      VARIABLE 'CNTqpmr        '              
   780      3593     no       no      EQUATION 'CONT_EV_qpmr        '         
   781      3599     no       no      VARIABLE 'CNTqpmir       '              
   782      3602     no       no      EQUATION 'CONT_EV_qpmir       '         
   783      3606     no       no      VARIABLE 'CNTqpdr        '              
   784      3609     no       no      EQUATION 'CONT_EV_qpdr        '         
   785      3615     no       no      VARIABLE 'CNTqpdir       '              
   786      3618     no       no      EQUATION 'CONT_EV_qpdir       '         
   787      3622     no       no      VARIABLE 'CNTqgmr        '              
   788      3625     no       no      EQUATION 'CONT_EV_qgmr        '         
   789      3631     no       no      VARIABLE 'CNTqgmir       '              
   790      3634     no       no      EQUATION 'CONT_EV_qgmir       '         
   791      3638     no       no      VARIABLE 'CNTqgdr        '              
   792      3641     no       no      EQUATION 'CONT_EV_qgdr        '         
   793      3647     no       no      VARIABLE 'CNTqgdir       '              
   794      3650     no       no      EQUATION 'CONT_EV_qgdir       '         
   795      3654     no       no      VARIABLE 'CNTqxsr        '              
   796      3657     no       no      EQUATION 'CONT_EV_qxsr        '         
   797      3663     no       no      VARIABLE 'CNTqxsirs      '              
   798      3666     no       no      EQUATION 'CONT_EV_qxsirs      '         
   799      3671     no       no      VARIABLE 'CNTqimr        '              
   800      3674     no       no      EQUATION 'CONT_EV_qimr        '         
   801      3680     no       no      VARIABLE 'CNTqimisr      '              
   802      3683     no       no      EQUATION 'CONT_EV_qimisr      '         
   803      3688     no       no      VARIABLE 'CNTalleffr     '              
   804      3690     no       no      EQUATION 'CONT_EV_alleffr     '         
   805      3709     no       no      VARIABLE 'CNTalleffir    '              
   806      3712     no       no      EQUATION 'CONT_EV_alleffir_E  '         
   807      3718     no       no      EQUATION 'CONT_EV_alleffir_T  '         
   808      3732     no       no      VARIABLE 'CNTtotr        '              
   809      3735     no       no      EQUATION 'CONT_EV_totr        '         
   810      3744     no       no      VARIABLE 'CNTcgdsr       '              
   811      3746     no       no      EQUATION 'CNT_EV_cgdsr        '         
   812      3752     no       no      VARIABLE 'CNTendwr       '              
   813      3754     no       no      EQUATION 'CONT_EV_endwr       '         
   814      3761     no       no      VARIABLE 'CNTendwir      '              
   815      3763     no       no      EQUATION 'CONT_EV_endwir      '         
   816      3767     no       no      VARIABLE 'CNTtechr       '              
   817      3769     no       no      EQUATION 'CONT_EV_techr       '         
   818      3782     no       no      VARIABLE 'CNTtech_aor    '              
   819      3785     no       no      EQUATION 'CONT_EV_tech_aor    '         
   820      3790     no       no      VARIABLE 'CNTtech_aoir   '              
   821      3793     no       no      EQUATION 'CONT_EV_tech_aoir   '         
   822      3797     no       no      VARIABLE 'CNTtech_afer   '              
   823      3800     no       no      EQUATION 'CONT_EV_tech_afer   '         
   824      3806     no       no      VARIABLE 'CNTtech_afeijr '              
   825      3809     no       no      EQUATION 'CONT_EV_tech_afeijr '         
   826      3813     no       no      VARIABLE 'CNTtech_avar   '              
   827      3816     no       no      EQUATION 'CONT_EV_tech_avar   '         
   828      3821     no       no      VARIABLE 'CNTtech_avajr  '              
   829      3824     no       no      EQUATION 'CONT_EV_tech_avajr  '         
   830      3828     no       no      VARIABLE 'CNTtech_afr    '              
   831      3831     no       no      EQUATION 'CONT_EV_tech_afr    '         
   832      3838     no       no      VARIABLE 'CNTtech_afijr  '              
   833      3841     no       no      EQUATION 'CONT_EV_tech_afijr  '         
   834      3846     no       no      VARIABLE 'CNTtech_atrr   '              
   835      3849     no       no      EQUATION 'CONT_EV_tech_atrr   '         
   836      3856     no       no      VARIABLE 'CNTtech_afmfdsd'              
   837      3859     no       no      EQUATION 'CONT_EV_tech_afmfdsd'         
   838      3864     no       no      VARIABLE 'CNTtech_amsr   '              
   839      3866     no       no      EQUATION 'CONT_EV_tech_amsr   '         
   840      3872     no       no      VARIABLE 'CNTtech_amsirs '              
   841      3875     no       no      EQUATION 'CONT_EV_tech_amsirs '         
   842      3879     no       no      VARIABLE 'CNTkbr         '              
   843      3882     no       no      EQUATION 'CONT_EV_kbr         '         
   844      3896     no       no      COEFFICIENT 'SX_IR       '              
   845      3898     no       no      Formula for "SX_IR"                     
   846      3903     no       no      Formula for "SX_IR"                     
   847      3909     no       no      COEFFICIENT 'VTICOMM     '              
   848      3911     no       no      Formula for "VTICOMM"                   
   849      3914     no       no      COEFFICIENT 'VIWDIRALL   '              
   850      3916     no       no      Formula for "VIWDIRALL"                 
   851      3918     no       no      Formula for "VIWDIRALL"                 
   852      3921     no       no      COEFFICIENT 'VIWDATOT    '              
   853      3923     no       no      Formula for "VIWDATOT"                  
   854      3926     no       no      COEFFICIENT 'SM_IR       '              
   855      3928     no       no      Formula for "SM_IR"                     
   856      3931     no       no      ZERODIVIDE instruction                  
   857      3932     no       no      COEFFICIENT 'SX_IRS      '              
   858      3934     no       no      Formula for "SX_IRS"                    
   859      3936     no       no      Formula for "SX_IRS"                    
   860      3938     no       no      ZERODIVIDE instruction                  
   861      3940     no       no      COEFFICIENT 'SXT_IR      '              
   862      3942     no       no      Formula for "SXT_IR"                    
   863      3945     no       no      VARIABLE 'px_ir          '              
   864      3947     no       no      EQUATION 'EXPPRICE_MARG       '         
   865      3952     no       no      EQUATION 'EXPPRICE_NMRG       '         
   866      3957     no       no      COEFFICIENT 'SM_IRS      '              
   867      3959     no       no      Formula for "SM_IRS"                    
   868      3962     no       no      COEFFICIENT 'SMT_IR      '              
   869      3964     no       no      Formula for "SMT_IR"                    
   870      3967     no       no      VARIABLE 'pm_ir          '              
   871      3969     no       no      EQUATION 'IMPPRICE1_MARG      '         
   872      3974     no       no      EQUATION 'IMPPRICE1_NMRG      '         
   873      3979     no       no      COEFFICIENT 'SW_IR       '              
   874      3981     no       no      Formula for "SW_IR"                     
   875      3985     no       no      Formula for "SW_IR"                     
   876      3989     no       no      VARIABLE 'px_i           '              
   877      3991     no       no      EQUATION 'WRLDPRICEi          '         
   878      3996     no       no      COEFFICIENT 'SW_I        '              
   879      3998     no       no      Formula for "SW_I"                      
   880      4003     no       no      Formula for "SW_I"                      
   881      4009     no       no      VARIABLE 'px_            '              
   882      4011     no       no      EQUATION 'WRLDPRICE           '         
   883      4015     no       no      VARIABLE 'c1_ir          '              
   884      4017     no       no      EQUATION 'c1_irEQ             '         
   885      4022     no       no      VARIABLE 'c2_ir          '              
   886      4024     no       no      EQUATION 'c2_irEQ             '         
   887      4029     no       no      VARIABLE 'c3_ir          '              
   888      4031     no       no      EQUATION 'c3_irEQ             '         
   889      4036     no       no      VARIABLE 'c1_r           '              
   890      4038     no       no      EQUATION 'c1_rEQ              '         
   891      4043     no       no      VARIABLE 'c2_r           '              
   892      4045     no       no      EQUATION 'c2_rEQ              '         
   893      4050     no       no      VARIABLE 'c3_r           '              
   894      4052     no       no      EQUATION 'c3_rEQ              '         
   895      4057     no       no      VARIABLE 'tot2           '              
   896      4059     no       no      EQUATION 'TOT2eq              '         




 ============
 ++ SET TABLE
 ============

                    Defined   [Max] Inter             Set numbers this
  Number    Name    at line    Size temp? Elements    is subset of
  ---------------------------------------------------------------------
     1  REG           161 [      10]  no   read 
     2  TRAD_COMM     164 [      10]  no   read      7     8
     3  MARG_COMM     167 [      10]  no   read      2
     4  NMRG_COMM     172 [       0]  no   other     2
     5  CGDS_COMM     174 [       1]  no   read      7     9
     6  ENDW_COMM     177 [       5]  no   read      8
     7  PROD_COMM     180 [       0]  no   other     9
     8  DEMD_COMM     182 [       0]  no   other     9
     9  NSAV_COMM     184 [       0]  no   other
    10  ENDWS_COMM    231 [       5]  no   other     6
    11  ENDWM_COMM    234 [       0]  no   other     6
    12  ENDWC_COMM    237         1   no   fixed     6




 ===============
 ++ SUBSET TABLE
 ===============
 
SSNO=1. Set 3 "MARG_COMM" is subset of set 2 "TRAD_COMM"
SSNO=2. Set 4 "NMRG_COMM" is subset of set 2 "TRAD_COMM"
SSNO=3. Set 2 "TRAD_COMM" is subset of set 7 "PROD_COMM"
SSNO=4. Set 5 "CGDS_COMM" is subset of set 7 "PROD_COMM"
SSNO=5. Set 6 "ENDW_COMM" is subset of set 8 "DEMD_COMM"
SSNO=6. Set 2 "TRAD_COMM" is subset of set 8 "DEMD_COMM"
SSNO=7. Set 8 "DEMD_COMM" is subset of set 9 "NSAV_COMM"
SSNO=8. Set 5 "CGDS_COMM" is subset of set 9 "NSAV_COMM"
SSNO=9. Set 7 "PROD_COMM" is subset of set 9 "NSAV_COMM"
SSNO=10. Set 10 "ENDWS_COMM" is subset of set 6 "ENDW_COMM"
SSNO=11. Set 11 "ENDWM_COMM" is subset of set 6 "ENDW_COMM"
SSNO=12. Set 12 "ENDWC_COMM" is subset of set 6 "ENDW_COMM"




 =============
 ++ FILE TABLE
 =============

         Logical            Defined  File  File
  Number  Name              at line  Type  Form  Actual name (if given)
  --------------------------------------------------------------------
     1  GTAPSETS               111    old  head
     2  GTAPDATA               113    old  head
     3  GTAPPARM               115    old  head




 =================
 ++ VARIABLE TABLE
 =================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1   psave             287     1  perc       1
     2   qsave             289     1  perc       1
     3   pgd               304     2  perc       2     1
     4   qgd               306     2  perc       2     1
     5   pm                315     2  perc       9     1
     6   pgm               324     2  perc       2     1
     7   qgm               326     2  perc       2     1
     8   pim               335     2  perc       2     1
     9   ppd               350     2  perc       2     1
    10   qpd               352     2  perc       2     1
    11   ppm               368     2  perc       2     1
    12   qpm               370     2  perc       2     1
    13   ps                392     2  perc       9     1
    14   qo                394     2  perc       9     1
    15   pfe               403     3  perc       6     7     1
    16   qfe               405     3  perc       6     7     1
    17   pfd               414     3  perc       2     7     1
    18   qfd               416     3  perc       2     7     1
    19   pfm               425     3  perc       2     7     1
    20   qfm               427     3  perc       2     7     1
    21   pmes              436     3  perc      10     7     1
    22   kb                467     1  perc       1
    23   pcgds             469     1  perc       1
    24   pms               488     3  perc       2     1     1
    25   qxs               490     3  perc       2     1     1
    26   pcif              499     3  perc       2     1     1
    27   pfob              508     3  perc       2     1     1
    28   qst               525     2  perc       3     1
    29   y                 548     1  perc       1
    30   pop               550     1  perc       1
    31   qoes              552     3  perc      10     7     1
    32   endwslack         554     2  perc       6     1
    33   pgov              561     1  perc       1
    34   yg                563     1  perc       1
    35   ug                566     1  perc       1
    36   ppriv             568     1  perc       1
    37   uepriv            571     1  perc       1
    38   yp                574     1  perc       1
    39   up                576     1  perc       1
    40   to                578     2  perc       9     1
    41   qim               585     2  perc       2     1
    42   globalcgds        587     0  perc
    43   pcgdswld          589     0  perc
    44   del_taxrgc        611     1  chng       1
    45   del_taxrpc        613     1  chng       1
    46   del_taxriu        615     1  chng       1
    47   del_taxrfu        617     1  chng       1
    48   del_taxrout       619     1  chng       1
    49   del_taxrexp       621     1  chng       1
    50   del_taxrimp       623     1  chng       1
    51   del_taxrinc       625     1  chng       1
    52   pg                897     2  perc       2     1
    53   qg                899     2  perc       2     1
    54   tgd               929     2  perc       2     1
    55   tgm               932     2  perc       2     1
    56   pp                994     2  perc       2     1
    57   qp                996     2  perc       2     1
    58   tp               1097     1  perc       1
    59   tpd              1109     2  perc       2     1
    60   atpd             1111     2  perc       2     1
    61   tpm              1123     2  perc       2     1
    62   atpm             1125     2  perc       2     1
    63   pva              1213     2  perc       7     1
    64   qva              1215     2  perc       7     1
    65   pf               1217     3  perc       2     7     1
    66   qf               1219     3  perc       2     7     1
    67   ao               1221     2  perc       7     1
    68   ava              1223     2  perc       7     1
    69   af               1225     3  perc       2     7     1
    70   afe              1227     3  perc       6     7     1
    71   ams              1229     3  perc       2     1     1
    72   aosec            1238     1  perc       7
    73   aoreg            1240     1  perc       1
    74   aoall            1242     2  perc       7     1
    75   avasec           1249     1  perc       7
    76   avareg           1251     1  perc       1
    77   avaall           1253     2  perc       7     1
    78   afcom            1277     1  perc       2
    79   afsec            1279     1  perc       7
    80   afreg            1281     1  perc       1
    81   afall            1283     3  perc       2     7     1
    82   tfd              1307     3  perc       2     7     1
    83   tfm              1319     3  perc       2     7     1
    84   tf               1365     3  perc       6     7     1
    85   afecom           1378     1  perc       6
    86   afesec           1380     1  perc       7
    87   afereg           1382     1  perc       1
    88   afeall           1384     3  perc       6     7     1
    89   profitslack      1457     2  perc       7     1
    90   rental           1508     1  perc       1
    91   ke               1510     1  perc       1
    92   rore             1512     1  perc       1
    93   rorc             1514     1  perc       1
    94   qcgds            1516     1  perc       1
    95   ksvces           1525     1  perc       1
    96   EXPAND           1637     2  perc      12     1
    97   rorg             1664     0  perc
    98   cgdslack         1666     1  perc       1
    99   psaveslack       1715     1  perc       1
   100   tx               1755     2  perc       2     1
   101   txs              1757     3  perc       2     1     1
   102   tm               1788     2  perc       2     1
   103   tms              1790     3  perc       2     1     1
   104   pr               1815     2  perc       2     1
   105   qtmfsd           1873     4  perc       3     2     1     1
   106   atmfsd           1879     4  perc       3     2     1     1
   107   atm              1886     1  perc       2
   108   atf              1888     1  perc       2
   109   ats              1890     1  perc       1
   110   atd              1892     1  perc       1
   111   atall            1894     4  perc       3     2     1     1
   112   ptrans           1896     3  perc       2     1     1
   113   qtm              1901     1  perc       3
   114   pt               1903     1  perc       3
   115   uelas            2119     1  perc       1
   116   dppriv           2122     1  perc       1
   117   dpgov            2124     1  perc       1
   118   dpsave           2126     1  perc       1
   119   fincome          2185     1  perc       1
   120   del_indtaxr      2194     1  chng       1
   121   del_ttaxr        2203     1  chng       1
   122   incomeslack      2217     1  perc       1
   123   dpav             2249     1  perc       1
   124   p                2285     1  perc       1
   125   au               2295     1  perc       1
   126   dpsum            2297     1  perc       1
   127   u                2349     1  perc       1
   128   qds              2400     2  perc       2     1
   129   tradslack        2425     2  perc       2     1
   130   walras_sup       2505     0  perc
   131   walras_dem       2516     0  perc
   132   walraslack       2527     0  perc
   133   vxwfob           2581     2  perc       2     1
   134   viwcif           2583     2  perc       2     1
   135   vxwreg           2585     1  perc       1
   136   viwreg           2587     1  perc       1
   137   pfactreal        2617     2  perc       6     1
   138   pfactor          2633     1  perc       1
   139   pfactwld         2644     0  perc
   140   psw              2659     1  perc       1
   141   pdw              2673     1  perc       1
   142   tot              2685     1  perc       1
   143   vgdp             2713     1  perc       1
   144   pgdp             2727     1  perc       1
   145   qgdp             2740     1  perc       1
   146   compvalad        2756     2  perc       7     1
   147   pxw              2785     2  perc       2     1
   148   vxwcom           2847     1  perc       2
   149   vxwwld           2854     0  perc
   150   viwcom           2871     1  perc       2
   151   valuew           2878     1  perc       2
   152   valuewu          2885     1  perc       2
   153   pxwreg           2912     1  perc       1
   154   pxwcom           2919     1  perc       2
   155   pxwwld           2926     0  perc
   156   piw              2932     2  perc       2     1
   157   piwreg           2939     1  perc       1
   158   piwcom           2946     1  perc       2
   159   pw               2953     1  perc       2
   160   pwu              2960     1  perc       2
   161   qxw              2976     2  perc       2     1
   162   qxwreg           2991     1  perc       1
   163   qxwcom           3001     1  perc       2
   164   qxwwld           3011     0  perc
   165   qiw              3020     2  perc       2     1
   166   qiwreg           3030     1  perc       1
   167   qiwcom           3040     1  perc       2
   168   qow              3050     1  perc       2
   169   qowu             3060     1  perc       2
   170   DTBALi           3076     2  chng       2     1
   171   DTBAL            3088     1  chng       1
   172   DTBALR           3109     1  chng       1
   173   uelasev          3150     1  perc       1
   174   ueprivev         3153     1  perc       1
   175   ugev             3156     1  perc       1
   176   upev             3158     1  perc       1
   177   qsaveev          3160     1  perc       1
   178   yev              3162     1  perc       1
   179   ypev             3164     1  perc       1
   180   ygev             3167     1  perc       1
   181   qpev             3216     2  perc       2     1
   182   ysaveev          3293     1  perc       1
   183   dpavev           3340     1  perc       1
   184   EV               3403     1  chng       1
   185   WEV              3410     0  chng
   186   EV_ALT           3434     1  chng       1
   187   WEV_ALT          3475     0  chng
   188   CNTdpar          3481     1  chng       1
   189   CNTpopr          3491     1  chng       1
   190   CNTqor           3497     1  chng       1
   191   CNTqoir          3505     2  chng       9     1
   192   CNTqfer          3512     1  chng       1
   193   CNTqfeir         3521     2  chng       6     1
   194   CNTqfeijr        3530     3  chng       6     7     1
   195   CNTqfmr          3538     1  chng       1
   196   CNTqfmir         3547     2  chng       2     1
   197   CNTqfmijr        3556     3  chng       2     7     1
   198   CNTqfdr          3564     1  chng       1
   199   CNTqfdir         3573     2  chng       2     1
   200   CNTqfdijr        3582     3  chng       2     7     1
   201   CNTqpmr          3590     1  chng       1
   202   CNTqpmir         3599     2  chng       2     1
   203   CNTqpdr          3606     1  chng       1
   204   CNTqpdir         3615     2  chng       2     1
   205   CNTqgmr          3622     1  chng       1
   206   CNTqgmir         3631     2  chng       2     1
   207   CNTqgdr          3638     1  chng       1
   208   CNTqgdir         3647     2  chng       2     1
   209   CNTqxsr          3654     1  chng       1
   210   CNTqxsirs        3663     3  chng       2     1     1
   211   CNTqimr          3671     1  chng       1
   212   CNTqimisr        3680     3  chng       2     1     1
   213   CNTalleffr       3688     1  chng       1
   214   CNTalleffir      3709     2  chng       8     1
   215   CNTtotr          3732     1  chng       1
   216   CNTcgdsr         3744     1  chng       1
   217   CNTendwr         3752     1  chng       1
   218   CNTendwir        3761     2  chng       6     1
   219   CNTtechr         3767     1  chng       1
   220   CNTtech_aor      3782     1  chng       1
   221   CNTtech_aoir     3790     2  chng       7     1
   222   CNTtech_afer     3797     1  chng       1
   223   CNTtech_afeijr   3806     3  chng       6     7     1
   224   CNTtech_avar     3813     1  chng       1
   225   CNTtech_avajr    3821     2  chng       7     1
   226   CNTtech_afr      3828     1  chng       1
   227   CNTtech_afijr    3838     3  chng       2     7     1
   228   CNTtech_atrr     3846     1  chng       1
   229   CNTtech_afmfdsd  3856     4  chng       3     2     1     1
   230   CNTtech_amsr     3864     1  chng       1
   231   CNTtech_amsirs   3872     3  chng       2     1     1
   232   CNTkbr           3879     1  chng       1
   233   px_ir            3945     2  perc       2     1
   234   pm_ir            3967     2  perc       2     1
   235   px_i             3989     1  perc       2
   236   px_              4009     0  perc
   237   c1_ir            4015     2  perc       2     1
   238   c2_ir            4022     2  perc       2     1
   239   c3_ir            4029     2  perc       2     1
   240   c1_r             4036     1  perc       1
   241   c2_r             4043     1  perc       1
   242   c3_r             4050     1  perc       1
   243   tot2             4057     1  perc       1




 ====================
 ++ COEFFICIENT TABLE
 ====================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1    VERNUM           154     0  real
     2    SIZE_TRAD        194     0  real
     3    SIZE_ENDW        198     0  real
     4    SIZE_DEMD        202     0  real
     5    SIZE_CGDS        209     0  real
     6    SIZE_PROD        213     0  real
     7    SLUG             226     1  int        6
     8    SAVE             291     1  real       1
     9    VDGA             308     2  real       2     1
    10    VDGM             317     2  real       2     1
    11    VIGA             328     2  real       2     1
    12    VIGM             337     2  real       2     1
    13    VDPA             354     2  real       2     1
    14    VDPM             361     2  real       2     1
    15    VIPA             372     2  real       2     1
    16    VIPM             379     2  real       2     1
    17    EVOA             396     2  real       6     1
    18    EVFA             407     3  real       6     7     1
    19    VDFA             418     3  real       2     7     1
    20    VIFA             429     3  real       2     7     1
    21    VFM              438     3  real       6     7     1
    22    VIFM             447     3  real       2     7     1
    23    VDFM             454     3  real       2     7     1
    24    VDEP             471     1  real       1
    25    VIMS             492     3  real       2     1     1
    26    VIWS             501     3  real       2     1     1
    27    VXWD             510     3  real       2     1     1
    28    VXMD             517     3  real       2     1     1
    29    VST              527     2  real       3     1
    30    VFA              650     3  real       8     7     1
    31    VOA              657     2  real       9     1
    32    VDM              664     2  real       2     1
    33    VOM              669     2  real       9     1
    34    VGA              713     2  real       2     1
    35    GOVEXP           717     1  real       1
    36    VPA              723     2  real       2     1
    37    PRIVEXP          727     1  real       1
    38    INCOME           733     1  real       1
    39    DGTAX            744     2  real       2     1
    40    IGTAX            748     2  real       2     1
    41    TGC              752     1  real       1
    42    DPTAX            757     2  real       2     1
    43    IPTAX            761     2  real       2     1
    44    TPC              765     1  real       1
    45    DFTAX            770     3  real       2     7     1
    46    IFTAX            774     3  real       2     7     1
    47    TIU              778     1  real       1
    48    ETAX             783     3  real       6     7     1
    49    TFU              787     1  real       1
    50    PTAX             792     2  real       9     1
    51    TOUT             796     1  real       1
    52    XTAXD            801     3  real       2     1     1
    53    TEX              805     1  real       1
    54    MTAX             810     3  real       2     1     1
    55    TIM              814     1  real       1
    56    ESUBD            826     1  real       2
    57    REGINV           833     1  real       1
    58    NETINV           837     1  real       1
    59    GLOBINV          841     0  real
    60    CONSHR           847     2  real       2     1
    61    INCPAR           851     2  real       2     1
    62    UELASPRIV        856     1  real       1
    63    GMSHR            945     2  real       2     1
    64    XWCONSHR        1020     2  real       2     1
    65    SUBPAR          1038     2  real       2     1
    66    ALPHA           1047     2  real       2     1
    67    APE             1052     3  real       2     2     1
    68    EY              1063     2  real       2     1
    69    EP              1072     3  real       2     2     1
    70    LevTPD          1105     2  real       2     1
    71    PMSHR           1146     2  real       2     1
    72    ESUBT           1260     1  real       7
    73    FMSHR           1340     3  real       2     7     1
    74    VVA             1391     2  real       7     1
    75    SVADEFAULT      1395     1  real       6
    76    SVA             1401     3  real       6     7     1
    77    ESUBVA          1421     1  real       7
    78    STC             1463     3  real       8     7     1
    79    VKB             1567     1  real       1
    80    INVKERATIO      1579     1  real       1
    81    GRNETRATIO      1596     1  real       1
    82    RORFLEX         1610     1  real       1
    83    RORDELTA        1650     0  int 
    84    MSHRS           1806     3  real       2     1     1
    85    ESUBM           1833     1  real       2
    86    VTMFSD          1909     4  real       3     2     1     1
    87    VTFSD           1917     3  real       2     1     1
    88    VTMUSE          1926     1  real       3
    89    VTMPROV         1931     1  real       3
    90    VTRPROV         1939     1  real       1
    91    VT              1944     0  real
    92    VTMUSESHR       1974     4  real       3     2     1     1
    93    VTSUPPSHR       1995     2  real       3     1
    94    VTUSE           2017     0  real
    95    VTFSD_MSH       2024     4  real       3     2     1     1
    96    VIWSCOST        2055     3  real       2     1     1
    97    FOBSHR          2060     3  real       2     1     1
    98    TRNSHR          2065     3  real       2     1     1
    99    XSHRPRIV        2104     1  real       1
   100    XSHRGOV         2109     1  real       1
   101    XSHRSAVE        2114     1  real       1
   102    TINC            2140     1  real       1
   103    REVSHR          2152     3  real       6     7     1
   104    ETRAE           2161     1  real       6
   105    FY              2181     1  real       1
   106    INDTAX          2223     1  real       1
   107    DPARSUM         2300     1  real       1
   108    UTILELAS        2307     1  real       1
   109    DPARPRIV        2313     1  real       1
   110    DPARGOV         2318     1  real       1
   111    DPARSAVE        2323     1  real       1
   112    UTILPRIV        2328     1  real       1
   113    UTILGOV         2335     1  real       1
   114    UTILSAVE        2342     1  real       1
   115    SHRDFM          2385     3  real       2     7     1
   116    SHRDPM          2390     2  real       2     1
   117    SHRDGM          2395     2  real       2     1
   118    SHRDM           2410     2  real       2     1
   119    SHRST           2415     2  real       3     1
   120    SHRXMD          2420     3  real       2     1     1
   121    VIM             2449     2  real       2     1
   122    SHRIFM          2454     3  real       2     7     1
   123    SHRIPM          2459     2  real       2     1
   124    SHRIGM          2464     2  real       2     1
   125    SHREM           2477     3  real      11     7     1
   126    VXW             2590     2  real       2     1
   127    VXWREGION       2597     1  real       1
   128    VIW             2602     2  real       2     1
   129    VIWREGION       2606     1  real       1
   130    VENDWREG        2628     1  real       1
   131    VENDWWLD        2640     0  real
   132    GDP             2698     1  real       1
   133    VXWCOMMOD       2788     1  real       2
   134    VXWLD           2793     0  real
   135    VIWCOMMOD       2798     1  real       2
   136    PW_PM           2803     2  real       2     1
   137    VOW             2807     2  real       2     1
   138    VWOW            2814     1  real       2
   139    VWOU            2819     1  real       2
   140    TBAL            3104     1  real       1
   141    INCOMEEV        3171     1  real       1
   142    UTILPRIVEV      3178     1  real       1
   143    UTILGOVEV       3185     1  real       1
   144    UTILSAVEEV      3192     1  real       1
   145    VPAEV           3220     2  real       2     1
   146    VPAREGEV        3228     1  real       1
   147    CONSHREV        3236     2  real       2     1
   148    EYEV            3241     2  real       2     1
   149    UELASPRIVEV     3260     1  real       1
   150    XWCONSHREV      3271     2  real       2     1
   151    PRIVEXPEV       3296     1  real       1
   152    GOVEXPEV        3307     1  real       1
   153    SAVEEV          3315     1  real       1
   154    XSHRPRIVEV      3323     1  real       1
   155    XSHRGOVEV       3329     1  real       1
   156    XSHRSAVEEV      3335     1  real       1
   157    UTILELASEV      3379     1  real       1
   158    EVSCALFACT      3424     1  real       1
   159    VTMD            3429     2  real       3     1
   160    SX_IR           3896     2  real       2     1
   161    VTICOMM         3909     2  real       3     1
   162    VIWDIRALL       3914     2  real       2     1
   163    VIWDATOT        3921     1  real       1
   164    SM_IR           3926     2  real       2     1
   165    SX_IRS          3932     3  real       2     1     1
   166    SXT_IR          3940     2  real       3     1
   167    SM_IRS          3957     3  real       2     1     1
   168    SMT_IR          3962     2  real       3     1
   169    SW_IR           3979     2  real       2     1
   170    SW_I            3996     1  real       2




 =================
 ++ EQUATION TABLE
 =================

           Defined     Semantic                        ALL quantifiers range
  Number   at line      Error?   Equation name         over sets numbered
  --------------------------------------------------------------------------
     1         908       no      GPRICEINDEX                1
     2         913       no      GOVDMNDS                   2     1
     3         918       no      GOVU                       1
     4         935       no      GHHDPRICE                  2     1
     5         940       no      GHHIPRICES                 2     1
     6         950       no      GCOMPRICE                  2     1
     7         955       no      GHHLDAGRIMP                2     1
     8         960       no      GHHLDDOM                   2     1
     9         965       no      TGCRATIO                   1
    10        1005       no      PHHLDINDEX                 1
    11        1010       no      PRIVATEU                   1
    12        1026       no      UTILELASPRIV               1
    13        1080       no      PRIVDMNDS                  2     1
    14        1113       no      TPDSHIFT                   2     1
    15        1118       no      PHHDPRICE                  2     1
    16        1127       no      TPMSHIFT                   2     1
    17        1132       no      PHHIPRICES                 2     1
    18        1137       no      TPCRATIO                   1
    19        1151       no      PCOMPRICE                  2     1
    20        1156       no      PHHLDDOM                   2     1
    21        1161       no      PHHLDAGRIMP                2     1
    22        1244       no      AOWORLD                    7     1
    23        1255       no      AVAWORLD                   7     1
    24        1266       no      VADEMAND                   7     1
    25        1285       no      AFWORLD                    2     7     1
    26        1290       no      INTDEMAND                  2     7     1
    27        1309       no      DMNDDPRICE                 2     7     1
    28        1321       no      DMNDIPRICES                2     7     1
    29        1331       no      TIURATIO                   1
    30        1344       no      ICOMPRICE                  2     7     1
    31        1349       no      INDIMP                     2     7     1
    32        1354       no      INDDOM                     2     7     1
    33        1368       no      MPFACTPRICE               11     7     1
    34        1373       no      SPFACTPRICE               10     7     1
    35        1386       no      AFEWORLD                   6     7     1
    36        1407       no      VAPRICE                    7     1
    37        1412       no      TFURATIO                   1
    38        1427       no      ENDWDEMAND                 6     7     1
    39        1440       no      OUTPUTPRICES               7     1
    40        1450       no      TOUTRATIO                  1
    41        1468       no      ZEROPROFITS                7     1
    42        1527       no      KAPSVCES                   1
    43        1537       no      KAPRENTAL                  1
    44        1543       no      CAPGOODS                   1
    45        1553       no      PRCGOODS                   1
    46        1558       no      KBEGINNING                 1
    47        1585       no      KEND                       1
    48        1605       no      RORCURRENT                 1
    49        1624       no      ROREXPECTED                1
    50        1639       no      BALDWIN                   12     1
    51        1673       no      RORGLOBAL                  1
    52        1686       no      GLOBALINV           
    53        1705       no      PRICGDS             
    54        1725       no      SAVEPRICE                  1
    55        1767       no      EXPRICES                   2     1     1
    56        1772       no      TEXPRATIO                  1
    57        1801       no      MKTPRICES                  2     1     1
    58        1810       no      DPRICEIMP                  2     1
    59        1817       no      PRICETGT                   2     1
    60        1839       no      IMPORTDEMAND               2     1     1
    61        1846       no      TIMPRATIO                  1
    62        1955       no      QTRANS_MFSD                3     2     1     1

    63        1982       no      TRANS_DEMAND               3
    64        2002       no      PTRANSPORT                 3
    65        2033       no      TRANSCOSTINDEX             2     1     1
    66        2039       no      TRANSTECHANGE              3     2     1     1

    67        2044       no      TRANSVCES                  3     1
    68        2070       no      FOBCIF                     2     1     1
    69        2135       no      FACTORINCPRICES            6     1
    70        2145       no      TINCRATIO                  1
    71        2156       no      ENDW_PRICE                10     1
    72        2170       no      ENDW_SUPPLY               10     7     1
    73        2187       no      FACTORINCOME               1
    74        2196       no      DINDTAXRATIO               1
    75        2205       no      DTAXRATIO                  1
    76        2228       no      REGIONALINCOME             1
    77        2251       no      DPARAV                     1
    78        2259       no      UTILITELASTIC              1
    79        2264       no      PRIVCONSEXP                1
    80        2269       no      GOVCONSEXP                 1
    81        2274       no      SAVING                     1
    82        2287       no      PRICEINDEXREG              1
    83        2351       no      UTILITY                    1
    84        2361       no      DISTPARSUM                 1
    85        2402       no      MKTCLDOM                   2     1
    86        2433       no      MKTCLTRD_MARG              3     1
    87        2441       no      MKTCLTRD_NMRG              4     1
    88        2469       no      MKTCLIMP                   2     1
    89        2482       no      MKTCLENDWM                11     1
    90        2491       no      MKTCLENDWS                10     7     1
    91        2507       no      WALRAS_S            
    92        2518       no      WALRAS_D            
    93        2534       no      WALRAS              
    94        2619       no      REALRETURN                 6     1
    95        2635       no      PRIMFACTPR                 1
    96        2646       no      PRIMFACTPRWLD       
    97        2661       no      REGSUPRICE                 1
    98        2675       no      REGDEMPRICE                1
    99        2687       no      TOTeq                      1
   100        2715       no      VGDP_r                     1
   101        2729       no      PGDP_r                     1
   102        2742       no      QGDP_r                     1
   103        2758       no      COMPVALADEQ                7     1
   104        2830       no      VREGEX_ir_MARG             3     1
   105        2836       no      VREGEX_ir_NMRG             4     1
   106        2842       no      VREGEX_r                   1
   107        2849       no      VWLDEX_i                   2
   108        2856       no      VWLDEX              
   109        2860       no      VREGIM_is                  2     1
   110        2866       no      VREGIM_s                   1
   111        2873       no      VWLDIM_i                   2
   112        2880       no      VWLDOUT                    2
   113        2887       no      VWLDOUTUSE                 2
   114        2901       no      PREGEX_ir_MARG             3     1
   115        2907       no      PREGEX_ir_NMRG             4     1
   116        2914       no      PREGEX_r                   1
   117        2921       no      PWLDEX_i                   2
   118        2928       no      PWLDEX              
   119        2934       no      PREGIM_is                  2     1
   120        2941       no      PREGIM_s                   1
   121        2948       no      PWLDIM_i                   2
   122        2955       no      PWLDOUT                    2
   123        2962       no      PWLDUSE                    2
   124        2978       no      QREGEX_ir_MARG             3     1
   125        2983       no      QREGEX_ir_NMRG             4     1
   126        2993       no      QREGEX_r                   1
   127        3003       no      QWLDEX_i                   2
   128        3013       no      QWLDEX              
   129        3022       no      QREGIM_is                  2     1
   130        3032       no      QREGIM_s                   1
   131        3042       no      QWLDIM_i                   2
   132        3052       no      QWLDOUT                    2
   133        3062       no      QWLDOUTU                   2
   134        3082       no      TRADEBAL_i                 2     1
   135        3090       no      TRADEBALANCE               1
   136        3111       no      DTBALRATIO                 1
   137        3205       no      GOVUSHD                    1
   138        3252       no      PRIVDMNDSEV                2     1
   139        3266       no      PRIVATEUEV                 1
   140        3277       no      UTILELASPRIVEV             1
   141        3342       no      DPARAVEV                   1
   142        3350       no      UTILITELASTICEV            1
   143        3355       no      PCONSEXPEV                 1
   144        3360       no      GOVCONSEXPEV               1
   145        3365       no      SAVINGEV                   1
   146        3370       no      SAVEUEV                    1
   147        3387       no      INCOME_EQUIV               1
   148        3405       no      EVREG                      1
   149        3412       no      EVWLD               
   150        3436       no      EV_DECOMPOSITION           1
   151        3477       no      WORLDEV             
   152        3483       no      CNT_WEV_dpar               1
   153        3493       no      CONT_EV_pop                1
   154        3499       no      CONT_EV_qor                1
   155        3508       no      CONT_EV_qoir               9     1
   156        3515       no      CONT_EV_qfer               1
   157        3524       no      CONT_EV_qfeir              6     1
   158        3533       no      CONT_EV_qfeijr             6     7     1
   159        3541       no      CONT_EV_qfmr               1
   160        3550       no      CONT_EV_qfmir              2     1
   161        3559       no      CONT_EV_qfmijr             2     7     1
   162        3567       no      CONT_EV_qfdr               1
   163        3576       no      CONT_EV_qfdir              2     1
   164        3585       no      CONT_EV_qfdijr             2     7     1
   165        3593       no      CONT_EV_qpmr               1
   166        3602       no      CONT_EV_qpmir              2     1
   167        3609       no      CONT_EV_qpdr               1
   168        3618       no      CONT_EV_qpdir              2     1
   169        3625       no      CONT_EV_qgmr               1
   170        3634       no      CONT_EV_qgmir              2     1
   171        3641       no      CONT_EV_qgdr               1
   172        3650       no      CONT_EV_qgdir              2     1
   173        3657       no      CONT_EV_qxsr               1
   174        3666       no      CONT_EV_qxsirs             2     1     1
   175        3674       no      CONT_EV_qimr               1
   176        3683       no      CONT_EV_qimisr             2     1     1
   177        3690       no      CONT_EV_alleffr            1
   178        3712       no      CONT_EV_alleffir_E         6     1
   179        3718       no      CONT_EV_alleffir_T         2     1
   180        3735       no      CONT_EV_totr               1
   181        3746       no      CNT_EV_cgdsr               1
   182        3754       no      CONT_EV_endwr              1
   183        3763       no      CONT_EV_endwir             6     1
   184        3769       no      CONT_EV_techr              1
   185        3785       no      CONT_EV_tech_aor           1
   186        3793       no      CONT_EV_tech_aoir          7     1
   187        3800       no      CONT_EV_tech_afer          1
   188        3809       no      CONT_EV_tech_afeijr        6     7     1
   189        3816       no      CONT_EV_tech_avar          1
   190        3824       no      CONT_EV_tech_avajr         7     1
   191        3831       no      CONT_EV_tech_afr           1
   192        3841       no      CONT_EV_tech_afijr         2     7     1
   193        3849       no      CONT_EV_tech_atrr          1
   194        3859       no      CONT_EV_tech_afmfdsd       3     2     1     1

   195        3866       no      CONT_EV_tech_amsr          1
   196        3875       no      CONT_EV_tech_amsirs        2     1     1
   197        3882       no      CONT_EV_kbr                1
   198        3947       no      EXPPRICE_MARG              3     1
   199        3952       no      EXPPRICE_NMRG              4     1
   200        3969       no      IMPPRICE1_MARG             3     1
   201        3974       no      IMPPRICE1_NMRG             4     1
   202        3991       no      WRLDPRICEi                 2
   203        4011       no      WRLDPRICE           
   204        4017       no      c1_irEQ                    2     1
   205        4024       no      c2_irEQ                    2     1
   206        4031       no      c3_irEQ                    2     1
   207        4038       no      c1_rEQ                     1
   208        4045       no      c2_rEQ                     1
   209        4052       no      c3_rEQ                     1
   210        4059       no      TOT2eq                     1




 ================
 ++ FORMULA TABLE
 ================

           Defined   Semantic      LHS                RHS
  Number   at line    Error?    coefficient       coefficient numbers
  -------------------------------------------------------------------
     1         196     no      SIZE_TRAD   
     2         200     no      SIZE_ENDW   
     3         204     no      SIZE_DEMD   
     4         206     no      Assertion          4     2     3
     5         211     no      SIZE_CGDS   
     6         215     no      SIZE_PROD   
     7         217     no      Assertion          6     2     5
     8         231     no      Fm for Set         7
     9         652     no      VFA               18
    10         654     no      VFA               19    20
    11         659     no      VOA               17
    12         661     no      VOA               30
    13         666     no      VDM               14    10    23
    14         671     no      VOM               21
    15         673     no      VOM               32    28    29
    16         675     no      VOM               32    28
    17         677     no      VOM               31
    18         715     no      VGA                9    11
    19         719     no      GOVEXP            34
    20         725     no      VPA               13    15
    21         729     no      PRIVEXP           36
    22         735     no      INCOME            37    35     8
    23         746     no      DGTAX              9    10
    24         750     no      IGTAX             11    12
    25         754     no      TGC               39    40
    26         759     no      DPTAX             13    14
    27         763     no      IPTAX             15    16
    28         767     no      TPC               42    43
    29         772     no      DFTAX             19    23
    30         776     no      IFTAX             20    22
    31         780     no      TIU               45    46
    32         785     no      ETAX              30    21
    33         789     no      TFU               48
    34         794     no      PTAX              33    31
    35         798     no      TOUT              50
    36         803     no      XTAXD             27    28
    37         807     no      TEX               52
    38         812     no      MTAX              25    26
    39         816     no      TIM               54
    40         835     no      REGINV            31
    41         839     no      NETINV            31    24
    42         843     no      GLOBINV           58
    43         849     no      CONSHR            36
    44         859     no      UELASPRIV         60    61
    45         947     no      GMSHR             11    34
    46        1023     no      XWCONSHR          60    61    62
    47        1049     no      ALPHA             65
    48        1054     no      APE               66    60
    49        1057     no      APE               66    60
    50        1065     no      EY                60    61    66
    51        1075     no      EP          
    52        1077     no      EP                67    68    60
    53        1107     no      LevTPD            13    14
    54        1148     no      PMSHR             15    36
    55        1342     no      FMSHR             20    30
    56        1393     no      VVA               30
    57        1397     no      SVADEFAULT        30    74
    58        1403     no      SVA               74    30
    59        1405     no      SVA               74    75
    60        1465     no      STC               30
    61        1582     no      INVKERATIO        57    79    58
    62        1598     no      GRNETRATIO        31    24
    63        1808     no      MSHRS             25
    64        1919     no      VTFSD             86
    65        1928     no      VTMUSE            86
    66        1933     no      VTMPROV           29
    67        1941     no      VTRPROV           29
    68        1946     no      VT                29
    69        1976     no      VTMUSESHR         87    91
    70        1978     no      VTMUSESHR         88    86
    71        1997     no      VTSUPPSHR         90    91
    72        1999     no      VTSUPPSHR         89    29
    73        2019     no      VTUSE             86
    74        2026     no      VTFSD_MSH         87    86
    75        2029     no      VTFSD_MSH         87    88    94
    76        2057     no      VIWSCOST          27    87
    77        2062     no      FOBSHR            27    96
    78        2067     no      TRNSHR            87    96
    79        2106     no      XSHRPRIV          37    38
    80        2111     no      XSHRGOV           35    38
    81        2116     no      XSHRSAVE           8    38
    82        2142     no      TINC              50
    83        2154     no      REVSHR            21
    84        2183     no      FY                33    24
    85        2225     no      INDTAX            44    41    47    49    51
                                                 53    55
    86        2309     no      UTILELAS          62    99   100   101   107

    87        2315     no      DPARPRIV          62    99   108
    88        2320     no      DPARGOV          100   108
    89        2325     no      DPARSAVE         101   108
    90        2330     no      UTILPRIV    
    91        2337     no      UTILGOV     
    92        2344     no      UTILSAVE    
    93        2387     no      SHRDFM            23    32
    94        2392     no      SHRDPM            14    32
    95        2397     no      SHRDGM            10    32
    96        2412     no      SHRDM             32    33
    97        2417     no      SHRST             29    33
    98        2422     no      SHRXMD            28    33
    99        2451     no      VIM               22    16    12
   100        2456     no      SHRIFM            22   121
   101        2461     no      SHRIPM            16   121
   102        2466     no      SHRIGM            12   121
   103        2479     no      SHREM             21    33
   104        2592     no      VXW               27    29
   105        2594     no      VXW               27
   106        2599     no      VXWREGION        126
   107        2604     no      VIW               26
   108        2608     no      VIWREGION        128
   109        2630     no      VENDWREG          33
   110        2642     no      VENDWWLD         130
   111        2700     no      GDP               36    34    31    27    29
                                                 26
   112        2790     no      VXWCOMMOD        126
   113        2795     no      VXWLD            127
   114        2800     no      VIWCOMMOD        128
   115        2805     no      PW_PM             27    28
   116        2809     no      VOW               32   136    27    29
   117        2811     no      VOW               32   136    27
   118        2816     no      VWOW             137
   119        2821     no      VWOU              36    34    30
   120        3106     no      TBAL             127   129
   121        3173     no      INCOMEEV          38
   122        3180     no      UTILPRIVEV       112
   123        3187     no      UTILGOVEV        113
   124        3194     no      UTILSAVEEV       114
   125        3223     no      VPAEV             36
   126        3230     no      VPAREGEV         145
   127        3239     no      CONSHREV         145   146
   128        3244     no      EYEV             147    61    66
   129        3263     no      UELASPRIVEV      147    61
   130        3274     no      XWCONSHREV       147    61   149
   131        3299     no      PRIVEXPEV         37
   132        3310     no      GOVEXPEV          35
   133        3318     no      SAVEEV             8
   134        3326     no      XSHRPRIVEV       151   141
   135        3332     no      XSHRGOVEV        152   141
   136        3337     no      XSHRSAVEEV       153   141
   137        3382     no      UTILELASEV       108
   138        3426     no      EVSCALFACT       157   108   141    38
   139        3431     no      VTMD              86
   140        3898     no      SX_IR             27    29
   141        3903     no      SX_IR             27    29
   142        3911     no      VTICOMM           86
   143        3916     no      VIWDIRALL         27   161
   144        3918     no      VIWDIRALL         27
   145        3923     no      VIWDATOT         162
   146        3928     no      SM_IR            162   163
   147        3934     no      SX_IRS            27    29
   148        3936     no      SX_IRS            27
   149        3942     no      SXT_IR            29    27
   150        3959     no      SM_IRS            27   162
   151        3964     no      SMT_IR           161   162
   152        3981     no      SW_IR             27    29
   153        3985     no      SW_IR             27
   154        3998     no      SW_I              27    29
   155        4003     no      SW_I              27    29




 ===============
 ++ UPDATE TABLE
 ===============

           Defined   Semantic    Updated         RHS coeff/var nos
  Number   at line    Error?    coefficient       (vars are negative)
  -------------------------------------------------------------------
     1         158     no      VERNUM             1
     2         293     no      SAVE               8    -1    -2
     3         310     no      VDGA               9    -3    -4
     4         319     no      VDGM              10    -5    -4
     5         330     no      VIGA              11    -6    -7
     6         339     no      VIGM              12    -8    -7
     7         356     no      VDPA              13    -9   -10
     8         363     no      VDPM              14    -5   -10
     9         374     no      VIPA              15   -11   -12
    10         381     no      VIPM              16    -8   -12
    11         398     no      EVOA              17   -13   -14
    12         409     no      EVFA              18   -15   -16
    13         420     no      VDFA              19   -17   -18
    14         431     no      VIFA              20   -19   -20
    15         440     no      VFM               21    -5   -16
    16         442     no      VFM               21   -21   -16
    17         449     no      VIFM              22    -8   -20
    18         456     no      VDFM              23    -5   -18
    19         473     no      VDEP              24   -22   -23
    20         494     no      VIMS              25   -24   -25
    21         503     no      VIWS              26   -26   -25
    22         512     no      VXWD              27   -27   -25
    23         520     no      VXMD              28    -5   -25
    24         530     no      VST               29    -5   -28
    25        1569     no      VKB               79   -23   -22
    26        1912     no      VTMFSD            86  -114  -105
    27        2304     no      DPARSUM          107  -126
    28        2332     no      UTILPRIV         112   -39
    29        2339     no      UTILGOV          113   -35
    30        2346     no      UTILSAVE         114    -2   -30
    31        3175     no      INCOMEEV         141  -178
    32        3182     no      UTILPRIVEV       142  -176
    33        3189     no      UTILGOVEV        143  -175
    34        3196     no      UTILSAVEEV       144  -177   -30
    35        3225     no      VPAEV            145  -181
    36        3301     no      PRIVEXPEV        151  -179
    37        3312     no      GOVEXPEV         152  -180
    38        3320     no      SAVEEV           153  -182
    39        3384     no      UTILELASEV       157  -173




 =============
 ++ READ TABLE
 =============

           Defined    Semantic  Coefficient   File number
  Number   at line     Error?    read into     read from   Header
  ---------------------------------------------------------------
     1        156       no      VERNUM              2       DVER
     2        228       no      SLUG                3       SLUG
     3        295       no      SAVE                2       SAVE
     4        312       no      VDGA                2       VDGA
     5        321       no      VDGM                2       VDGM
     6        332       no      VIGA                2       VIGA
     7        341       no      VIGM                2       VIGM
     8        358       no      VDPA                2       VDPA
     9        365       no      VDPM                2       VDPM
    10        376       no      VIPA                2       VIPA
    11        383       no      VIPM                2       VIPM
    12        400       no      EVOA                2       EVOA
    13        411       no      EVFA                2       EVFA
    14        422       no      VDFA                2       VDFA
    15        433       no      VIFA                2       VIFA
    16        444       no      VFM                 2       VFM 
    17        451       no      VIFM                2       VIFM
    18        458       no      VDFM                2       VDFM
    19        475       no      VDEP                2       VDEP
    20        496       no      VIMS                2       VIMS
    21        505       no      VIWS                2       VIWS
    22        514       no      VXWD                2       VXWD
    23        522       no      VXMD                2       VXMD
    24        532       no      VST                 2       VST 
    25        829       no      ESUBD               3       ESBD
    26        854       no      INCPAR              3       INCP
    27       1041       no      SUBPAR              3       SUBP
    28       1263       no      ESUBT               3       ESBT
    29       1424       no      ESUBVA              3       ESBV
    30       1571       no      VKB                 2       VKB 
    31       1613       no      RORFLEX             3       RFLX
    32       1653       no      RORDELTA            3       RDLT
    33       1836       no      ESUBM               3       ESBM
    34       1914       no      VTMFSD              2       VTWR
    35       2164       no      ETRAE               3       ETRE
    36       2302       no      DPARSUM             2       DPSM
    37       2330       no      UTILPRIV       TERMINAL         
    38       2337       no      UTILGOV        TERMINAL         
    39       2344       no      UTILSAVE       TERMINAL         
    40       3173       no      INCOMEEV       TERMINAL         
    41       3180       no      UTILPRIVEV     TERMINAL         
    42       3187       no      UTILGOVEV      TERMINAL         
    43       3194       no      UTILSAVEEV     TERMINAL         
    44       3223       no      VPAEV          TERMINAL         
    45       3299       no      PRIVEXPEV      TERMINAL         
    46       3310       no      GOVEXPEV       TERMINAL         
    47       3318       no      SAVEEV         TERMINAL         
    48       3382       no      UTILELASEV     TERMINAL         




 ===================
 ++ ZERODIVIDE TABLE
 ===================

           Defined          Coefficient or
  Number   at line   Type   real value specified
  -----------------------------------------------
     1       1106     ZDZ   1                   
     2       1108     ZDZ   (Turned OFF)
     3       3931     ZDZ   0                   
     4       3938     ZDZ   (Turned OFF)


   
 ======================
 ++ INPUT CHECK SUMMARY
 ======================
 
 Total number of statements is 896.
 There are NO syntax errors or semantic problems.


 ******************************************************************************
 -3-
 -->                     Starting CONDENSATION

 ******************************************************************************



 ==================================================
 +1+
 ++>Task   1 - omission of   9 variables
 ==================================================


     List of variables to omit :
     ---------------------------

      1  atall          
      2  avaall         
      3  tf             
      4  tfd            
      5  tfm            
      6  tgd            
      7  tgm            
      8  tpd            
      9  tpm            

     Equations affected by this omission :
     --------------------------------------

      Equation  Equation name
      --------------------------
      This omission was made in the following updates :
      -------------------------------------------------

          4     GHHDPRICE           
          5     GHHIPRICES          
          9     TGCRATIO            
         14     TPDSHIFT            
         16     TPMSHIFT            
         23     AVAWORLD            
         27     DMNDDPRICE          
         28     DMNDIPRICES         
         29     TIURATIO            
         33     MPFACTPRICE         
         34     SPFACTPRICE         
         37     TFURATIO            
         66     TRANSTECHANGE       
      This omission was made in the following updates :
      -------------------------------------------------

 
 This omission was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 1.

 ==================================================
 +2+
 ++> Task   2 - Substituting out variable 'pgov'
 ==================================================


  >> Equation number   1 selected for substitution.
     Equation name is 'GPRICEINDEX'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GOVDMNDS (equation number   2)
     GOVU (equation number   3)
     PRICEINDEXREG (equation number  82)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 2.

 ==================================================
 +3+
 ++> Task   3 - Substituting out variable 'qg'
 ==================================================


  >> Equation number   2 selected for substitution.
     Equation name is 'GOVDMNDS'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GHHLDAGRIMP (equation number   7)
     GHHLDDOM (equation number   8)
     VGDP_r (equation number 100)
 
 To simplify the 'pop' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00171(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,VGA(i,r))

 
 To simplify the 'pg' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00172(i,r)

  equal to the following expression:
 
          -VGA(i,r) * {-1.0 + 1.0} + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(i,r)

           / GOVEXP(r))

     QGDP_r (equation number 102)
 
 To simplify the 'pg' part of equation 'QGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00173(i,r)

  equal to the following expression:
 
          VGA(i,r) + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(i,r) / GOVEXP(r))

     VWLDOUTUSE (equation number 113)
     QWLDOUTU (equation number 133)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 3.

 ==================================================
 +4+
 ++> Task   4 - Substituting out variable 'pgd'
 ==================================================


  >> Equation number   4 selected for substitution.
     Equation name is 'GHHDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GCOMPRICE (equation number   6)
     GHHLDDOM (equation number   8)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 4.

 ==================================================
 +5+
 ++> Task   5 - Substituting out variable 'pgm'
 ==================================================


  >> Equation number   5 selected for substitution.
     Equation name is 'GHHIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GCOMPRICE (equation number   6)
     GHHLDAGRIMP (equation number   7)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 5.

 ==================================================
 +6+
 ++> Task   6 - Substituting out variable 'pg'
 ==================================================


  >> Equation number   6 selected for substitution.
     Equation name is 'GCOMPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GOVU (equation number   3)
     GHHLDAGRIMP (equation number   7)
     GHHLDDOM (equation number   8)
     PRICEINDEXREG (equation number  82)
     VGDP_r (equation number 100)
     PGDP_r (equation number 101)
     QGDP_r (equation number 102)
     VWLDOUTUSE (equation number 113)
     PWLDUSE (equation number 123)
     QWLDOUTU (equation number 133)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 6.

 ==================================================
 +7+
 ++> Task   7 - Substituting out variable 'qgm'
 ==================================================


  >> Equation number   7 selected for substitution.
     Equation name is 'GHHLDAGRIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TGCRATIO (equation number   9)
 
 To simplify the 'pm' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00174(i,r)

  equal to the following expression:
 
          -{DGTAX(i,r) + IGTAX(i,r) * [-1.0 + ESUBD(i)] * [1   - GMSHR(i,r)]}

           + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1   - 

          GMSHR(i,r)})

 
 To simplify the 'pim' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00175(i,r)

  equal to the following expression:
 
          -IGTAX(i,r) * {1.0 - [ESUBD(i) - (-1.0 + ESUBD(i)) * GMSHR(i,r)]} + -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))

 
 To simplify the 'pop' part of equation 'TGCRATIO', we will set
 
          (ALL,r,REG) C00176(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IGTAX(i,r))

     MKTCLIMP (equation number  88)
     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00177(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-1.0 + ESUBD(i)} * {1   - 

          GMSHR(i,r)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1   - GMSHR(i,r)})

 
 To simplify the 'pim' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00178(i,r)

  equal to the following expression:
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {ESUBD(i) - [-1.0 + ESUBD(i)]

           * GMSHR(i,r)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))

 
 To simplify the 'pop' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00179(r)

  equal to the following expression:
 
          -{0.01   * EVSCALFACT(r) * [SUM(i,NSAV_COMM,-PTAX(i,r)) + 

          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r))) + SUM(i,TRAD_COMM,

          SUM(j,PROD_COMM,-IFTAX(i,j,r))) + SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-

          DFTAX(i,j,r))) + SUM(i,TRAD_COMM,-IPTAX(i,r)) + SUM(i,TRAD_COMM,-

          DPTAX(i,r)) + SUM(i,TRAD_COMM,IGTAX(i,r) * (1.0 - 1.0)) + 

          SUM(i,TRAD_COMM,-DGTAX(i,r)) + SUM(i,TRAD_COMM,SUM(s,REG,-XTAXD(i,r,

          s))) + SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r))) + SUM(i,ENDW_COMM,-

          VOA(i,r)) + VDEP(r)] + 0.01   * INCOMEEV(r)}

 
 To simplify the 'ug' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00180(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,IGTAX(i,r))

     CONT_EV_qgmr (equation number 169)
 
 To simplify the 'pm' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00181(i,r)

  equal to the following expression:
 
          -IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {-1.0 + ESUBD(i)} * {1   - 

          GMSHR(i,r)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * {1   - GMSHR(i,r)})

 
 To simplify the 'pim' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00182(i,r)

  equal to the following expression:
 
          IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {ESUBD(i) - [-1.0 + ESUBD(i)]

           * GMSHR(i,r)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))

 
 To simplify the 'pop' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,r,REG) C00183(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {1.0 - 1.0})

 
 To simplify the 'ug' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,r,REG) C00184(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IGTAX(i,r) * 0.01   * EVSCALFACT(r))

     CONT_EV_qgmir (equation number 170)
     CONT_EV_alleffr (equation number 177)
 
 To simplify the 'pop' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00185(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * {SUM(i,NSAV_COMM,-PTAX(i,r)) + 

          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r))) + SUM(i,TRAD_COMM,

          SUM(j,PROD_COMM,-IFTAX(i,j,r))) + SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-

          DFTAX(i,j,r))) + SUM(i,TRAD_COMM,-IPTAX(i,r)) + SUM(i,TRAD_COMM,-

          DPTAX(i,r)) + SUM(i,TRAD_COMM,IGTAX(i,r) * [1.0 - 1.0]) + 

          SUM(i,TRAD_COMM,-DGTAX(i,r)) + SUM(i,TRAD_COMM,SUM(s,REG,-XTAXD(i,r,

          s))) + SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r)))}

     CONT_EV_alleffir_T (equation number 179)
 
 To simplify the 'pop' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00186(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * {-PTAX(i,r) + SUM(j,PROD_COMM,-IFTAX(i,j,r)

          ) + SUM(j,PROD_COMM,-DFTAX(i,j,r)) - IPTAX(i,r) - DPTAX(i,r) + 

          IGTAX(i,r) * [1.0 - 1.0] - DGTAX(i,r) + SUM(s,REG,-XTAXD(i,r,s)) + 

          SUM(s,REG,-MTAX(i,s,r))}

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 7.

 ==================================================
 +8+
 ++> Task   8 - Substituting out variable 'qp'
 ==================================================


  >> Equation number  13 selected for substitution.
     Equation name is 'PRIVDMNDS'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     UTILELASPRIV (equation number  12)
 
 To simplify the 'pop' part of equation 'UTILELASPRIV', we will set
 
          (ALL,r,REG) C00187(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,-XWCONSHR(i,r) * {-1.0 + EY(i,r)})

 
 To simplify the 'yp' part of equation 'UTILELASPRIV', we will set
 
          (ALL,r,REG) C00188(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,XWCONSHR(i,r) * {EY(i,r) - 1.0})

 
 To simplify the 'pp' part of equation 'UTILELASPRIV', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00189(i,r)

  equal to the following expression:
 
          -XWCONSHR(i,r) + -SUM(XX01,TRAD_COMM,XWCONSHR(XX01,r) * EP(XX01,i,r))

     PHHLDDOM (equation number  20)
     PHHLDAGRIMP (equation number  21)
     VGDP_r (equation number 100)
 
 To simplify the 'pop' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00190(r)

  equal to the following expression:
 
          C00171(r) + SUM(i,TRAD_COMM,VPA(i,r) * {-1.0 + EY(i,r)})

 
 To simplify the 'yp' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00191(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-VPA(i,r) * EY(i,r))

 
 To simplify the 'pp' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00192(i,r)

  equal to the following expression:
 
          -VPA(i,r) + SUM(XX01,TRAD_COMM,-VPA(XX01,r) * EP(XX01,i,r))

     QGDP_r (equation number 102)
 
 To simplify the 'pp' part of equation 'QGDP_r', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00193(k,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-VPA(i,r) * EP(i,k,r))

     VWLDOUTUSE (equation number 113)
     QWLDOUTU (equation number 133)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 8.

 ==================================================
 +9+
 ++> Task   9 - Substituting out variable 'ppd'
 ==================================================


  >> Equation number  15 selected for substitution.
     Equation name is 'PHHDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     PCOMPRICE (equation number  19)
     PHHLDDOM (equation number  20)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 9.

 ==================================================
 +10+
 ++> Task  10 - Substituting out variable 'ppm'
 ==================================================


  >> Equation number  17 selected for substitution.
     Equation name is 'PHHIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     PCOMPRICE (equation number  19)
     PHHLDAGRIMP (equation number  21)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 10.

 ==================================================
 +11+
 ++> Task  11 - Substituting out variable 'qpm'
 ==================================================


  >> Equation number  21 selected for substitution.
     Equation name is 'PHHLDAGRIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TPCRATIO (equation number  18)
 
 To simplify the 'pop' part of equation 'TPCRATIO', we will set
 
          (ALL,r,REG) C00194(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,-IPTAX(i,r) * {-1.0 + EY(i,r)})

 
 To simplify the 'yp' part of equation 'TPCRATIO', we will set
 
          (ALL,r,REG) C00195(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * EY(i,r))

 
 To simplify the 'pp' part of equation 'TPCRATIO', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00196(k,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * EP(i,k,r)) + -IPTAX(k,r) * ESUBD(k)

     MKTCLIMP (equation number  88)
     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'pop' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00197(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,0.01   * EVSCALFACT(r) * IPTAX(i,r) * {-1.0 + EY(i,r)

          }) + C00179(r)

 
 To simplify the 'yp' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00198(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IPTAX(i,r) * EY(i,r))

 
 To simplify the 'pp' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00199(k,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IPTAX(i,r) * EP(i,k,r)) + -

          0.01   * EVSCALFACT(r) * IPTAX(k,r) * ESUBD(k)

     CONT_EV_qpmr (equation number 165)
 
 To simplify the 'pop' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,r,REG) C00200(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * 0.01   * EVSCALFACT(r) * {-[-1.0 + 

          EY(i,r)] - 1.0})

 
 To simplify the 'yp' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,r,REG) C00201(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * 0.01   * EVSCALFACT(r) * EY(i,r))

 
 To simplify the 'pp' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00202(k,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * 0.01   * EVSCALFACT(r) * EP(i,k,r)) + -

          IPTAX(k,r) * 0.01   * EVSCALFACT(r) * ESUBD(k)

     CONT_EV_qpmir (equation number 166)
     CONT_EV_alleffr (equation number 177)
 
 To simplify the 'pop' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00203(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,0.01   * EVSCALFACT(r) * IPTAX(i,r) * {-1.0 + EY(i,r)

          }) + C00185(r)

     CONT_EV_alleffir_T (equation number 179)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 11.

 ==================================================
 +12+
 ++> Task  12 - Substituting out variable 'ao'
 ==================================================


  >> Equation number  22 selected for substitution.
     Equation name is 'AOWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VADEMAND (equation number  24)
     INTDEMAND (equation number  26)
     ZEROPROFITS (equation number  41)
 
 To simplify the 'ava' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00204(j,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,-STC(i,j,r))

     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00205(r)

  equal to the following expression:
 
          SUM(i,PROD_COMM,-0.01   * EVSCALFACT(r) * VOA(i,r))

     CONT_EV_techr (equation number 184)
 
 To simplify the 'aoreg' part of equation 'CONT_EV_techr', we will set
 
          (ALL,r,REG) C00206(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(i,PROD_COMM,VOA(i,r))

     CONT_EV_tech_aor (equation number 185)
     CONT_EV_tech_aoir (equation number 186)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 12.

 ==================================================
 +13+
 ++> Task  13 - Substituting out variable 'ava'
 ==================================================


  >> Equation number  23 selected for substitution.
     Equation name is 'AVAWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VADEMAND (equation number  24)
     ZEROPROFITS (equation number  41)
     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'avareg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00207(r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VVA(j,r))

     CONT_EV_techr (equation number 184)
     CONT_EV_tech_avar (equation number 189)
 
 To simplify the 'avareg' part of equation 'CONT_EV_tech_avar', we will set
 
          (ALL,r,REG) C00208(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VVA(j,r))

     CONT_EV_tech_avajr (equation number 190)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 13.

 ==================================================
 +14+
 ++> Task  14 - Substituting out variable 'qva'
 ==================================================


  >> Equation number  24 selected for substitution.
     Equation name is 'VADEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ENDWDEMAND (equation number  38)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 14.

 ==================================================
 +15+
 ++> Task  15 - Substituting out variable 'af'
 ==================================================


  >> Equation number  25 selected for substitution.
     Equation name is 'AFWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INTDEMAND (equation number  26)
     ZEROPROFITS (equation number  41)
 
 To simplify the 'afsec' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00209(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,STC(i,j,r))

     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'afcom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00210(i,r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

 
 To simplify the 'afsec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00211(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

 
 To simplify the 'afreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00212(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

          )

     CONT_EV_techr (equation number 184)
 
 To simplify the 'afcom' part of equation 'CONT_EV_techr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00213(i,r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,r) + VDFA(i,j,r)}

          )

 
 To simplify the 'afsec' part of equation 'CONT_EV_techr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00214(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,r) + VDFA(i,j,r)}

          )

 
 To simplify the 'afreg' part of equation 'CONT_EV_techr', we will set
 
          (ALL,r,REG) C00215(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,

          r) + VDFA(i,j,r)}))

     CONT_EV_tech_afr (equation number 191)
 
 To simplify the 'afcom' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00216(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VIFA(i,j,r) + VDFA(i,j,r))

 
 To simplify the 'afsec' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00217(j,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,VIFA(i,j,r) + VDFA(i,j,r))

 
 To simplify the 'afreg' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,r,REG) C00218(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,SUM(i,TRAD_COMM,VIFA(i,j,r)

           + VDFA(i,j,r)))

     CONT_EV_tech_afijr (equation number 192)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 15.

 ==================================================
 +16+
 ++> Task  16 - Substituting out variable 'qf'
 ==================================================


  >> Equation number  26 selected for substitution.
     Equation name is 'INTDEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INDIMP (equation number  31)
     INDDOM (equation number  32)
     VWLDOUTUSE (equation number 113)
 
 To simplify the 'aosec' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,j,PROD_COMM) C00219(i,j)

  equal to the following expression:
 
          SUM(s,REG,-VFA(i,j,s) * {-1.0 + ESUBT(j)})

 
 To simplify the 'aoreg' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00220(i,s)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-VFA(i,j,s) * {-1.0 + ESUBT(j)})

 
 To simplify the 'afcom' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) C00221(i)

  equal to the following expression:
 
          SUM(j,PROD_COMM,SUM(s,REG,-VFA(i,j,s) * {-1.0 + ESUBT(j)}))

     QWLDOUTU (equation number 133)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 16.

 ==================================================
 +17+
 ++> Task  17 - Substituting out variable 'pfd'
 ==================================================


  >> Equation number  27 selected for substitution.
     Equation name is 'DMNDDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ICOMPRICE (equation number  30)
     INDDOM (equation number  32)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 17.

 ==================================================
 +18+
 ++> Task  18 - Substituting out variable 'pfm'
 ==================================================


  >> Equation number  28 selected for substitution.
     Equation name is 'DMNDIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ICOMPRICE (equation number  30)
     INDIMP (equation number  31)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 18.

 ==================================================
 +19+
 ++> Task  19 - Substituting out variable 'pf'
 ==================================================


  >> Equation number  30 selected for substitution.
     Equation name is 'ICOMPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INDIMP (equation number  31)
     INDDOM (equation number  32)
     ZEROPROFITS (equation number  41)
     VWLDOUTUSE (equation number 113)
 
 To simplify the 'pm' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00222(i,s)

  equal to the following expression:
 
          -VGA(i,s) * {1.0 - 1.0} * {1   - GMSHR(i,s)} + SUM(j,PROD_COMM,{-

          VFA(i,j,s) + VFA(i,j,s) * ESUBT(j)} * {1   - FMSHR(i,j,s)})

 
 To simplify the 'pim' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00223(i,s)

  equal to the following expression:
 
          -VGA(i,s) * {1.0 - 1.0} * GMSHR(i,s) + SUM(j,PROD_COMM,{-VFA(i,j,s)

           + VFA(i,j,s) * ESUBT(j)} * FMSHR(i,j,s))

     PWLDUSE (equation number 123)
 
 To simplify the 'pm' part of equation 'PWLDUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00224(i,s)

  equal to the following expression:
 
          -VGA(i,s) * {1   - GMSHR(i,s)} + SUM(j,PROD_COMM,-VFA(i,j,s) * {1  

           - FMSHR(i,j,s)})

 
 To simplify the 'pim' part of equation 'PWLDUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00225(i,s)

  equal to the following expression:
 
          -VGA(i,s) * GMSHR(i,s) + SUM(j,PROD_COMM,-VFA(i,j,s) * FMSHR(i,j,s))

     QWLDOUTU (equation number 133)
 
 To simplify the 'pm' part of equation 'QWLDOUTU', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00226(i,s)

  equal to the following expression:
 
          VGA(i,s) * {1   - GMSHR(i,s)} + SUM(j,PROD_COMM,VFA(i,j,s) * ESUBT(j)

           * {1   - FMSHR(i,j,s)})

 
 To simplify the 'pim' part of equation 'QWLDOUTU', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00227(i,s)

  equal to the following expression:
 
          VGA(i,s) * GMSHR(i,s) + SUM(j,PROD_COMM,VFA(i,j,s) * ESUBT(j) * 

          FMSHR(i,j,s))

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 19.

 ==================================================
 +20+
 ++> Task  20 - Substituting out variable 'qfm'
 ==================================================


  >> Equation number  31 selected for substitution.
     Equation name is 'INDIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TIURATIO (equation number  29)
 
 To simplify the 'pm' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00228(i,r)

  equal to the following expression:
 
          -{SUM(j,PROD_COMM,DFTAX(i,j,r)) + SUM(j,PROD_COMM,IFTAX(i,j,r) * [-

          ESUBT(j) + ESUBD(i)] * [1   - FMSHR(i,j,r)])}

 
 To simplify the 'pim' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00229(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * {1.0 - [ESUBD(i) - (-ESUBT(j) + 

          ESUBD(i)) * FMSHR(i,j,r)]})

 
 To simplify the 'ps' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00230(j,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * ESUBT(j))

 
 To simplify the 'qo' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00231(j,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r))

 
 To simplify the 'aosec' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00232(j,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j)})

 
 To simplify the 'aoreg' part of equation 'TIURATIO', we will set
 
          (ALL,r,REG) C00233(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j)}))

 
 To simplify the 'afcom' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00234(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j)})

     MKTCLIMP (equation number  88)
 
 To simplify the 'pm' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00235(i,r)

  equal to the following expression:
 
          -SHRIGM(i,r) * {-1.0 + ESUBD(i)} * {1   - GMSHR(i,r)} + 

          SUM(j,PROD_COMM,-SHRIFM(i,j,r) * {-ESUBT(j) + ESUBD(i)} * {1   - 

          FMSHR(i,j,r)})

 
 To simplify the 'pim' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00236(i,r)

  equal to the following expression:
 
          SHRIGM(i,r) * {ESUBD(i) - [-1.0 + ESUBD(i)] * GMSHR(i,r)} + SHRIPM(i,

          r) * ESUBD(i) + SUM(j,PROD_COMM,SHRIFM(i,j,r) * {ESUBD(i) - [-

          ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})

 
 To simplify the 'aoreg' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00237(i,r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-SHRIFM(i,j,r) * {-1.0 + ESUBT(j)})

     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00238(i,r)

  equal to the following expression:
 
          C00177(i,r) + SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r)

           * {-ESUBT(j) + ESUBD(i)} * {1   - FMSHR(i,j,r)})

 
 To simplify the 'pim' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00239(i,r)

  equal to the following expression:
 
          C00178(i,r) + 0.01   * EVSCALFACT(r) * IPTAX(i,r) * ESUBD(i) + 

          SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {ESUBD(i) - [

          -ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})

 
 To simplify the 'ps' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00240(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * ESUBT(j))

 
 To simplify the 'qo' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00241(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r))

 
 To simplify the 'aosec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00242(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + -0.01   * EVSCALFACT(r) * VOA(j,r)

 
 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00243(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j)})) + C00205(r)

 
 To simplify the 'afcom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00244(i,r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + C00210(i,r)

 
 To simplify the 'afsec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00245(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + C00211(j,r)

 
 To simplify the 'afreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00246(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j)})) + C00212(r)

     CONT_EV_qfmr (equation number 159)
 
 To simplify the 'pm' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00247(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-ESUBT(j)

           + ESUBD(i)} * {1   - FMSHR(i,j,r)})

 
 To simplify the 'pim' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00248(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {ESUBD(i)

           - [-ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})

 
 To simplify the 'ps' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00249(j,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * ESUBT(j))

 
 To simplify the 'qo' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00250(j,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r))

 
 To simplify the 'pop' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,r,REG) C00251(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * 

          EVSCALFACT(r)))

 
 To simplify the 'aosec' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00252(j,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j)})

 
 To simplify the 'aoreg' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,r,REG) C00253(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * 

          EVSCALFACT(r) * {-1.0 + ESUBT(j)}))

 
 To simplify the 'afcom' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00254(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j)})

     CONT_EV_qfmir (equation number 160)
 
 To simplify the 'pop' part of equation 'CONT_EV_qfmir', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00255(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * EVSCALFACT(r))

     CONT_EV_qfmijr (equation number 161)
     CONT_EV_alleffr (equation number 177)
 
 To simplify the 'aosec' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00256(j,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)})

 
 To simplify the 'aoreg' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00257(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j)}))

 
 To simplify the 'afcom' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00258(i,r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)})

     CONT_EV_alleffir_T (equation number 179)
 
 To simplify the 'pm' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00259(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-1.0 + ESUBD(i)} * {1   - 

          GMSHR(i,r)} + SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r)

           * {-ESUBT(j) + ESUBD(i)} * {1   - FMSHR(i,j,r)})

 
 To simplify the 'pim' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00260(i,r)

  equal to the following expression:
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {ESUBD(i) - [-1.0 + ESUBD(i)]

           * GMSHR(i,r)} + 0.01   * EVSCALFACT(r) * IPTAX(i,r) * ESUBD(i) + 

          SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {ESUBD(i) - [

          -ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 20.

 ==================================================
 +21+
 ++> Task  21 - Substituting out variable 'afe'
 ==================================================


  >> Equation number  35 selected for substitution.
     Equation name is 'AFEWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VAPRICE (equation number  36)
 
 To simplify the 'afesec' part of equation 'VAPRICE', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00261(j,r)

  equal to the following expression:
 
          -SUM(k,ENDW_COMM,-SVA(k,j,r))

     ENDWDEMAND (equation number  38)
     ZEROPROFITS (equation number  41)
 
 To simplify the 'afesec' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00262(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,STC(i,j,r))

     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'afecom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00263(i,r)

  equal to the following expression:
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

 
 To simplify the 'afesec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00264(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

 
 To simplify the 'afereg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00265(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

          )

     CONT_EV_techr (equation number 184)
     CONT_EV_tech_afer (equation number 187)
 
 To simplify the 'afecom' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00266(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VFA(i,j,r))

 
 To simplify the 'afesec' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00267(j,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(i,ENDW_COMM,VFA(i,j,r))

 
 To simplify the 'afereg' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,r,REG) C00268(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,SUM(i,ENDW_COMM,VFA(i,j,r))

          )

     CONT_EV_tech_afeijr (equation number 188)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 21.

 ==================================================
 +22+
 ++> Task  22 - Substituting out variable 'pva'
 ==================================================


  >> Equation number  36 selected for substitution.
     Equation name is 'VAPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ENDWDEMAND (equation number  38)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 22.

 ==================================================
 +23+
 ++> Task  23 - Substituting out variable 'qfe'
 ==================================================


  >> Equation number  38 selected for substitution.
     Equation name is 'ENDWDEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TFURATIO (equation number  37)
 
 To simplify the 'pm' part of equation 'TFURATIO', we will set
 
          (ALL,i,ENDWM_COMM) (ALL,r,REG) C00269(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,ETAX(i,j,r))

 
 To simplify the 'ps' part of equation 'TFURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00270(j,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,ETAX(i,j,r) * ESUBT(j)) + SUM(i,ENDWS_COMM,ETAX(i,

          j,r) * ESUBT(j))}

 
 To simplify the 'qo' part of equation 'TFURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00271(j,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,ETAX(i,j,r)) + SUM(i,ENDWS_COMM,ETAX(i,j,r))}

 
 To simplify the 'pfe' part of equation 'TFURATIO', we will set
 
          (ALL,k,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00272(k,j,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,ETAX(i,j,r) * [-ESUBT(j) + ESUBVA(j)] * SVA(k,j,r)

          ) + SUM(i,ENDWS_COMM,ETAX(i,j,r) * [-ESUBT(j) + ESUBVA(j)] * SVA(k,j,

          r))}

 
 To simplify the 'aosec' part of equation 'TFURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00273(j,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,ETAX(i,j,r) * [-1.0 + ESUBT(j)]) + 

          SUM(i,ENDWS_COMM,ETAX(i,j,r) * [-1.0 + ESUBT(j)])}

 
 To simplify the 'aoreg' part of equation 'TFURATIO', we will set
 
          (ALL,r,REG) C00274(r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,SUM(j,PROD_COMM,ETAX(i,j,r) * [-1.0 + ESUBT(j)]))

           + SUM(i,ENDWS_COMM,SUM(j,PROD_COMM,ETAX(i,j,r) * [-1.0 + ESUBT(j)]))

          }

 
 To simplify the 'afecom' part of equation 'TFURATIO', we will set
 
          (ALL,k,ENDW_COMM) (ALL,r,REG) C00275(k,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r) * [-ESUBT(j) + 

          ESUBVA(j)] * SVA(k,j,r))) + SUM(i,ENDWS_COMM,SUM(j,PROD_COMM,-ETAX(i,

          j,r) * [-ESUBT(j) + ESUBVA(j)] * SVA(k,j,r)))}

 
 To simplify the 'afecom' part of equation 'TFURATIO', we will set
 
          (ALL,i,ENDWM_COMM) (ALL,r,REG) C00276(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,ETAX(i,j,r) * {-1.0 + ESUBVA(j)})

 
 To simplify the 'afecom' part of equation 'TFURATIO', we will set
 
          (ALL,i,ENDWS_COMM) (ALL,r,REG) C00277(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,ETAX(i,j,r) * {-1.0 + ESUBVA(j)})

 
 To simplify the 'afesec' part of equation 'TFURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00278(j,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,-ETAX(i,j,r) * [(-ESUBT(j) + ESUBVA(j)) * 

          C00261(j,r) - (-1.0 + ESUBVA(j))]) + SUM(i,ENDWS_COMM,-ETAX(i,j,r) * 

          [(-ESUBT(j) + ESUBVA(j)) * C00261(j,r) - (-1.0 + ESUBVA(j))])}

 
 To simplify the 'afereg' part of equation 'TFURATIO', we will set
 
          (ALL,r,REG) C00279(r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r) * [(-ESUBT(j) + 

          ESUBVA(j)) * C00261(j,r) - (-1.0 + ESUBVA(j))])) + SUM(i,ENDWS_COMM,

          SUM(j,PROD_COMM,-ETAX(i,j,r) * [(-ESUBT(j) + ESUBVA(j)) * C00261(j,r)

           - (-1.0 + ESUBVA(j))]))}

 
 To simplify the 'afeall' part of equation 'TFURATIO', we will set
 
          (ALL,k,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00280(k,j,r)

  equal to the following expression:
 
          -{SUM(i,ENDWM_COMM,-ETAX(i,j,r) * [-ESUBT(j) + ESUBVA(j)] * SVA(k,j,

          r)) + SUM(i,ENDWS_COMM,-ETAX(i,j,r) * [-ESUBT(j) + ESUBVA(j)] * 

          SVA(k,j,r))}

     MKTCLENDWM (equation number  89)
 
 To simplify the 'aoreg' part of equation 'MKTCLENDWM', we will set
 
          (ALL,i,ENDWM_COMM) (ALL,r,REG) C00281(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,SHREM(i,j,r) * {-1.0 + ESUBT(j)})

 
 To simplify the 'afecom' part of equation 'MKTCLENDWM', we will set
 
          (ALL,i,ENDWM_COMM) (ALL,k,ENDW_COMM) (ALL,r,REG) C00282(i,k,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-SHREM(i,j,r) * {-ESUBT(j) + ESUBVA(j)} * SVA(k,j,r)

          )

 
 To simplify the 'afecom' part of equation 'MKTCLENDWM', we will set
 
          (ALL,i,ENDWM_COMM) (ALL,r,REG) C00283(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,SHREM(i,j,r) * {-1.0 + ESUBVA(j)})

 
 To simplify the 'afereg' part of equation 'MKTCLENDWM', we will set
 
          (ALL,i,ENDWM_COMM) (ALL,r,REG) C00284(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-SHREM(i,j,r) * {[-ESUBT(j) + ESUBVA(j)] * C00261(j,

          r) - [-1.0 + ESUBVA(j)]})

     MKTCLENDWS (equation number  90)
     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'ps' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00285(j,r)

  equal to the following expression:
 
          C00240(j,r) + SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * ESUBT(j))

 
 To simplify the 'qo' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00286(j,r)

  equal to the following expression:
 
          C00241(j,r) + SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r))

 
 To simplify the 'pfe' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00287(i,j,r)

  equal to the following expression:
 
          0.01   * EVSCALFACT(r) * ETAX(i,j,r) * ESUBVA(j) + 

          SUM(XX01,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(XX01,j,r) * {-

          ESUBT(j) + ESUBVA(j)} * SVA(i,j,r))

 
 To simplify the 'aosec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00288(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + C00242(j,r)

 
 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00289(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {-1.0 + ESUBT(j)})) + C00243(r)

 
 To simplify the 'avasec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00290(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) - 0.01   * EVSCALFACT(r) * VVA(j,r)

 
 To simplify the 'avareg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00291(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {-1.0 + ESUBT(j)})) + C00207(r)

 
 To simplify the 'afecom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,k,ENDW_COMM) (ALL,r,REG) C00292(k,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {-ESUBT(j) + ESUBVA(j)} * SVA(k,j,r))) + SUM(j,PROD_COMM,-0.01  

           * EVSCALFACT(r) * ETAX(k,j,r) * {-1.0 + ESUBVA(j)}) + C00263(k,r)

 
 To simplify the 'afesec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00293(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {[-ESUBT(j) + 

          ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]}) + C00264(j,r)

 
 To simplify the 'afereg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00294(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {[-ESUBT(j) + ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]})) + 

          C00265(r)

 
 To simplify the 'afeall' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,k,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00295(k,j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {-ESUBT(j) + 

          ESUBVA(j)} * SVA(k,j,r)) + -0.01   * EVSCALFACT(r) * ETAX(k,j,r) * {-

          1.0 + ESUBVA(j)} - 0.01   * EVSCALFACT(r) * VFA(k,j,r)

     CONT_EV_qfer (equation number 156)
 
 To simplify the 'ps' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00296(j,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * ESUBT(j))

 
 To simplify the 'qo' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00297(j,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,ETAX(i,j,r) * 0.01   * EVSCALFACT(r))

 
 To simplify the 'pfe' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,i,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00298(i,j,r)

  equal to the following expression:
 
          ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * ESUBVA(j) + -

          SUM(XX01,ENDW_COMM,ETAX(XX01,j,r) * 0.01   * EVSCALFACT(r) * {-

          ESUBT(j) + ESUBVA(j)} * SVA(i,j,r))

 
 To simplify the 'pop' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,r,REG) C00299(r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r) * 0.01   * 

          EVSCALFACT(r)))

 
 To simplify the 'aosec' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00300(j,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j)})

 
 To simplify the 'aoreg' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,r,REG) C00301(r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,SUM(j,PROD_COMM,ETAX(i,j,r) * 0.01   * EVSCALFACT(r)

           * {-1.0 + ESUBT(j)}))

 
 To simplify the 'afecom' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,k,ENDW_COMM) (ALL,r,REG) C00302(k,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r) * 0.01   * 

          EVSCALFACT(r) * {-ESUBT(j) + ESUBVA(j)} * SVA(k,j,r))) + -

          SUM(j,PROD_COMM,ETAX(k,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBVA(j)})

 
 To simplify the 'afesec' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00303(j,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,-ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {[-ESUBT(j)

           + ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]})

 
 To simplify the 'afereg' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,r,REG) C00304(r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r) * 0.01   * 

          EVSCALFACT(r) * {[-ESUBT(j) + ESUBVA(j)] * C00261(j,r) - [-1.0 + 

          ESUBVA(j)]}))

 
 To simplify the 'afeall' part of equation 'CONT_EV_qfer', we will set
 
          (ALL,k,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00305(k,j,r)

  equal to the following expression:
 
          -SUM(i,ENDW_COMM,-ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-ESUBT(j)

           + ESUBVA(j)} * SVA(k,j,r)) + -ETAX(k,j,r) * 0.01   * EVSCALFACT(r)

           * {-1.0 + ESUBVA(j)}

     CONT_EV_qfeir (equation number 157)
 
 To simplify the 'pop' part of equation 'CONT_EV_qfeir', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00306(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-ETAX(i,j,r) * 0.01   * EVSCALFACT(r))

 
 To simplify the 'aoreg' part of equation 'CONT_EV_qfeir', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00307(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j)})

 
 To simplify the 'afecom' part of equation 'CONT_EV_qfeir', we will set
 
          (ALL,i,ENDW_COMM) (ALL,k,ENDW_COMM) (ALL,r,REG) C00308(i,k,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-ESUBT(j)

           + ESUBVA(j)} * SVA(k,j,r))

 
 To simplify the 'afecom' part of equation 'CONT_EV_qfeir', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00309(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBVA(j)})

 
 To simplify the 'afereg' part of equation 'CONT_EV_qfeir', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00310(i,r)

  equal to the following expression:
 
          -SUM(j,PROD_COMM,-ETAX(i,j,r) * 0.01   * EVSCALFACT(r) * {[-ESUBT(j)

           + ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]})

     CONT_EV_qfeijr (equation number 158)
     CONT_EV_alleffr (equation number 177)
 
 To simplify the 'aosec' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00311(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + C00256(j,r)

 
 To simplify the 'aoreg' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00312(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {-1.0 + ESUBT(j)})) + C00257(r)

 
 To simplify the 'avasec' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00313(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {-1.0 + 

          ESUBT(j)})

 
 To simplify the 'avareg' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00314(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {-1.0 + ESUBT(j)}))

 
 To simplify the 'afecom' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,k,ENDW_COMM) (ALL,r,REG) C00315(k,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {-ESUBT(j) + ESUBVA(j)} * SVA(k,j,r))) + SUM(j,PROD_COMM,-0.01  

           * EVSCALFACT(r) * ETAX(k,j,r) * {-1.0 + ESUBVA(j)})

 
 To simplify the 'afesec' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00316(j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {[-ESUBT(j) + 

          ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]})

 
 To simplify the 'afereg' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00317(r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r)

           * {[-ESUBT(j) + ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]}))

 
 To simplify the 'afeall' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,k,ENDW_COMM) (ALL,j,PROD_COMM) (ALL,r,REG) C00318(k,j,r)

  equal to the following expression:
 
          SUM(i,ENDW_COMM,0.01   * EVSCALFACT(r) * ETAX(i,j,r) * {-ESUBT(j) + 

          ESUBVA(j)} * SVA(k,j,r)) + -0.01   * EVSCALFACT(r) * ETAX(k,j,r) * {-

          1.0 + ESUBVA(j)}

     CONT_EV_alleffir_E (equation number 178)
 
 To simplify the 'pop' part of equation 'CONT_EV_alleffir_E', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00319(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * {-PTAX(i,r) + SUM(j,PROD_COMM,-ETAX(i,j,r))

          }

 
 To simplify the 'aoreg' part of equation 'CONT_EV_alleffir_E', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00320(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,ETAX(i,j,r) * {-1.0 + 

          ESUBT(j)})

 
 To simplify the 'afecom' part of equation 'CONT_EV_alleffir_E', we will set
 
          (ALL,i,ENDW_COMM) (ALL,k,ENDW_COMM) (ALL,r,REG) C00321(i,k,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,-ETAX(i,j,r) * {-ESUBT(j)

           + ESUBVA(j)} * SVA(k,j,r))

 
 To simplify the 'afecom' part of equation 'CONT_EV_alleffir_E', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00322(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,ETAX(i,j,r) * {-1.0 + 

          ESUBVA(j)})

 
 To simplify the 'afereg' part of equation 'CONT_EV_alleffir_E', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00323(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,-ETAX(i,j,r) * {[-ESUBT(j)

           + ESUBVA(j)] * C00261(j,r) - [-1.0 + ESUBVA(j)]})

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 23.

 ==================================================
 +24+
 ++> Task  24 - Substituting out variable 'pfob'
 ==================================================


  >> Equation number  55 selected for substitution.
     Equation name is 'EXPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TEXPRATIO (equation number  56)
 
 To simplify the 'pm' part of equation 'TEXPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00324(i,r)

  equal to the following expression:
 
          -SUM(s,REG,XTAXD(i,r,s))

 
 To simplify the 'tx' part of equation 'TEXPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00325(i,r)

  equal to the following expression:
 
          -SUM(s,REG,-VXMD(i,r,s) - XTAXD(i,r,s))

     FOBCIF (equation number  68)
     REGSUPRICE (equation number  97)
 
 To simplify the 'pm' part of equation 'REGSUPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00326(i,r)

  equal to the following expression:
 
          -SUM(s,REG,VXWD(i,r,s))

 
 To simplify the 'tx' part of equation 'REGSUPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00327(i,r)

  equal to the following expression:
 
          -SUM(s,REG,-VXWD(i,r,s))

     VGDP_r (equation number 100)
 
 To simplify the 'pm' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00328(i,r)

  equal to the following expression:
 
          C00172(i,r) * {1   - GMSHR(i,r)} + SUM(s,REG,-VXWD(i,r,s))

 
 To simplify the 'tx' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00329(i,r)

  equal to the following expression:
 
          SUM(s,REG,VXWD(i,r,s))

     PGDP_r (equation number 101)
 
 To simplify the 'pm' part of equation 'PGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00330(i,r)

  equal to the following expression:
 
          -VGA(i,r) * {1   - GMSHR(i,r)} + SUM(s,REG,-VXWD(i,r,s))

     VREGEX_ir_MARG (equation number 104)
 
 To simplify the 'pm' part of equation 'VREGEX_ir_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00331(m,r)

  equal to the following expression:
 
          -{SUM(s,REG,VXWD(m,r,s)) + VST(m,r)}

 
 To simplify the 'tx' part of equation 'VREGEX_ir_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00332(m,r)

  equal to the following expression:
 
          -SUM(s,REG,-VXWD(m,r,s))

     VREGEX_ir_NMRG (equation number 105)
 
 To simplify the 'pm' part of equation 'VREGEX_ir_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00333(i,r)

  equal to the following expression:
 
          -SUM(s,REG,VXWD(i,r,s))

 
 To simplify the 'tx' part of equation 'VREGEX_ir_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00334(i,r)

  equal to the following expression:
 
          -SUM(s,REG,-VXWD(i,r,s))

     PREGEX_ir_MARG (equation number 114)
     PREGEX_ir_NMRG (equation number 115)
     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00335(i,r)

  equal to the following expression:
 
          C00238(i,r) + SUM(s,REG,-0.01   * EVSCALFACT(r) * VXWD(i,r,s))

 
 To simplify the 'tx' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00336(i,r)

  equal to the following expression:
 
          SUM(s,REG,0.01   * EVSCALFACT(r) * VXWD(i,r,s))

     CONT_EV_totr (equation number 180)
 
 To simplify the 'pm' part of equation 'CONT_EV_totr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00337(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(s,REG,VXWD(i,r,s))

 
 To simplify the 'tx' part of equation 'CONT_EV_totr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00338(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(s,REG,-VXWD(i,r,s))

 
 To simplify the 'pxwwld' part of equation 'CONT_EV_totr', we will set
 
          (ALL,r,REG) C00339(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * {SUM(i,TRAD_COMM,SUM(s,REG,-VXWD(i,r,s)))

           + SUM(m,MARG_COMM,-VST(m,r)) - SUM(i,TRAD_COMM,SUM(s,REG,-VXWD(i,s,

          r))) - SUM(m,MARG_COMM,-VTMD(m,r))}

     EXPPRICE_MARG (equation number 198)
 
 To simplify the 'pm' part of equation 'EXPPRICE_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00340(m,r)

  equal to the following expression:
 
          -{SUM(s,REG,SX_IRS(m,r,s)) + SXT_IR(m,r)}

 
 To simplify the 'tx' part of equation 'EXPPRICE_MARG', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00341(m,r)

  equal to the following expression:
 
          -SUM(s,REG,-SX_IRS(m,r,s))

     EXPPRICE_NMRG (equation number 199)
 
 To simplify the 'pm' part of equation 'EXPPRICE_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00342(i,r)

  equal to the following expression:
 
          -SUM(s,REG,SX_IRS(i,r,s))

 
 To simplify the 'tx' part of equation 'EXPPRICE_NMRG', we will set
 
          (ALL,i,NMRG_COMM) (ALL,r,REG) C00343(i,r)

  equal to the following expression:
 
          -SUM(s,REG,-SX_IRS(i,r,s))

     IMPPRICE1_MARG (equation number 200)
     IMPPRICE1_NMRG (equation number 201)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 24.

 ==================================================
 +25+
 ++> Task  25 - Substituting out variable 'pms'
 ==================================================


  >> Equation number  57 selected for substitution.
     Equation name is 'MKTPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     DPRICEIMP (equation number  58)
 
 To simplify the 'tm' part of equation 'DPRICEIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00344(i,s)

  equal to the following expression:
 
          -SUM(k,REG,MSHRS(i,k,s))

     IMPORTDEMAND (equation number  60)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 25.

 ==================================================
 +26+
 ++> Task  26 - Substituting out variable 'qtmfsd'
 ==================================================


  >> Equation number  62 selected for substitution.
     Equation name is 'QTRANS_MFSD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TRANS_DEMAND (equation number  63)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 26.

 ==================================================
 +27+
 ++> Task  27 - Substituting out variable 'ptrans'
 ==================================================


  >> Equation number  65 selected for substitution.
     Equation name is 'TRANSCOSTINDEX'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     FOBCIF (equation number  68)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 27.

 ==================================================
 +28+
 ++> Task  28 - Substituting out variable 'atmfsd'
 ==================================================


  >> Equation number  66 selected for substitution.
     Equation name is 'TRANSTECHANGE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TRANS_DEMAND (equation number  63)
 
 To simplify the 'atm' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) C00345(m)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(r,REG,SUM(s,REG,VTMUSESHR(m,i,r,s))))

 
 To simplify the 'atf' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) C00346(m,i)

  equal to the following expression:
 
          SUM(r,REG,SUM(s,REG,VTMUSESHR(m,i,r,s)))

 
 To simplify the 'ats' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00347(m,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(s,REG,VTMUSESHR(m,i,r,s)))

 
 To simplify the 'atd' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,s,REG) C00348(m,s)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(r,REG,VTMUSESHR(m,i,r,s)))

     FOBCIF (equation number  68)
 
 To simplify the 'atf' part of equation 'FOBCIF', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) (ALL,s,REG) C00349(i,r,s)

  equal to the following expression:
 
          SUM(m,MARG_COMM,TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

     EV_DECOMPOSITION (equation number 150)
 
 To simplify the 'atm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00350(m,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,s,r)))

 
 To simplify the 'atf' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00351(i,r)

  equal to the following expression:
 
          SUM(m,MARG_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,s,r)))

 
 To simplify the 'ats' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00352(s,r)

  equal to the following expression:
 
          SUM(m,MARG_COMM,SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,

          s,r)))

 
 To simplify the 'atd' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00353(r)

  equal to the following expression:
 
          SUM(m,MARG_COMM,SUM(i,TRAD_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * 

          VTMFSD(m,i,s,r))))

     CONT_EV_techr (equation number 184)
     CONT_EV_tech_atrr (equation number 193)
 
 To simplify the 'atm' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00354(m,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,SUM(s,REG,VTMFSD(m,i,s,r)))

 
 To simplify the 'atf' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00355(i,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(s,REG,VTMFSD(m,i,s,r)))

 
 To simplify the 'ats' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00356(s,r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(i,TRAD_COMM,VTMFSD(m,i,

          s,r)))

 
 To simplify the 'atd' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,r,REG) C00357(r)

  equal to the following expression:
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(i,TRAD_COMM,SUM(s,REG,

          VTMFSD(m,i,s,r))))

     CONT_EV_tech_afmfdsd (equation number 194)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 28.

 ==================================================
 +29+
 ++> Task  29 - Substituting out variable 'pcif'
 ==================================================


  >> Equation number  68 selected for substitution.
     Equation name is 'FOBCIF'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     DPRICEIMP (equation number  58)
 
 To simplify the 'atm' part of equation 'DPRICEIMP', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00358(m,i,s)

  equal to the following expression:
 
          SUM(k,REG,MSHRS(i,k,s) * TRNSHR(i,k,s) * VTFSD_MSH(m,i,k,s))

 
 To simplify the 'atf' part of equation 'DPRICEIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00359(i,s)

  equal to the following expression:
 
          SUM(k,REG,MSHRS(i,k,s) * C00349(i,k,s))

 
 To simplify the 'pt' part of equation 'DPRICEIMP', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00360(m,i,s)

  equal to the following expression:
 
          SUM(k,REG,-MSHRS(i,k,s) * TRNSHR(i,k,s) * VTFSD_MSH(m,i,k,s))

     IMPORTDEMAND (equation number  60)
     TIMPRATIO (equation number  61)
 
 To simplify the 'tm' part of equation 'TIMPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00361(i,r)

  equal to the following expression:
 
          -SUM(s,REG,VIMS(i,s,r))

 
 To simplify the 'atm' part of equation 'TIMPRATIO', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00362(m,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r) * TRNSHR(i,s,r) * 

          VTFSD_MSH(m,i,s,r)))

 
 To simplify the 'atf' part of equation 'TIMPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00363(i,r)

  equal to the following expression:
 
          -SUM(s,REG,-MTAX(i,s,r) * C00349(i,s,r))

 
 To simplify the 'ats' part of equation 'TIMPRATIO', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00364(s,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,-MTAX(i,s,r) * C00349(i,s,r))

 
 To simplify the 'atd' part of equation 'TIMPRATIO', we will set
 
          (ALL,r,REG) C00365(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r) * C00349(i,s,r)))

 
 To simplify the 'pt' part of equation 'TIMPRATIO', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00366(m,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(s,REG,MTAX(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

     REGDEMPRICE (equation number  98)
 
 To simplify the 'atm' part of equation 'REGDEMPRICE', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00367(m,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(k,REG,-VIWS(i,k,r) * TRNSHR(i,k,r) * 

          VTFSD_MSH(m,i,k,r)))

 
 To simplify the 'atf' part of equation 'REGDEMPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00368(i,r)

  equal to the following expression:
 
          -SUM(k,REG,-VIWS(i,k,r) * C00349(i,k,r))

 
 To simplify the 'ats' part of equation 'REGDEMPRICE', we will set
 
          (ALL,k,REG) (ALL,r,REG) C00369(k,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,-VIWS(i,k,r) * C00349(i,k,r))

 
 To simplify the 'atd' part of equation 'REGDEMPRICE', we will set
 
          (ALL,r,REG) C00370(r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(k,REG,-VIWS(i,k,r) * C00349(i,k,r)))

 
 To simplify the 'pt' part of equation 'REGDEMPRICE', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00371(m,r)

  equal to the following expression:
 
          -SUM(i,TRAD_COMM,SUM(k,REG,VIWS(i,k,r) * TRNSHR(i,k,r) * VTFSD_MSH(m,

          i,k,r)))

     VGDP_r (equation number 100)
 
 To simplify the 'atm' part of equation 'VGDP_r', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00372(m,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(s,REG,-VIWS(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

 
 To simplify the 'atf' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00373(i,r)

  equal to the following expression:
 
          SUM(s,REG,-VIWS(i,s,r) * C00349(i,s,r))

 
 To simplify the 'ats' part of equation 'VGDP_r', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00374(s,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,-VIWS(i,s,r) * C00349(i,s,r))

 
 To simplify the 'atd' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00375(r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(s,REG,-VIWS(i,s,r) * C00349(i,s,r)))

 
 To simplify the 'pt' part of equation 'VGDP_r', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00376(m,r)

  equal to the following expression:
 
          SUM(i,TRAD_COMM,SUM(s,REG,VIWS(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

     PGDP_r (equation number 101)
     VREGIM_is (equation number 109)
 
 To simplify the 'atm' part of equation 'VREGIM_is', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00377(m,i,s)

  equal to the following expression:
 
          -SUM(r,REG,-VIWS(i,r,s) * TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

 
 To simplify the 'atf' part of equation 'VREGIM_is', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00378(i,s)

  equal to the following expression:
 
          -SUM(r,REG,-VIWS(i,r,s) * C00349(i,r,s))

 
 To simplify the 'pt' part of equation 'VREGIM_is', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00379(m,i,s)

  equal to the following expression:
 
          -SUM(r,REG,VIWS(i,r,s) * TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

     PREGIM_is (equation number 119)
 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 29.

 ==================================================
 +30+
 ++> Task  30 - Substituting out variable 'compvalad'
 ==================================================


  >> Equation number 103 selected for substitution.
     Equation name is 'COMPVALADEQ'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 30.

 ==================================================
 +31+
 ++> Task  31 - Substituting out variable 'CNTqor'
 ==================================================


  >> Equation number 154 selected for substitution.
     Equation name is 'CONT_EV_qor'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 31.

 ==================================================
 +32+
 ++> Task  32 - Substituting out variable 'CNTqoir'
 ==================================================


  >> Equation number 155 selected for substitution.
     Equation name is 'CONT_EV_qoir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 32.

 ==================================================
 +33+
 ++> Task  33 - Substituting out variable 'CNTqfer'
 ==================================================


  >> Equation number 156 selected for substitution.
     Equation name is 'CONT_EV_qfer'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 33.

 ==================================================
 +34+
 ++> Task  34 - Substituting out variable 'CNTqfeir'
 ==================================================


  >> Equation number 157 selected for substitution.
     Equation name is 'CONT_EV_qfeir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 34.

 ==================================================
 +35+
 ++> Task  35 - Substituting out variable 'CNTqfeijr'
 ==================================================


  >> Equation number 158 selected for substitution.
     Equation name is 'CONT_EV_qfeijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 35.

 ==================================================
 +36+
 ++> Task  36 - Substituting out variable 'CNTqfmr'
 ==================================================


  >> Equation number 159 selected for substitution.
     Equation name is 'CONT_EV_qfmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 36.

 ==================================================
 +37+
 ++> Task  37 - Substituting out variable 'CNTqfmir'
 ==================================================


  >> Equation number 160 selected for substitution.
     Equation name is 'CONT_EV_qfmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 37.

 ==================================================
 +38+
 ++> Task  38 - Substituting out variable 'CNTqfmijr'
 ==================================================


  >> Equation number 161 selected for substitution.
     Equation name is 'CONT_EV_qfmijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 38.

 ==================================================
 +39+
 ++> Task  39 - Substituting out variable 'CNTqfdr'
 ==================================================


  >> Equation number 162 selected for substitution.
     Equation name is 'CONT_EV_qfdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 39.

 ==================================================
 +40+
 ++> Task  40 - Substituting out variable 'CNTqfdir'
 ==================================================


  >> Equation number 163 selected for substitution.
     Equation name is 'CONT_EV_qfdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 40.

 ==================================================
 +41+
 ++> Task  41 - Substituting out variable 'CNTqfdijr'
 ==================================================


  >> Equation number 164 selected for substitution.
     Equation name is 'CONT_EV_qfdijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 41.

 ==================================================
 +42+
 ++> Task  42 - Substituting out variable 'CNTqpmr'
 ==================================================


  >> Equation number 165 selected for substitution.
     Equation name is 'CONT_EV_qpmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 42.

 ==================================================
 +43+
 ++> Task  43 - Substituting out variable 'CNTqpmir'
 ==================================================


  >> Equation number 166 selected for substitution.
     Equation name is 'CONT_EV_qpmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 43.

 ==================================================
 +44+
 ++> Task  44 - Substituting out variable 'CNTqpdr'
 ==================================================


  >> Equation number 167 selected for substitution.
     Equation name is 'CONT_EV_qpdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 44.

 ==================================================
 +45+
 ++> Task  45 - Substituting out variable 'CNTqpdir'
 ==================================================


  >> Equation number 168 selected for substitution.
     Equation name is 'CONT_EV_qpdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 45.

 ==================================================
 +46+
 ++> Task  46 - Substituting out variable 'CNTqgmr'
 ==================================================


  >> Equation number 169 selected for substitution.
     Equation name is 'CONT_EV_qgmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 46.

 ==================================================
 +47+
 ++> Task  47 - Substituting out variable 'CNTqgmir'
 ==================================================


  >> Equation number 170 selected for substitution.
     Equation name is 'CONT_EV_qgmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 47.

 ==================================================
 +48+
 ++> Task  48 - Substituting out variable 'CNTqgdr'
 ==================================================


  >> Equation number 171 selected for substitution.
     Equation name is 'CONT_EV_qgdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 48.

 ==================================================
 +49+
 ++> Task  49 - Substituting out variable 'CNTqgdir'
 ==================================================


  >> Equation number 172 selected for substitution.
     Equation name is 'CONT_EV_qgdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 49.

 ==================================================
 +50+
 ++> Task  50 - Substituting out variable 'CNTqxsr'
 ==================================================


  >> Equation number 173 selected for substitution.
     Equation name is 'CONT_EV_qxsr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 50.

 ==================================================
 +51+
 ++> Task  51 - Substituting out variable 'CNTqxsirs'
 ==================================================


  >> Equation number 174 selected for substitution.
     Equation name is 'CONT_EV_qxsirs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 51.

 ==================================================
 +52+
 ++> Task  52 - Substituting out variable 'CNTqimr'
 ==================================================


  >> Equation number 175 selected for substitution.
     Equation name is 'CONT_EV_qimr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 52.

 ==================================================
 +53+
 ++> Task  53 - Substituting out variable 'CNTqimisr'
 ==================================================


  >> Equation number 176 selected for substitution.
     Equation name is 'CONT_EV_qimisr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 53.

 ==================================================
 +54+
 ++> Task  54 - Substituting out variable 'CNTalleffr'
 ==================================================


  >> Equation number 177 selected for substitution.
     Equation name is 'CONT_EV_alleffr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 54.

 ==================================================
 +55+
 ++> Task  55 - Substituting out variable 'CNTtotr'
 ==================================================


  >> Equation number 180 selected for substitution.
     Equation name is 'CONT_EV_totr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 55.

 ==================================================
 +56+
 ++> Task  56 - Substituting out variable 'CNTtech_aoir'
 ==================================================


  >> Equation number 186 selected for substitution.
     Equation name is 'CONT_EV_tech_aoir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 56.

 ==================================================
 +57+
 ++> Task  57 - Substituting out variable 'CNTtech_afeijr'
 ==================================================


  >> Equation number 188 selected for substitution.
     Equation name is 'CONT_EV_tech_afeijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 57.

 ==================================================
 +58+
 ++> Task  58 - Substituting out variable 'CNTtech_avajr'
 ==================================================


  >> Equation number 190 selected for substitution.
     Equation name is 'CONT_EV_tech_avajr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 58.

 ==================================================
 +59+
 ++> Task  59 - Substituting out variable 'CNTtech_afijr'
 ==================================================


  >> Equation number 192 selected for substitution.
     Equation name is 'CONT_EV_tech_afijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 59.

 ==================================================
 +60+
 ++> Task  60 - Substituting out variable 'CNTtech_afmfdsd'
 ==================================================


  >> Equation number 194 selected for substitution.
     Equation name is 'CONT_EV_tech_afmfdsd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 60.

 ==================================================
 +61+
 ++> Task  61 - Substituting out variable 'CNTtech_amsirs'
 ==================================================


  >> Equation number 196 selected for substitution.
     Equation name is 'CONT_EV_tech_amsirs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

 
 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 61.

 ==================================================
 --> Summary of CONDENSATION
 ==================================================



     ============================
     List of CONDENSATION actions
     ============================

     The following  61 condensation actions were performed : 

     Action |  Brief description of action
     -------|---------------------------------------------------
            | 
         1  |  OMISSION
            |  The following variables were omitted: 
            |     atall          (var. no. 111)
            |     avaall         (var. no.  77)
            |     tf             (var. no.  84)
            |     tfd            (var. no.  82)
            |     tfm            (var. no.  83)
            |     tgd            (var. no.  54)
            |     tgm            (var. no.  55)
            |     tpd            (var. no.  59)
            |     tpm            (var. no.  61)
            | 
         2  |  BACKSOLVE
            |  Variable 'pgov           ' (var. no.  33)
            |  was made available for backsolving
            |  using equation 'GPRICEINDEX         ' (eq. no.   1)
            | 
         3  |  BACKSOLVE
            |  Variable 'qg             ' (var. no.  53)
            |  was made available for backsolving
            |  using equation 'GOVDMNDS            ' (eq. no.   2)
            | 
         4  |  BACKSOLVE
            |  Variable 'pgd            ' (var. no.   3)
            |  was made available for backsolving
            |  using equation 'GHHDPRICE           ' (eq. no.   4)
            | 
         5  |  BACKSOLVE
            |  Variable 'pgm            ' (var. no.   6)
            |  was made available for backsolving
            |  using equation 'GHHIPRICES          ' (eq. no.   5)
            | 
         6  |  BACKSOLVE
            |  Variable 'pg             ' (var. no.  52)
            |  was made available for backsolving
            |  using equation 'GCOMPRICE           ' (eq. no.   6)
            | 
         7  |  BACKSOLVE
            |  Variable 'qgm            ' (var. no.   7)
            |  was made available for backsolving
            |  using equation 'GHHLDAGRIMP         ' (eq. no.   7)
            | 
         8  |  BACKSOLVE
            |  Variable 'qp             ' (var. no.  57)
            |  was made available for backsolving
            |  using equation 'PRIVDMNDS           ' (eq. no.  13)
            | 
         9  |  BACKSOLVE
            |  Variable 'ppd            ' (var. no.   9)
            |  was made available for backsolving
            |  using equation 'PHHDPRICE           ' (eq. no.  15)
            | 
        10  |  BACKSOLVE
            |  Variable 'ppm            ' (var. no.  11)
            |  was made available for backsolving
            |  using equation 'PHHIPRICES          ' (eq. no.  17)
            | 
        11  |  BACKSOLVE
            |  Variable 'qpm            ' (var. no.  12)
            |  was made available for backsolving
            |  using equation 'PHHLDAGRIMP         ' (eq. no.  21)
            | 
        12  |  BACKSOLVE
            |  Variable 'ao             ' (var. no.  67)
            |  was made available for backsolving
            |  using equation 'AOWORLD             ' (eq. no.  22)
            | 
        13  |  BACKSOLVE
            |  Variable 'ava            ' (var. no.  68)
            |  was made available for backsolving
            |  using equation 'AVAWORLD            ' (eq. no.  23)
            | 
        14  |  BACKSOLVE
            |  Variable 'qva            ' (var. no.  64)
            |  was made available for backsolving
            |  using equation 'VADEMAND            ' (eq. no.  24)
            | 
        15  |  BACKSOLVE
            |  Variable 'af             ' (var. no.  69)
            |  was made available for backsolving
            |  using equation 'AFWORLD             ' (eq. no.  25)
            | 
        16  |  BACKSOLVE
            |  Variable 'qf             ' (var. no.  66)
            |  was made available for backsolving
            |  using equation 'INTDEMAND           ' (eq. no.  26)
            | 
        17  |  BACKSOLVE
            |  Variable 'pfd            ' (var. no.  17)
            |  was made available for backsolving
            |  using equation 'DMNDDPRICE          ' (eq. no.  27)
            | 
        18  |  BACKSOLVE
            |  Variable 'pfm            ' (var. no.  19)
            |  was made available for backsolving
            |  using equation 'DMNDIPRICES         ' (eq. no.  28)
            | 
        19  |  BACKSOLVE
            |  Variable 'pf             ' (var. no.  65)
            |  was made available for backsolving
            |  using equation 'ICOMPRICE           ' (eq. no.  30)
            | 
        20  |  BACKSOLVE
            |  Variable 'qfm            ' (var. no.  20)
            |  was made available for backsolving
            |  using equation 'INDIMP              ' (eq. no.  31)
            | 
        21  |  BACKSOLVE
            |  Variable 'afe            ' (var. no.  70)
            |  was made available for backsolving
            |  using equation 'AFEWORLD            ' (eq. no.  35)
            | 
        22  |  BACKSOLVE
            |  Variable 'pva            ' (var. no.  63)
            |  was made available for backsolving
            |  using equation 'VAPRICE             ' (eq. no.  36)
            | 
        23  |  BACKSOLVE
            |  Variable 'qfe            ' (var. no.  16)
            |  was made available for backsolving
            |  using equation 'ENDWDEMAND          ' (eq. no.  38)
            | 
        24  |  BACKSOLVE
            |  Variable 'pfob           ' (var. no.  27)
            |  was made available for backsolving
            |  using equation 'EXPRICES            ' (eq. no.  55)
            | 
        25  |  BACKSOLVE
            |  Variable 'pms            ' (var. no.  24)
            |  was made available for backsolving
            |  using equation 'MKTPRICES           ' (eq. no.  57)
            | 
        26  |  BACKSOLVE
            |  Variable 'qtmfsd         ' (var. no. 105)
            |  was made available for backsolving
            |  using equation 'QTRANS_MFSD         ' (eq. no.  62)
            | 
        27  |  BACKSOLVE
            |  Variable 'ptrans         ' (var. no. 112)
            |  was made available for backsolving
            |  using equation 'TRANSCOSTINDEX      ' (eq. no.  65)
            | 
        28  |  BACKSOLVE
            |  Variable 'atmfsd         ' (var. no. 106)
            |  was made available for backsolving
            |  using equation 'TRANSTECHANGE       ' (eq. no.  66)
            | 
        29  |  BACKSOLVE
            |  Variable 'pcif           ' (var. no.  26)
            |  was made available for backsolving
            |  using equation 'FOBCIF              ' (eq. no.  68)
            | 
        30  |  BACKSOLVE
            |  Variable 'compvalad      ' (var. no. 146)
            |  was made available for backsolving
            |  using equation 'COMPVALADEQ         ' (eq. no. 103)
            | 
        31  |  BACKSOLVE
            |  Variable 'CNTqor         ' (var. no. 190)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qor         ' (eq. no. 154)
            | 
        32  |  BACKSOLVE
            |  Variable 'CNTqoir        ' (var. no. 191)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qoir        ' (eq. no. 155)
            | 
        33  |  BACKSOLVE
            |  Variable 'CNTqfer        ' (var. no. 192)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfer        ' (eq. no. 156)
            | 
        34  |  BACKSOLVE
            |  Variable 'CNTqfeir       ' (var. no. 193)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfeir       ' (eq. no. 157)
            | 
        35  |  BACKSOLVE
            |  Variable 'CNTqfeijr      ' (var. no. 194)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfeijr      ' (eq. no. 158)
            | 
        36  |  BACKSOLVE
            |  Variable 'CNTqfmr        ' (var. no. 195)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmr        ' (eq. no. 159)
            | 
        37  |  BACKSOLVE
            |  Variable 'CNTqfmir       ' (var. no. 196)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmir       ' (eq. no. 160)
            | 
        38  |  BACKSOLVE
            |  Variable 'CNTqfmijr      ' (var. no. 197)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmijr      ' (eq. no. 161)
            | 
        39  |  BACKSOLVE
            |  Variable 'CNTqfdr        ' (var. no. 198)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdr        ' (eq. no. 162)
            | 
        40  |  BACKSOLVE
            |  Variable 'CNTqfdir       ' (var. no. 199)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdir       ' (eq. no. 163)
            | 
        41  |  BACKSOLVE
            |  Variable 'CNTqfdijr      ' (var. no. 200)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdijr      ' (eq. no. 164)
            | 
        42  |  BACKSOLVE
            |  Variable 'CNTqpmr        ' (var. no. 201)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpmr        ' (eq. no. 165)
            | 
        43  |  BACKSOLVE
            |  Variable 'CNTqpmir       ' (var. no. 202)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpmir       ' (eq. no. 166)
            | 
        44  |  BACKSOLVE
            |  Variable 'CNTqpdr        ' (var. no. 203)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpdr        ' (eq. no. 167)
            | 
        45  |  BACKSOLVE
            |  Variable 'CNTqpdir       ' (var. no. 204)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpdir       ' (eq. no. 168)
            | 
        46  |  BACKSOLVE
            |  Variable 'CNTqgmr        ' (var. no. 205)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgmr        ' (eq. no. 169)
            | 
        47  |  BACKSOLVE
            |  Variable 'CNTqgmir       ' (var. no. 206)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgmir       ' (eq. no. 170)
            | 
        48  |  BACKSOLVE
            |  Variable 'CNTqgdr        ' (var. no. 207)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgdr        ' (eq. no. 171)
            | 
        49  |  BACKSOLVE
            |  Variable 'CNTqgdir       ' (var. no. 208)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgdir       ' (eq. no. 172)
            | 
        50  |  BACKSOLVE
            |  Variable 'CNTqxsr        ' (var. no. 209)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qxsr        ' (eq. no. 173)
            | 
        51  |  BACKSOLVE
            |  Variable 'CNTqxsirs      ' (var. no. 210)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qxsirs      ' (eq. no. 174)
            | 
        52  |  BACKSOLVE
            |  Variable 'CNTqimr        ' (var. no. 211)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qimr        ' (eq. no. 175)
            | 
        53  |  BACKSOLVE
            |  Variable 'CNTqimisr      ' (var. no. 212)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qimisr      ' (eq. no. 176)
            | 
        54  |  BACKSOLVE
            |  Variable 'CNTalleffr     ' (var. no. 213)
            |  was made available for backsolving
            |  using equation 'CONT_EV_alleffr     ' (eq. no. 177)
            | 
        55  |  BACKSOLVE
            |  Variable 'CNTtotr        ' (var. no. 215)
            |  was made available for backsolving
            |  using equation 'CONT_EV_totr        ' (eq. no. 180)
            | 
        56  |  BACKSOLVE
            |  Variable 'CNTtech_aoir   ' (var. no. 221)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_aoir   ' (eq. no. 186)
            | 
        57  |  BACKSOLVE
            |  Variable 'CNTtech_afeijr ' (var. no. 223)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afeijr ' (eq. no. 188)
            | 
        58  |  BACKSOLVE
            |  Variable 'CNTtech_avajr  ' (var. no. 225)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_avajr  ' (eq. no. 190)
            | 
        59  |  BACKSOLVE
            |  Variable 'CNTtech_afijr  ' (var. no. 227)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afijr  ' (eq. no. 192)
            | 
        60  |  BACKSOLVE
            |  Variable 'CNTtech_afmfdsd' (var. no. 229)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afmfdsd' (eq. no. 194)
            | 
        61  |  BACKSOLVE
            |  Variable 'CNTtech_amsirs ' (var. no. 231)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_amsirs ' (eq. no. 196)



     =============================
     Final status of all Equations
     =============================

  Number |      Equation        | Status of equation             |  Max   
         |        name          |                                | number 
 --------|----------------------|--------------------------------|--------
         |                      |                                |        
     1   | GPRICEINDEX          | Used for BACKSOLVING           |[        10]
     2   | GOVDMNDS             | Used for BACKSOLVING           |[       100]
     3   | GOVU                 | In the condensed system        |        10
     4   | GHHDPRICE            | Used for BACKSOLVING           |[       100]
     5   | GHHIPRICES           | Used for BACKSOLVING           |[       100]
     6   | GCOMPRICE            | Used for BACKSOLVING           |[       100]
     7   | GHHLDAGRIMP          | Used for BACKSOLVING           |[       100]
     8   | GHHLDDOM             | In the condensed system        |       100
     9   | TGCRATIO             | In the condensed system        |        10
    10   | PHHLDINDEX           | In the condensed system        |        10
    11   | PRIVATEU             | In the condensed system        |        10
    12   | UTILELASPRIV         | In the condensed system        |        10
    13   | PRIVDMNDS            | Used for BACKSOLVING           |[       100]
    14   | TPDSHIFT             | In the condensed system        |       100
    15   | PHHDPRICE            | Used for BACKSOLVING           |[       100]
    16   | TPMSHIFT             | In the condensed system        |       100
    17   | PHHIPRICES           | Used for BACKSOLVING           |[       100]
    18   | TPCRATIO             | In the condensed system        |        10
    19   | PCOMPRICE            | In the condensed system        |       100
    20   | PHHLDDOM             | In the condensed system        |       100
    21   | PHHLDAGRIMP          | Used for BACKSOLVING           |[       100]
    22   | AOWORLD              | Used for BACKSOLVING           |[         0]
    23   | AVAWORLD             | Used for BACKSOLVING           |[         0]
    24   | VADEMAND             | Used for BACKSOLVING           |[         0]
    25   | AFWORLD              | Used for BACKSOLVING           |[         0]
    26   | INTDEMAND            | Used for BACKSOLVING           |[         0]
    27   | DMNDDPRICE           | Used for BACKSOLVING           |[         0]
    28   | DMNDIPRICES          | Used for BACKSOLVING           |[         0]
    29   | TIURATIO             | In the condensed system        |        10
    30   | ICOMPRICE            | Used for BACKSOLVING           |[         0]
    31   | INDIMP               | Used for BACKSOLVING           |[         0]
    32   | INDDOM               | In the condensed system        |         0
    33   | MPFACTPRICE          | In the condensed system        |         0
    34   | SPFACTPRICE          | In the condensed system        |         0
    35   | AFEWORLD             | Used for BACKSOLVING           |[         0]
    36   | VAPRICE              | Used for BACKSOLVING           |[         0]
    37   | TFURATIO             | In the condensed system        |        10
    38   | ENDWDEMAND           | Used for BACKSOLVING           |[         0]
    39   | OUTPUTPRICES         | In the condensed system        |         0
    40   | TOUTRATIO            | In the condensed system        |        10
    41   | ZEROPROFITS          | In the condensed system        |         0
    42   | KAPSVCES             | In the condensed system        |        10
    43   | KAPRENTAL            | In the condensed system        |        10
    44   | CAPGOODS             | In the condensed system        |        10
    45   | PRCGOODS             | In the condensed system        |        10
    46   | KBEGINNING           | In the condensed system        |        10
    47   | KEND                 | In the condensed system        |        10
    48   | RORCURRENT           | In the condensed system        |        10
    49   | ROREXPECTED          | In the condensed system        |        10
    50   | BALDWIN              | In the condensed system        |        10
    51   | RORGLOBAL            | In the condensed system        |        10
    52   | GLOBALINV            | In the condensed system        |         1
    53   | PRICGDS              | In the condensed system        |         1
    54   | SAVEPRICE            | In the condensed system        |        10
    55   | EXPRICES             | Used for BACKSOLVING           |[      1000]
    56   | TEXPRATIO            | In the condensed system        |        10
    57   | MKTPRICES            | Used for BACKSOLVING           |[      1000]
    58   | DPRICEIMP            | In the condensed system        |       100
    59   | PRICETGT             | In the condensed system        |       100
    60   | IMPORTDEMAND         | In the condensed system        |      1000
    61   | TIMPRATIO            | In the condensed system        |        10
    62   | QTRANS_MFSD          | Used for BACKSOLVING           |[     10000]
    63   | TRANS_DEMAND         | In the condensed system        |        10
    64   | PTRANSPORT           | In the condensed system        |        10
    65   | TRANSCOSTINDEX       | Used for BACKSOLVING           |[      1000]
    66   | TRANSTECHANGE        | Used for BACKSOLVING           |[     10000]
    67   | TRANSVCES            | In the condensed system        |       100
    68   | FOBCIF               | Used for BACKSOLVING           |[      1000]
    69   | FACTORINCPRICES      | In the condensed system        |        50
    70   | TINCRATIO            | In the condensed system        |        10
    71   | ENDW_PRICE           | In the condensed system        |        50
    72   | ENDW_SUPPLY          | In the condensed system        |         0
    73   | FACTORINCOME         | In the condensed system        |        10
    74   | DINDTAXRATIO         | In the condensed system        |        10
    75   | DTAXRATIO            | In the condensed system        |        10
    76   | REGIONALINCOME       | In the condensed system        |        10
    77   | DPARAV               | In the condensed system        |        10
    78   | UTILITELASTIC        | In the condensed system        |        10
    79   | PRIVCONSEXP          | In the condensed system        |        10
    80   | GOVCONSEXP           | In the condensed system        |        10
    81   | SAVING               | In the condensed system        |        10
    82   | PRICEINDEXREG        | In the condensed system        |        10
    83   | UTILITY              | In the condensed system        |        10
    84   | DISTPARSUM           | In the condensed system        |        10
    85   | MKTCLDOM             | In the condensed system        |       100
    86   | MKTCLTRD_MARG        | In the condensed system        |       100
    87   | MKTCLTRD_NMRG        | In the condensed system        |         0
    88   | MKTCLIMP             | In the condensed system        |       100
    89   | MKTCLENDWM           | In the condensed system        |         0
    90   | MKTCLENDWS           | In the condensed system        |         0
    91   | WALRAS_S             | In the condensed system        |         1
    92   | WALRAS_D             | In the condensed system        |         1
    93   | WALRAS               | In the condensed system        |         1
    94   | REALRETURN           | In the condensed system        |        50
    95   | PRIMFACTPR           | In the condensed system        |        10
    96   | PRIMFACTPRWLD        | In the condensed system        |         1
    97   | REGSUPRICE           | In the condensed system        |        10
    98   | REGDEMPRICE          | In the condensed system        |        10
    99   | TOTeq                | In the condensed system        |        10
   100   | VGDP_r               | In the condensed system        |        10
   101   | PGDP_r               | In the condensed system        |        10
   102   | QGDP_r               | In the condensed system        |        10
   103   | COMPVALADEQ          | Used for BACKSOLVING           |[         0]
   104   | VREGEX_ir_MARG       | In the condensed system        |       100
   105   | VREGEX_ir_NMRG       | In the condensed system        |         0
   106   | VREGEX_r             | In the condensed system        |        10
   107   | VWLDEX_i             | In the condensed system        |        10
   108   | VWLDEX               | In the condensed system        |         1
   109   | VREGIM_is            | In the condensed system        |       100
   110   | VREGIM_s             | In the condensed system        |        10
   111   | VWLDIM_i             | In the condensed system        |        10
   112   | VWLDOUT              | In the condensed system        |        10
   113   | VWLDOUTUSE           | In the condensed system        |        10
   114   | PREGEX_ir_MARG       | In the condensed system        |       100
   115   | PREGEX_ir_NMRG       | In the condensed system        |         0
   116   | PREGEX_r             | In the condensed system        |        10
   117   | PWLDEX_i             | In the condensed system        |        10
   118   | PWLDEX               | In the condensed system        |         1
   119   | PREGIM_is            | In the condensed system        |       100
   120   | PREGIM_s             | In the condensed system        |        10
   121   | PWLDIM_i             | In the condensed system        |        10
   122   | PWLDOUT              | In the condensed system        |        10
   123   | PWLDUSE              | In the condensed system        |        10
   124   | QREGEX_ir_MARG       | In the condensed system        |       100
   125   | QREGEX_ir_NMRG       | In the condensed system        |         0
   126   | QREGEX_r             | In the condensed system        |        10
   127   | QWLDEX_i             | In the condensed system        |        10
   128   | QWLDEX               | In the condensed system        |         1
   129   | QREGIM_is            | In the condensed system        |       100
   130   | QREGIM_s             | In the condensed system        |        10
   131   | QWLDIM_i             | In the condensed system        |        10
   132   | QWLDOUT              | In the condensed system        |        10
   133   | QWLDOUTU             | In the condensed system        |        10
   134   | TRADEBAL_i           | In the condensed system        |       100
   135   | TRADEBALANCE         | In the condensed system        |        10
   136   | DTBALRATIO           | In the condensed system        |        10
   137   | GOVUSHD              | In the condensed system        |        10
   138   | PRIVDMNDSEV          | In the condensed system        |       100
   139   | PRIVATEUEV           | In the condensed system        |        10
   140   | UTILELASPRIVEV       | In the condensed system        |        10
   141   | DPARAVEV             | In the condensed system        |        10
   142   | UTILITELASTICEV      | In the condensed system        |        10
   143   | PCONSEXPEV           | In the condensed system        |        10
   144   | GOVCONSEXPEV         | In the condensed system        |        10
   145   | SAVINGEV             | In the condensed system        |        10
   146   | SAVEUEV              | In the condensed system        |        10
   147   | INCOME_EQUIV         | In the condensed system        |        10
   148   | EVREG                | In the condensed system        |        10
   149   | EVWLD                | In the condensed system        |         1
   150   | EV_DECOMPOSITION     | In the condensed system        |        10
   151   | WORLDEV              | In the condensed system        |         1
   152   | CNT_WEV_dpar         | In the condensed system        |        10
   153   | CONT_EV_pop          | In the condensed system        |        10
   154   | CONT_EV_qor          | Used for BACKSOLVING           |[        10]
   155   | CONT_EV_qoir         | Used for BACKSOLVING           |[         0]
   156   | CONT_EV_qfer         | Used for BACKSOLVING           |[        10]
   157   | CONT_EV_qfeir        | Used for BACKSOLVING           |[        50]
   158   | CONT_EV_qfeijr       | Used for BACKSOLVING           |[         0]
   159   | CONT_EV_qfmr         | Used for BACKSOLVING           |[        10]
   160   | CONT_EV_qfmir        | Used for BACKSOLVING           |[       100]
   161   | CONT_EV_qfmijr       | Used for BACKSOLVING           |[         0]
   162   | CONT_EV_qfdr         | Used for BACKSOLVING           |[        10]
   163   | CONT_EV_qfdir        | Used for BACKSOLVING           |[       100]
   164   | CONT_EV_qfdijr       | Used for BACKSOLVING           |[         0]
   165   | CONT_EV_qpmr         | Used for BACKSOLVING           |[        10]
   166   | CONT_EV_qpmir        | Used for BACKSOLVING           |[       100]
   167   | CONT_EV_qpdr         | Used for BACKSOLVING           |[        10]
   168   | CONT_EV_qpdir        | Used for BACKSOLVING           |[       100]
   169   | CONT_EV_qgmr         | Used for BACKSOLVING           |[        10]
   170   | CONT_EV_qgmir        | Used for BACKSOLVING           |[       100]
   171   | CONT_EV_qgdr         | Used for BACKSOLVING           |[        10]
   172   | CONT_EV_qgdir        | Used for BACKSOLVING           |[       100]
   173   | CONT_EV_qxsr         | Used for BACKSOLVING           |[        10]
   174   | CONT_EV_qxsirs       | Used for BACKSOLVING           |[      1000]
   175   | CONT_EV_qimr         | Used for BACKSOLVING           |[        10]
   176   | CONT_EV_qimisr       | Used for BACKSOLVING           |[      1000]
   177   | CONT_EV_alleffr      | Used for BACKSOLVING           |[        10]
   178   | CONT_EV_alleffir_E   | In the condensed system        |        50
   179   | CONT_EV_alleffir_T   | In the condensed system        |       100
   180   | CONT_EV_totr         | Used for BACKSOLVING           |[        10]
   181   | CNT_EV_cgdsr         | In the condensed system        |        10
   182   | CONT_EV_endwr        | In the condensed system        |        10
   183   | CONT_EV_endwir       | In the condensed system        |        50
   184   | CONT_EV_techr        | In the condensed system        |        10
   185   | CONT_EV_tech_aor     | In the condensed system        |        10
   186   | CONT_EV_tech_aoir    | Used for BACKSOLVING           |[         0]
   187   | CONT_EV_tech_afer    | In the condensed system        |        10
   188   | CONT_EV_tech_afeijr  | Used for BACKSOLVING           |[         0]
   189   | CONT_EV_tech_avar    | In the condensed system        |        10
   190   | CONT_EV_tech_avajr   | Used for BACKSOLVING           |[         0]
   191   | CONT_EV_tech_afr     | In the condensed system        |        10
   192   | CONT_EV_tech_afijr   | Used for BACKSOLVING           |[         0]
   193   | CONT_EV_tech_atrr    | In the condensed system        |        10
   194   | CONT_EV_tech_afmfdsd | Used for BACKSOLVING           |[     10000]
   195   | CONT_EV_tech_amsr    | In the condensed system        |        10
   196   | CONT_EV_tech_amsirs  | Used for BACKSOLVING           |[      1000]
   197   | CONT_EV_kbr          | In the condensed system        |        10
   198   | EXPPRICE_MARG        | In the condensed system        |       100
   199   | EXPPRICE_NMRG        | In the condensed system        |         0
   200   | IMPPRICE1_MARG       | In the condensed system        |       100
   201   | IMPPRICE1_NMRG       | In the condensed system        |         0
   202   | WRLDPRICEi           | In the condensed system        |        10
   203   | WRLDPRICE            | In the condensed system        |         1
   204   | c1_irEQ              | In the condensed system        |       100
   205   | c2_irEQ              | In the condensed system        |       100
   206   | c3_irEQ              | In the condensed system        |       100
   207   | c1_rEQ               | In the condensed system        |        10
   208   | c2_rEQ               | In the condensed system        |        10
   209   | c3_rEQ               | In the condensed system        |        10
   210   | TOT2eq               | In the condensed system        |        10
 
 
 Maximum number of equations in condensed system is 4692



     =============================
     Final status of all Variables
     =============================

  Number |    Variable     | Status of variable                  |   Max  
         |      name       |                                     |  size  
 --------|-----------------|-------------------------------------|--------
         |                 |                                     |
     1   | psave           | In the condensed system             |        10
     2   | qsave           | In the condensed system             |        10
     3   | pgd             | You can BACKSOLVE for its values    |       100B
     4   | qgd             | In the condensed system             |       100
     5   | pm              | In the condensed system             |         0
     6   | pgm             | You can BACKSOLVE for its values    |       100B
     7   | qgm             | You can BACKSOLVE for its values    |       100B
     8   | pim             | In the condensed system             |       100
     9   | ppd             | You can BACKSOLVE for its values    |       100B
    10   | qpd             | In the condensed system             |       100
    11   | ppm             | You can BACKSOLVE for its values    |       100B
    12   | qpm             | You can BACKSOLVE for its values    |       100B
    13   | ps              | In the condensed system             |         0
    14   | qo              | In the condensed system             |         0
    15   | pfe             | In the condensed system             |         0
    16   | qfe             | You can BACKSOLVE for its values    |         0B
    17   | pfd             | You can BACKSOLVE for its values    |         0B
    18   | qfd             | In the condensed system             |         0
    19   | pfm             | You can BACKSOLVE for its values    |         0B
    20   | qfm             | You can BACKSOLVE for its values    |         0B
    21   | pmes            | In the condensed system             |         0
    22   | kb              | In the condensed system             |        10
    23   | pcgds           | In the condensed system             |        10
    24   | pms             | You can BACKSOLVE for its values    |      1000B
    25   | qxs             | In the condensed system             |      1000
    26   | pcif            | You can BACKSOLVE for its values    |      1000B
    27   | pfob            | You can BACKSOLVE for its values    |      1000B
    28   | qst             | In the condensed system             |       100
    29   | y               | In the condensed system             |        10
    30   | pop             | In the condensed system             |        10
    31   | qoes            | In the condensed system             |         0
    32   | endwslack       | In the condensed system             |        50
    33   | pgov            | You can BACKSOLVE for its values    |        10B
    34   | yg              | In the condensed system             |        10
    35   | ug              | In the condensed system             |        10
    36   | ppriv           | In the condensed system             |        10
    37   | uepriv          | In the condensed system             |        10
    38   | yp              | In the condensed system             |        10
    39   | up              | In the condensed system             |        10
    40   | to              | In the condensed system             |         0
    41   | qim             | In the condensed system             |       100
    42   | globalcgds      | In the condensed system             |         1
    43   | pcgdswld        | In the condensed system             |         1
    44   | del_taxrgc      | In the condensed system             |        10
    45   | del_taxrpc      | In the condensed system             |        10
    46   | del_taxriu      | In the condensed system             |        10
    47   | del_taxrfu      | In the condensed system             |        10
    48   | del_taxrout     | In the condensed system             |        10
    49   | del_taxrexp     | In the condensed system             |        10
    50   | del_taxrimp     | In the condensed system             |        10
    51   | del_taxrinc     | In the condensed system             |        10
    52   | pg              | You can BACKSOLVE for its values    |       100B
    53   | qg              | You can BACKSOLVE for its values    |       100B
    54   | tgd             | OMITTED from condensed system       |[       100]
    55   | tgm             | OMITTED from condensed system       |[       100]
    56   | pp              | In the condensed system             |       100
    57   | qp              | You can BACKSOLVE for its values    |       100B
    58   | tp              | In the condensed system             |        10
    59   | tpd             | OMITTED from condensed system       |[       100]
    60   | atpd            | In the condensed system             |       100
    61   | tpm             | OMITTED from condensed system       |[       100]
    62   | atpm            | In the condensed system             |       100
    63   | pva             | You can BACKSOLVE for its values    |         0B
    64   | qva             | You can BACKSOLVE for its values    |         0B
    65   | pf              | You can BACKSOLVE for its values    |         0B
    66   | qf              | You can BACKSOLVE for its values    |         0B
    67   | ao              | You can BACKSOLVE for its values    |         0B
    68   | ava             | You can BACKSOLVE for its values    |         0B
    69   | af              | You can BACKSOLVE for its values    |         0B
    70   | afe             | You can BACKSOLVE for its values    |         0B
    71   | ams             | In the condensed system             |      1000
    72   | aosec           | In the condensed system             |         0
    73   | aoreg           | In the condensed system             |        10
    74   | aoall           | In the condensed system             |         0
    75   | avasec          | In the condensed system             |         0
    76   | avareg          | In the condensed system             |        10
    77   | avaall          | OMITTED from condensed system       |[         0]
    78   | afcom           | In the condensed system             |        10
    79   | afsec           | In the condensed system             |         0
    80   | afreg           | In the condensed system             |        10
    81   | afall           | In the condensed system             |         0
    82   | tfd             | OMITTED from condensed system       |[         0]
    83   | tfm             | OMITTED from condensed system       |[         0]
    84   | tf              | OMITTED from condensed system       |[         0]
    85   | afecom          | In the condensed system             |         5
    86   | afesec          | In the condensed system             |         0
    87   | afereg          | In the condensed system             |        10
    88   | afeall          | In the condensed system             |         0
    89   | profitslack     | In the condensed system             |         0
    90   | rental          | In the condensed system             |        10
    91   | ke              | In the condensed system             |        10
    92   | rore            | In the condensed system             |        10
    93   | rorc            | In the condensed system             |        10
    94   | qcgds           | In the condensed system             |        10
    95   | ksvces          | In the condensed system             |        10
    96   | EXPAND          | In the condensed system             |        10
    97   | rorg            | In the condensed system             |         1
    98   | cgdslack        | In the condensed system             |        10
    99   | psaveslack      | In the condensed system             |        10
   100   | tx              | In the condensed system             |       100
   101   | txs             | In the condensed system             |      1000
   102   | tm              | In the condensed system             |       100
   103   | tms             | In the condensed system             |      1000
   104   | pr              | In the condensed system             |       100
   105   | qtmfsd          | You can BACKSOLVE for its values    |     10000B
   106   | atmfsd          | You can BACKSOLVE for its values    |     10000B
   107   | atm             | In the condensed system             |        10
   108   | atf             | In the condensed system             |        10
   109   | ats             | In the condensed system             |        10
   110   | atd             | In the condensed system             |        10
   111   | atall           | OMITTED from condensed system       |[     10000]
   112   | ptrans          | You can BACKSOLVE for its values    |      1000B
   113   | qtm             | In the condensed system             |        10
   114   | pt              | In the condensed system             |        10
   115   | uelas           | In the condensed system             |        10
   116   | dppriv          | In the condensed system             |        10
   117   | dpgov           | In the condensed system             |        10
   118   | dpsave          | In the condensed system             |        10
   119   | fincome         | In the condensed system             |        10
   120   | del_indtaxr     | In the condensed system             |        10
   121   | del_ttaxr       | In the condensed system             |        10
   122   | incomeslack     | In the condensed system             |        10
   123   | dpav            | In the condensed system             |        10
   124   | p               | In the condensed system             |        10
   125   | au              | In the condensed system             |        10
   126   | dpsum           | In the condensed system             |        10
   127   | u               | In the condensed system             |        10
   128   | qds             | In the condensed system             |       100
   129   | tradslack       | In the condensed system             |       100
   130   | walras_sup      | In the condensed system             |         1
   131   | walras_dem      | In the condensed system             |         1
   132   | walraslack      | In the condensed system             |         1
   133   | vxwfob          | In the condensed system             |       100
   134   | viwcif          | In the condensed system             |       100
   135   | vxwreg          | In the condensed system             |        10
   136   | viwreg          | In the condensed system             |        10
   137   | pfactreal       | In the condensed system             |        50
   138   | pfactor         | In the condensed system             |        10
   139   | pfactwld        | In the condensed system             |         1
   140   | psw             | In the condensed system             |        10
   141   | pdw             | In the condensed system             |        10
   142   | tot             | In the condensed system             |        10
   143   | vgdp            | In the condensed system             |        10
   144   | pgdp            | In the condensed system             |        10
   145   | qgdp            | In the condensed system             |        10
   146   | compvalad       | You can BACKSOLVE for its values    |         0B
   147   | pxw             | In the condensed system             |       100
   148   | vxwcom          | In the condensed system             |        10
   149   | vxwwld          | In the condensed system             |         1
   150   | viwcom          | In the condensed system             |        10
   151   | valuew          | In the condensed system             |        10
   152   | valuewu         | In the condensed system             |        10
   153   | pxwreg          | In the condensed system             |        10
   154   | pxwcom          | In the condensed system             |        10
   155   | pxwwld          | In the condensed system             |         1
   156   | piw             | In the condensed system             |       100
   157   | piwreg          | In the condensed system             |        10
   158   | piwcom          | In the condensed system             |        10
   159   | pw              | In the condensed system             |        10
   160   | pwu             | In the condensed system             |        10
   161   | qxw             | In the condensed system             |       100
   162   | qxwreg          | In the condensed system             |        10
   163   | qxwcom          | In the condensed system             |        10
   164   | qxwwld          | In the condensed system             |         1
   165   | qiw             | In the condensed system             |       100
   166   | qiwreg          | In the condensed system             |        10
   167   | qiwcom          | In the condensed system             |        10
   168   | qow             | In the condensed system             |        10
   169   | qowu            | In the condensed system             |        10
   170   | DTBALi          | In the condensed system             |       100
   171   | DTBAL           | In the condensed system             |        10
   172   | DTBALR          | In the condensed system             |        10
   173   | uelasev         | In the condensed system             |        10
   174   | ueprivev        | In the condensed system             |        10
   175   | ugev            | In the condensed system             |        10
   176   | upev            | In the condensed system             |        10
   177   | qsaveev         | In the condensed system             |        10
   178   | yev             | In the condensed system             |        10
   179   | ypev            | In the condensed system             |        10
   180   | ygev            | In the condensed system             |        10
   181   | qpev            | In the condensed system             |       100
   182   | ysaveev         | In the condensed system             |        10
   183   | dpavev          | In the condensed system             |        10
   184   | EV              | In the condensed system             |        10
   185   | WEV             | In the condensed system             |         1
   186   | EV_ALT          | In the condensed system             |        10
   187   | WEV_ALT         | In the condensed system             |         1
   188   | CNTdpar         | In the condensed system             |        10
   189   | CNTpopr         | In the condensed system             |        10
   190   | CNTqor          | You can BACKSOLVE for its values    |        10B
   191   | CNTqoir         | You can BACKSOLVE for its values    |         0B
   192   | CNTqfer         | You can BACKSOLVE for its values    |        10B
   193   | CNTqfeir        | You can BACKSOLVE for its values    |        50B
   194   | CNTqfeijr       | You can BACKSOLVE for its values    |         0B
   195   | CNTqfmr         | You can BACKSOLVE for its values    |        10B
   196   | CNTqfmir        | You can BACKSOLVE for its values    |       100B
   197   | CNTqfmijr       | You can BACKSOLVE for its values    |         0B
   198   | CNTqfdr         | You can BACKSOLVE for its values    |        10B
   199   | CNTqfdir        | You can BACKSOLVE for its values    |       100B
   200   | CNTqfdijr       | You can BACKSOLVE for its values    |         0B
   201   | CNTqpmr         | You can BACKSOLVE for its values    |        10B
   202   | CNTqpmir        | You can BACKSOLVE for its values    |       100B
   203   | CNTqpdr         | You can BACKSOLVE for its values    |        10B
   204   | CNTqpdir        | You can BACKSOLVE for its values    |       100B
   205   | CNTqgmr         | You can BACKSOLVE for its values    |        10B
   206   | CNTqgmir        | You can BACKSOLVE for its values    |       100B
   207   | CNTqgdr         | You can BACKSOLVE for its values    |        10B
   208   | CNTqgdir        | You can BACKSOLVE for its values    |       100B
   209   | CNTqxsr         | You can BACKSOLVE for its values    |        10B
   210   | CNTqxsirs       | You can BACKSOLVE for its values    |      1000B
   211   | CNTqimr         | You can BACKSOLVE for its values    |        10B
   212   | CNTqimisr       | You can BACKSOLVE for its values    |      1000B
   213   | CNTalleffr      | You can BACKSOLVE for its values    |        10B
   214   | CNTalleffir     | In the condensed system             |         0
   215   | CNTtotr         | You can BACKSOLVE for its values    |        10B
   216   | CNTcgdsr        | In the condensed system             |        10
   217   | CNTendwr        | In the condensed system             |        10
   218   | CNTendwir       | In the condensed system             |        50
   219   | CNTtechr        | In the condensed system             |        10
   220   | CNTtech_aor     | In the condensed system             |        10
   221   | CNTtech_aoir    | You can BACKSOLVE for its values    |         0B
   222   | CNTtech_afer    | In the condensed system             |        10
   223   | CNTtech_afeijr  | You can BACKSOLVE for its values    |         0B
   224   | CNTtech_avar    | In the condensed system             |        10
   225   | CNTtech_avajr   | You can BACKSOLVE for its values    |         0B
   226   | CNTtech_afr     | In the condensed system             |        10
   227   | CNTtech_afijr   | You can BACKSOLVE for its values    |         0B
   228   | CNTtech_atrr    | In the condensed system             |        10
   229   | CNTtech_afmfdsd | You can BACKSOLVE for its values    |     10000B
   230   | CNTtech_amsr    | In the condensed system             |        10
   231   | CNTtech_amsirs  | You can BACKSOLVE for its values    |      1000B
   232   | CNTkbr          | In the condensed system             |        10
   233   | px_ir           | In the condensed system             |       100
   234   | pm_ir           | In the condensed system             |       100
   235   | px_i            | In the condensed system             |        10
   236   | px_             | In the condensed system             |         1
   237   | c1_ir           | In the condensed system             |       100
   238   | c2_ir           | In the condensed system             |       100
   239   | c3_ir           | In the condensed system             |       100
   240   | c1_r            | In the condensed system             |        10
   241   | c2_r            | In the condensed system             |        10
   242   | c3_r            | In the condensed system             |        10
   243   | tot2            | In the condensed system             |        10
 
 
 Maximum number of variables in condensed system is 7868
 Maximum number of extra variables available for backsolving is 38680

 

              Summary of model
              ----------------
 
 There are 150 equations left in the CONDENSED model.
 0 equations have been used to SUBSTITUTE out variables.
 60 equations have been used to BACKSOLVE for variables.
 The entire model contains 210 equations.
 
 There are 174 variables left in the CONDENSED model.
 0 variables have been SUBSTITUTED out.
 9 variables have been OMITTED.
 You can BACKSOLVE for 60 variables.
 The entire model contains 243 variables.


 ******************************************************************************
 -3-
 -->                     Starting CODE GENERATION

 ******************************************************************************



  CODE OPTIONS CHOSEN
  -------------------
 
 
                         TABLO PORTABLE
               CODE OPTIONS   ( --> indicates those in effect )
 
      NEQ Do no equations           PGS Prepare output for GEMSIM
      NDS Do no displays        --> WFP Write a Fortran Program
      NWR Do no writes                    (i.e. a TABLO-generated program)
                                --> FC5 Fast Compile TG-prog under LF95
      ACC All comment lines in      NMS Don't allow simulations
             code
                                    CIN Code file name same as
                                          Information file name
                                    CDM Old option. Has no effect.
                                    NRZ No run-time reports re use of
                                           ZERODIVIDE default values
                                    NXS No "extra" statements allowed
 
  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return

  END OF CODE OPTIONS CHOSEN
  --------------------------
  
 ! ( Program is
 ! 'C:\Users\andre.barbe\ModelingFolder\GTAP-V6-gemsim\gtap.for'.)
 (Total number of lines of code is 103334.)
 
 This program
     o can create the Equations file (for the condensed system)
     o can check 2 ASSERTIONs
     o can carry out multi-step simulations
 
 MXGSRS = 0, MXGSIS = 0.
 MXGSLG = 0, MXGSIC = 0.
 
 MXGSOP = 0, MXGSIN = 0.
 MXGSRC = 0, MXGSNS=0.
 ! (Model Information file is
 ! 'C:\Users\andre.barbe\ModelingFolder\GTAP-V6-gemsim\gtap.min'.)
 
 (Total number of programs written is 1.)
 
 *******************************************************************
 Successful completion of TABLO.
 The program is
   'gtap.for'.
 
 This program
     o can create the Equations file (for the condensed system)
     o can check 2 ASSERTIONs
     o can carry out multi-step simulations
 
 *******************************************************************
